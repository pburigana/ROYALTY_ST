<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/21/2025 9:02:17 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AGRSW030"
  DTS:CreatorName="ST\paolo burigana"
  DTS:DTSID="{1361AAB6-0577-4474-86A6-DE4DD906207A}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3002.113"
  DTS:LocaleID="1033"
  DTS:ObjectName="Sap_Act"
  DTS:PackageType="5"
  DTS:VersionBuild="6"
  DTS:VersionGUID="{727EE6E7-9F0F-4866-8D3C-C12399707E10}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ROYALTY]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{17E2FA8F-02D6-4108-AE23-B62B6E3A488A}"
      DTS:ObjectName="ROYALTY">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=AGRCLFRSSQLQA.AGRMFG.STMMFG.COM\SRMTST;Initial Catalog=ROYALTY;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Sap_Act - Create permanent tables.sql]"
      DTS:CreationName="FILE"
      DTS:DTSID="{A2C2A184-E8EA-4D2A-8200-816667BBE002}"
      DTS:ObjectName="Sap_Act - Create permanent tables.sql">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="D:\Project\ROYALTY_ST\SQL_Royalty_Sap_Act\Sap_Act - Create permanent tables.sql" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Sap_Act - Create temporary tables.sql]"
      DTS:CreationName="FILE"
      DTS:DTSID="{B73FBA77-7B0C-497E-AD7A-E0CE1D6DB292}"
      DTS:ObjectName="Sap_Act - Create temporary tables.sql">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="D:\Project\ROYALTY_ST\SQL_Royalty_Sap_Act\Sap_Act - Create temporary tables.sql" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Sap_Act - Drop temporary tables.sql]"
      DTS:CreationName="FILE"
      DTS:DTSID="{2EC3674F-1C68-446D-B194-32EF7015A5CC}"
      DTS:ObjectName="Sap_Act - Drop temporary tables.sql">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="D:\Project\ROYALTY_ST\SQL_Royalty_Sap_Act\Sap_Act - Drop temporary tables.sql" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Sap_Act - Extract Month.sql]"
      DTS:CreationName="FILE"
      DTS:DTSID="{D18EC428-0B80-4155-B030-DDE0E62AED6D}"
      DTS:ObjectName="Sap_Act - Extract Month.sql">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="D:\Project\ROYALTY_ST\SQL_Royalty_Sap_Act\Sap_Act - Extract Month.sql" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Sap_Act - Update month list.sql]"
      DTS:CreationName="FILE"
      DTS:DTSID="{829249D5-3C4D-4598-B335-7C6E270B4BB5}"
      DTS:ObjectName="Sap_Act - Update month list.sql">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="D:\Project\ROYALTY_ST\SQL_Royalty_Sap_Act\Sap_Act - Update month list.sql" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2A9C1AE0-1A74-4D98-9000-30B4C97A2AC8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MONTH">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E3FF0CE0-6E52-4270-BA74-84273D577219}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Month_Dt">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach month"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{8DB583BD-E142-4ED8-8066-51065EA71116}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach month">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{67430351-CCB0-44E6-B3F4-FFCC40DE7BA2}"
        DTS:ObjectName="{67430351-CCB0-44E6-B3F4-FFCC40DE7BA2}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::Month_Dt" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach month\Sap_Act - Extract Month"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{d1b4c919-ef6d-442c-bb19-198160cc16f0}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Sap_Act - Extract Month"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{17E2FA8F-02D6-4108-AE23-B62B6E3A488A}"
              SQLTask:SqlStmtSourceType="FileConnection"
              SQLTask:SqlStatementSource="Sap_Act - Extract Month.sql" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::MONTH"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="130"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{90E3757D-6BCC-4447-B3AB-DCB252310CEE}"
          DTS:ObjectName="{90E3757D-6BCC-4447-B3AB-DCB252310CEE}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::MONTH" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sap_Act - Create permanent tables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{465B4364-733F-4DF1-B8EC-0E5A7C5E4C33}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sap_Act - Create permanent tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{17E2FA8F-02D6-4108-AE23-B62B6E3A488A}"
          SQLTask:SqlStmtSourceType="FileConnection"
          SQLTask:SqlStatementSource="Sap_Act - Create permanent tables.sql" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sap_Act - Create temporary tables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{98f26bde-a0de-4674-8446-55b7e39154da}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sap_Act - Create temporary tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{17E2FA8F-02D6-4108-AE23-B62B6E3A488A}"
          SQLTask:SqlStmtSourceType="FileConnection"
          SQLTask:SqlStatementSource="Sap_Act - Create temporary tables.sql" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sap_Act - Drop temporary tables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{b5fde7fe-5b1f-4010-9591-d83f874fd3a7}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sap_Act - Drop temporary tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{17E2FA8F-02D6-4108-AE23-B62B6E3A488A}"
          SQLTask:SqlStmtSourceType="FileConnection"
          SQLTask:SqlStatementSource="Sap_Act - Drop temporary tables.sql" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sap_Act - List months to process"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{342a37b0-e236-4cae-adb0-e7df0bf09973}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sap_Act - List months to process"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_4bfe6b11318f4519a237ff89802b937d"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::Month_Dt">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Settings.get_Default():ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Sett" +
    "ings")]

namespace ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_4bfe6b11318f4519a237ff89802b937d.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a34fd5a7-2aa0-411e-8e0a-92ba694fba95}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a3a8ce533a1f4654a4a4359d9ff77ead</RootNamespace>
    <AssemblyName>ST_4bfe6b11318f4519a237ff89802b937d</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Xml;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Configuration;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Data.OleDb;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Runtime.Enumerators;
#endregion

namespace ST_bf3b0e5b230d407093a5ac476b140609
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {

            // Internal variables
            // -----------------------------------
            bool fireAgain = false;
            //Dts.Events.FireInformation(0, "********", "Product: " + Product, "", 0, ref fireAgain);

            DataTable Month_Pre_Dt = new DataTable();
            Month_Pre_Dt.Columns.Add("MONTH", typeof(string));
            Month_Pre_Dt.Columns.Add("MONTH_COUNT", typeof(double));
            DataSet Month_Pre_Ds = new DataSet();
            string Month_Pre_SqlString = "";
            string MONTH_Pre = "";
            double MONTH_COUNT_Pre = 0;

            DataTable Month_Now_Dt = new DataTable();
            Month_Now_Dt = Month_Pre_Dt.Clone();
            DataSet Month_Now_Ds = new DataSet();
            string Month_Now_SqlString = "";
            string MONTH_Now = "";
            double MONTH_COUNT_Now = 0;

            DataTable Month_Dt = new DataTable();
            Month_Dt.Columns.Add("MONTH", typeof(string));


            // Clean datatable 
            // -----------------------------------
            Month_Pre_Dt.Clear();
            Month_Now_Dt.Clear();
            Month_Dt.Clear();


            // Legge i dati Previous 
            // -----------------------------------
            SqlConnection Month_Pre_SqlConn = new SqlConnection(@"Data Source = AGRCLFRSSQLQA.AGRMFG.STMMFG.COM\SRMTST; Integrated Security=true; Initial Catalog = ROYALTY; Connection Timeout = 0");

            Month_Pre_SqlConn.Open();
            Month_Pre_SqlString = @"
               SELECT
                   [MONTH],
                   [MONTH_COUNT]
               FROM [ROYALTY].[dbo].[ROYALTY_SAP_ACT_MONTH_LAST_UPDATE]
               ORDER BY
                [MONTH] ";
            SqlDataAdapter Month_Pre_SqlAd = new SqlDataAdapter(Month_Pre_SqlString, Month_Pre_SqlConn);
            Month_Pre_SqlAd.Fill(Month_Pre_Ds);
            Month_Pre_Dt = Month_Pre_Ds.Tables[0];
            Month_Pre_SqlConn.Close();



            // Legge i dati Now 
            // -----------------------------------
            SqlConnection Month_Now_SqlConn = new SqlConnection(@"Data Source = AGRCLFRSSQLPR.AGRMFG.STMMFG.COM\SRMPRD; Integrated Security=true; Initial Catalog = PNL; Connection Timeout = 0");

            Month_Now_SqlConn.Open();
            Month_Now_SqlString = @"
               SELECT
                   'M' + LEFT([Period year],4) + RIGHT([Period year],2)			AS [MONTH],
                   COUNT('M' + LEFT([Period year],4) + RIGHT([Period year],2))		AS [MONTH_COUNT]
               FROM [PNL].[dbo].[PNL]
               WHERE
                   LEFT([Period year],4) >= '2022'
               GROUP BY
                   'M' + LEFT([Period year],4) + RIGHT([Period year],2)
               ORDER BY
                   'M' + LEFT([Period year],4) + RIGHT([Period year],2) ";
            SqlDataAdapter Month_Now_SqlAd = new SqlDataAdapter(Month_Now_SqlString, Month_Now_SqlConn);
            Month_Now_SqlAd.Fill(Month_Now_Ds);
            Month_Now_Dt = Month_Now_Ds.Tables[0];
            Month_Now_SqlConn.Close();


            // Crea la lista dei mesi che che sono stati modificati
            // -----------------------------------
            for (int i = 0; i < Month_Now_Dt.Rows.Count; i++)
            {
                // Now
                MONTH_Now = (string)Month_Now_Dt.Rows[i]["MONTH"];
                MONTH_COUNT_Now = Convert.ToDouble(Month_Now_Dt.Rows[i]["MONTH_COUNT"]);

                Dts.Events.FireInformation(0, "********", "Month to elaborate: " + MONTH_Now + "; Nb record : " + MONTH_COUNT_Now.ToString(), "", 0, ref fireAgain);

                DataRow[] FindRows_Month = Month_Pre_Dt.Select("MONTH = '" + MONTH_Now + "'");

                if (FindRows_Month.Length != 0)
                {
                    MONTH_Pre = (string)FindRows_Month[0]["MONTH"];
                    MONTH_COUNT_Pre = (double)FindRows_Month[0]["MONTH_COUNT"];
                }
                else
                {
                    MONTH_Pre = "";
                    MONTH_COUNT_Pre = 0;
                }

                if (MONTH_Pre == MONTH_Now && MONTH_COUNT_Pre == MONTH_COUNT_Now)
                {
                    // Il mese non e' stato modificato
                }
                else
                {
                    // Aggiunge il mese nella lista
                    DataRow row = Month_Dt.NewRow();
                    row["MONTH"] = (string)MONTH_Now;
                    Month_Dt.Rows.Add(row);

                }

            }


            // Esporta datatable
            // ----------------------------------- 
            Dts.Variables["User::Month_Dt"].Value = Month_Dt;



            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_4bfe6b11318f4519a237ff89802b937d</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_4bfe6b11318f4519a237ff89802b937d</msb:DisplayName>
    <msb:ProjectId>{85FAB3D0-F832-4C83-9CB0-9821FF87C01C}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_4bfe6b11318f4519a237ff89802b937d.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a3a8ce533a1f4654a4a4359d9ff77ead")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a3a8ce533a1f4654a4a4359d9ff77ead")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_4bfe6b11318f4519a237ff89802b937d.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADCCLWgAAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAAjjsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADw7AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAlBsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABw
OwAAAAAAAEgAAAACAAUAPCMAAEgXAAABAAAAAAAAAIQ6AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBwB4AgAAAQAAERYKcxAAAAoLB28RAAAKcgEAAHDQHQAA
ASgSAAAKbxMAAAomB28RAAAKcg0AAHDQIQAAASgSAAAKbxMAAAomcxQAAAoMciUAAHANIwAAAAAA
AAAAEwRzEAAAChMFB28VAAAKEwVzFAAAChMGciUAAHATByMAAAAAAAAAABMIcxAAAAoTCREJbxEA
AApyAQAAcNAdAAABKBIAAApvEwAACiYHbxYAAAoRBW8WAAAKEQlvFgAACnInAABwcxcAAAoTChEK
bxgAAApyLAEAcBEKcxkAAAoIbxoAAAomCG8bAAAKFm8cAAAKCxEKbx0AAApy0wIAcHMXAAAKEwsR
C28YAAAKctADAHARC3MZAAAKEQZvGgAACiYRBm8bAAAKFm8cAAAKEwURC28dAAAKFhMMOAkBAAAR
BW8eAAAKEQxvHwAACnIBAABwbyAAAAp0HQAAARMHEQVvHgAAChEMbx8AAApyDQAAcG8gAAAKKCEA
AAoTCAIoIgAACm8jAAAKFnLfBwBwcvEHAHARB3IbCABwEggoJAAACiglAAAKciUAAHAWEgBvJgAA
CgdyOQgAcBEHck0IAHAoJwAACm8oAAAKEw0RDY4sKxENFppyAQAAcG8gAAAKdB0AAAENEQ0WmnIN
AABwbyAAAAqlIQAAARMEKxFyJQAAcA0jAAAAAAAAAAATBAkRBygpAAAKLAYRBBEILiURCW8qAAAK
Ew4RDnIBAABwEQdvKwAAChEJbx4AAAoRDm8sAAAKEQwXWBMMEQwRBW8eAAAKby0AAAo/5P7//wIo
IgAACm8uAAAKclEIAHBvLwAAChEJbzAAAAoCKCIAAAoWbzEAAAoqHgIoMgAACioeAigzAAAKKq5+
AQAABC0ecm8IAHDQAwAAAigSAAAKbzQAAApzNQAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQq
Gn4DAAAEKh4CKDYAAAoqLnMIAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAADUBAAAI34AAEAFAAAQBwAAI1N0cmluZ3MAAAAAUAwAAOQIAAAjVVMANBUAABAAAAAj
R1VJRAAAAEQVAAAEAgAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAALQAAAAUA
AAAGAAAACQAAAAEAAAA2AAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAAAQAA
AAAA4wMBAAAAAAAGAJMCcwUGACIDcwUGAN8BYAUPAOcFAAAGAAwCjwQGAHYCjwQGAFcCjwQGAAkD
jwQGALMCjwQGAMwCjwQGACMCjwQGAD4CUAMKAOcCkgMKAD0BkgMOAKIAVQAOAJoGVQAOAOkEvQYO
AOUGVQAGACkEIgQGAMIBYAUGAIwGIgQGACAFkwUGAAoFegQSAJIBzQMSAPMBzQMSAHQBZQQGAKcB
cwUOALUEVQAGAGwDIgQGAAgBIgQGAL4AIgQOAEoEVQAGALcAIgQOANwE9wQOAEQFvQYOAEcF9wQO
AKEEVQAOAMoEVQAGAN0GIgQKALsDkgMKADAFkgMOAFkBVQAWADQG4gAWAKwA4gAGAPgGjwQAAAAA
JQAAAAAAAQABAAEAEAA/BAEAOQABAAEAAAAQAJoF9gVVAAEAAwAAARAAPgb2BWkAAwAHAAMBAABj
BgAATQAEAAoAEQAuBAgBEQAtAQwBEQCSABABBgZNABQBVoBTBhcBVoANARcBUCAAAAAAhgBFBAYA
AQDUIgAAAACGGFMFBgABANwiAAAAAIMYUwUGAAEA5CIAAAAAkwgcBRsBAQAQIwAAAACTCBUBIAEB
ABcjAAAAAJMIIQElAQEAHyMAAAAAlgiiBisBAgAmIwAAAACGGFMFBgACAC4jAAAAAJEYWQUwAQIA
AAABAEoDCQBTBQEAEQBTBQYAGQBTBQoAKQBTBRAAMQBTBRAAOQBTBRAAQQBTBRAASQBTBRAAUQBT
BRAAWQBTBRAAYQBTBRAAaQBTBQYAoQBTBQYAyQBTBRUA2QBTBQYAeQBTBQYAeQBHBjcA8QDQADwA
4QCOAEMAgQBTBQYAeQACAUwAeQAWBQYAiQBTBRAAEQE6BAYAGQFTBVEAIQELBFgAgQAlBl4AKQEQ
BGQAEQGMAQYAeQB8BmoAMQEQBHAAkQAQBHYAOQG1AHsAcQBbBoAAQQFxBoYACQFqA4wA6QCFBpAA
SQFVBJgA6QCFBqMAeQCTBqoA6QABB7EAeQDtBrcAkQAZBLwAMQGOAMIAUQHTBsgAQQEwBswAWQEQ
BNIAYQFAA9kAQQGuBgEAcQBTBQYAqQBTBQYA8QD0Bt4AsQBTBeQA0QBTBQYACAAUAP4ACAAYAAMB
KQBzAGsBLgALAEMBLgATAEwBLgAbAGsBLgAjAHQBLgArAJ0BLgAzAJ0BLgA7AJ0BLgBDAHQBLgBL
AKMBLgBTAJ0BLgBbALoBQwBjAAMBSQBzAGsBYQB7AAMBYwBrAAMBGwADAAEABAADAAAAIAU0AQAA
NQE5AQAApgY+AQIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAOCRoQwAAAAAAAGoAAAAE
AAAAAAAAAAAAAADsAGEAAAAAAA4AAAAAAAAAAAAAAPUAcwMAAAAABAAAAAAAAAAAAAAA7ABVAAAA
AAAEAAAAAAAAAAAAAADsACIEAAAAAA4AAAAAAAAAAAAAAPUALgAAAAAAAAAAAAEAAACkBQAABQAC
AAAAAAAAU1RfYmYzYjBlNWIyMzBkNDA3MDkzYTVhYzQ3NmIxNDA2MDkAPE1vZHVsZT4ATWljcm9z
b2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU3lzdGVtLkRhdGEAbXNjb3JsaWIAU1Rf
NGJmZTZiMTEzMThmNDUxOWEyMzdmZjg5ODAyYjkzN2QAQWRkAGRlZmF1bHRJbnN0YW5jZQBEYXRh
VGFibGUAVmFyaWFibGUAVG9Eb3VibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBDbG9uZQBUeXBlAEZhaWx1cmUAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1v
ZGVsQmFzZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBDbG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBE
ZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJv
d3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtB
dHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0
dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlv
bnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0
cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAc2V0X1ZhbHVlAHZhbHVlAFN5
c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3Jp
cHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2Jq
ZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzRiZmU2YjExMzE4ZjQ1MTlhMjM3ZmY4
OTgwMmI5MzdkLmRsbABGaWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNl
TWFuAE9wZW4AU2NyaXB0TWFpbgBEYXRhQ29sdW1uAEZpcmVJbmZvcm1hdGlvbgBTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBEYXRhVGFi
bGVDb2xsZWN0aW9uAERhdGFDb2x1bW5Db2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAERiQ29u
bmVjdGlvbgBTcWxDb25uZWN0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBDbGVh
cgBnZXRfUmVzb3VyY2VNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIAU3FsRGF0YUFkYXB0ZXIA
LmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNl
cnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYTNhOGNlNTMzYTFmNDY1NGE0YTQzNTlkOWZmNzdl
YWQuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2EzYThj
ZTUzM2ExZjQ2NTRhNGE0MzU5ZDlmZjc3ZWFkLlByb3BlcnRpZXMAZ2V0X1RhYmxlcwBnZXRfVmFy
aWFibGVzAFNldHRpbmdzAGdldF9Db2x1bW5zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRz
AGdldF9FdmVudHMAZ2V0X1Jvd3MAQ29uY2F0AE9iamVjdABTZWxlY3QARGF0YVNldABnZXRfRGVm
YXVsdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAZ2V0X0NvdW50AENvbnZl
cnQARGF0YVJvdwBOZXdSb3cAZ2V0X0Fzc2VtYmx5AG9wX0VxdWFsaXR5AAAAAAALTQBPAE4AVABI
AAAXTQBPAE4AVABIAF8AQwBPAFUATgBUAAABAIEDRABhAHQAYQAgAFMAbwB1AHIAYwBlACAAPQAg
AEEARwBSAEMATABGAFIAUwBTAFEATABRAEEALgBBAEcAUgBNAEYARwAuAFMAVABNAE0ARgBHAC4A
QwBPAE0AXABTAFIATQBUAFMAVAA7ACAASQBuAHQAZQBnAHIAYQB0AGUAZAAgAFMAZQBjAHUAcgBp
AHQAeQA9AHQAcgB1AGUAOwAgAEkAbgBpAHQAaQBhAGwAIABDAGEAdABhAGwAbwBnACAAPQAgAFIA
TwBZAEEATABUAFkAOwAgAEMAbwBuAG4AZQBjAHQAaQBvAG4AIABUAGkAbQBlAG8AdQB0ACAAPQAg
ADAAAIGlDQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMARQBMAEUAQwBUAA0ACgAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFsATQBPAE4AVABIAF0ALAANAAoA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABbAE0ATwBOAFQASABfAEMATwBV
AE4AVABdAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABGAFIATwBNACAAWwBSAE8A
WQBBAEwAVABZAF0ALgBbAGQAYgBvAF0ALgBbAFIATwBZAEEATABUAFkAXwBTAEEAUABfAEEAQwBU
AF8ATQBPAE4AVABIAF8ATABBAFMAVABfAFUAUABEAEEAVABFAF0ADQAKACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgAE8AUgBEAEUAUgAgAEIAWQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIABbAE0ATwBOAFQASABdACAAAID7RABhAHQAYQAgAFMAbwB1AHIAYwBlACAAPQAg
AEEARwBSAEMATABGAFIAUwBTAFEATABQAFIALgBBAEcAUgBNAEYARwAuAFMAVABNAE0ARgBHAC4A
QwBPAE0AXABTAFIATQBQAFIARAA7ACAASQBuAHQAZQBnAHIAYQB0AGUAZAAgAFMAZQBjAHUAcgBp
AHQAeQA9AHQAcgB1AGUAOwAgAEkAbgBpAHQAaQBhAGwAIABDAGEAdABhAGwAbwBnACAAPQAgAFAA
TgBMADsAIABDAG8AbgBuAGUAYwB0AGkAbwBuACAAVABpAG0AZQBvAHUAdAAgAD0AIAAwAACEDQ0A
CgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABTAEUATABFAEMAVAANAAoAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAnAE0AJwAgACsAIABMAEUARgBUACgAWwBQAGUA
cgBpAG8AZAAgAHkAZQBhAHIAXQAsADQAKQAgACsAIABSAEkARwBIAFQAKABbAFAAZQByAGkAbwBk
ACAAeQBlAGEAcgBdACwAMgApAAkACQAJAEEAUwAgAFsATQBPAE4AVABIAF0ALAANAAoAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABDAE8AVQBOAFQAKAAnAE0AJwAgACsAIABM
AEUARgBUACgAWwBQAGUAcgBpAG8AZAAgAHkAZQBhAHIAXQAsADQAKQAgACsAIABSAEkARwBIAFQA
KABbAFAAZQByAGkAbwBkACAAeQBlAGEAcgBdACwAMgApACkACQAJAEEAUwAgAFsATQBPAE4AVABI
AF8AQwBPAFUATgBUAF0ADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEYAUgBPAE0A
IABbAFAATgBMAF0ALgBbAGQAYgBvAF0ALgBbAFAATgBMAF0ADQAKACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgAFcASABFAFIARQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIABMAEUARgBUACgAWwBQAGUAcgBpAG8AZAAgAHkAZQBhAHIAXQAsADQAKQAgAD4APQAg
ACcAMgAwADIAMgAnAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABHAFIATwBVAFAA
IABCAFkADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAJwBNACcAIAAr
ACAATABFAEYAVAAoAFsAUABlAHIAaQBvAGQAIAB5AGUAYQByAF0ALAA0ACkAIAArACAAUgBJAEcA
SABUACgAWwBQAGUAcgBpAG8AZAAgAHkAZQBhAHIAXQAsADIAKQANAAoAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAATwBSAEQARQBSACAAQgBZAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACcATQAnACAAKwAgAEwARQBGAFQAKABbAFAAZQByAGkAbwBkACAAeQBl
AGEAcgBdACwANAApACAAKwAgAFIASQBHAEgAVAAoAFsAUABlAHIAaQBvAGQAIAB5AGUAYQByAF0A
LAAyACkAIAABESoAKgAqACoAKgAqACoAKgAAKU0AbwBuAHQAaAAgAHQAbwAgAGUAbABhAGIAbwBy
AGEAdABlADoAIAAAHTsAIABOAGIAIAByAGUAYwBvAHIAZAAgADoAIAAAE00ATwBOAFQASAAgAD0A
IAAnAAEDJwABHVUAcwBlAHIAOgA6AE0AbwBuAHQAaABfAEQAdAAAcVMAVABfAGEAMwBhADgAYwBl
ADUAMwAzAGEAMQBmADQANgA1ADQAYQA0AGEANAAzADUAOQBkADkAZgBmADcANwBlAGEAZAAuAFAA
cgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAAJYWgHxW07kuqQrKiQcVD
VQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERYRsHDwISPRJBDg0SPRJBDg0SPRJFEkUIHRJJEkkE
IAAScQYAARJ5EX0IIAISgIEOEnkEIAASPQYgAgEOEkUFIAEIEkEFIAASgJUFIAESPQgFIAASgJkF
IAESSQgEIAEcDgQAAQ0cBSAAEoChBSAAEoClAyAADgcABA4ODg4OCiAGAQgODg4IEAIGAAMODg4O
BiABHRJJDgUAAgIODgQgABJJBSACAQ4cBSABARJJAyAACAUgABKArQYgARKAsRwEIAEBHAUgABKA
tQcgAgEOEoC1CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElkDBhJdAwYSEAIGCAMGERQE
AAASWQQAABJdBQABARJdBAAAEhADAAABBAgAElkECAASXQQIABIQCAEACAAAAAAAHgEAAQBUAhZX
cmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9hM2E4Y2U1MzNhMWY0NjU0YTRh
NDM1OWQ5ZmY3N2VhZAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIyAABJAQAaLk5FVEZyYW1l
d29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3Jr
IDQuNbQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAABkOwAAAAAAAAAAAAB+OwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
cDsAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQBoQzgkAAABAGhDOCQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfAGEAMwBhADgAYwBlADUAMwAzAGEAMQBmADQANgA1ADQAYQA0AGEANAAzADUAOQBkADkAZgBm
ADcANwBlAGEAZAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA5ADIA
NwAyAC4AMQA3ADIANQA2AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
ADQAYgBmAGUANgBiADEAMQAzADEAOABmADQANQAxADkAYQAyADMANwBmAGYAOAA5ADgAMAAyAGIA
OQAzADcAZAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAyAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8ANABiAGYAZQA2AGIAMQAxADMAMQA4AGYANAA1ADEAOQBhADIAMwA3AGYAZgA4ADkA
OAAwADIAYgA5ADMANwBkAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfAGEAMwBhADgAYwBlADUAMwAzAGEAMQBmADQANgA1ADQAYQA0AGEANAAzADUAOQBkADkA
ZgBmADcANwBlAGEAZAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AOQAyADcAMgAuADEANwAyADUANgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4AOQAyADcAMgAuADEANwAyADUANgAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACQOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sap_Act - List months to process - MANUAL"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{47a4ebd9-dba5-45c8-a577-673b1863e83d}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sap_Act - List months to process - MANUAL"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_c5b8a9be33a04539a4d407263e62b3c0"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::Month_Dt">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Settings.get_Default():ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Sett" +
    "ings")]

namespace ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_c5b8a9be33a04539a4d407263e62b3c0.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a34fd5a7-2aa0-411e-8e0a-92ba694fba95}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a3a8ce533a1f4654a4a4359d9ff77ead</RootNamespace>
    <AssemblyName>ST_c5b8a9be33a04539a4d407263e62b3c0</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Xml;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Configuration;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Data.OleDb;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Runtime.Enumerators;
#endregion

namespace ST_bf3b0e5b230d407093a5ac476b140609
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {

            // -----------------------------------
            DataTable Month_Dt = new DataTable();
            Month_Dt.Columns.Add("MONTH", typeof(string));

            Month_Dt.Rows.Add(new object[] { "M202501" });
            Month_Dt.Rows.Add(new object[] { "M202502" });
            Month_Dt.Rows.Add(new object[] { "M202503" });
            Month_Dt.Rows.Add(new object[] { "M202504" });
            Month_Dt.Rows.Add(new object[] { "M202505" });


            // Esporta datatable
            // ----------------------------------- 
            Dts.Variables["User::Month_Dt"].Value = Month_Dt;




            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_c5b8a9be33a04539a4d407263e62b3c0</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_c5b8a9be33a04539a4d407263e62b3c0</msb:DisplayName>
    <msb:ProjectId>{C792135D-BD1F-4C87-8ED9-5EA094203707}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_c5b8a9be33a04539a4d407263e62b3c0.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a3a8ce533a1f4654a4a4359d9ff77ead")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a3a8ce533a1f4654a4a4359d9ff77ead")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_c5b8a9be33a04539a4d407263e62b3c0.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAH2CLWgAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAei8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACgvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAgA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABc
LwAAAAAAAEgAAAACAAUAkCEAAOAMAAABAAAAAAAAAHAuAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBQDLAAAAAQAAEXMQAAAKCgZvEQAACnIBAABw0BoAAAEo
EgAACm8TAAAKJgZvFAAACheNEgAAASUWcg0AAHCibxUAAAomBm8UAAAKF40SAAABJRZyHQAAcKJv
FQAACiYGbxQAAAoXjRIAAAElFnItAABwom8VAAAKJgZvFAAACheNEgAAASUWcj0AAHCibxUAAAom
Bm8UAAAKF40SAAABJRZyTQAAcKJvFQAACiYCKBYAAApvFwAACnJdAABwbxgAAAoGbxkAAAoCKBYA
AAoWbxoAAAoqHgIoGwAACioeAigcAAAKKq5+AQAABC0ecnsAAHDQAwAAAigSAAAKbx0AAApzHgAA
CoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKB8AAAoqLnMIAAAGgAMAAAQqAAAA
QlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAADAQAACN+AAB4BAAA6AUAACNTdHJp
bmdzAAAAAGAKAADwAAAAI1VTAFALAAAQAAAAI0dVSUQAAABgCwAAgAEAACNCbG9iAAAAAAAAAAIA
AAFXHaIBCQMAAAD6ATMAFgAAAQAAACMAAAAFAAAABgAAAAkAAAABAAAAHwAAAAIAAAAQAAAAAQAA
AAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAALEDAQAAAAAABgBjArMEBgDyArMEBgCvAaAE
DwAnBQAABgDcAToEBgBGAjoEBgAnAjoEBgDZAjoEBgCDAjoEBgCcAjoEBgDzAToEBgAOAiADCgC3
AmADCgAuAWADDgCiAHkABgDpA+IDBgCSAaAEBgCvBeIDBgCDBNMEBgBzBCUEEgBiAZsDEgDDAZsD
EgBKARAEBgB3AbMEDgBMBHkABgA6A+IDBgD5AOIDBgC1AOIDDgAFBHkADgBhBHkADgDRBXkACgCJ
A2ADFgBpBdkAFgCsANkABgDdBToEAAAAAEkAAAAAAAEAAQABABAA+gMlADkAAQABAAAAEADaBDYF
SQABAAMAAAEQAHMFNgVdAAMABwADAQAAmAUAAEEABAAKABEA7gOCABEAHgGGABEAkgCKAAYGcQCO
AFaAiAWRAFaA/gCRAFAgAAAAAIYAAAQGAAEAJyEAAAAAhhiTBAYAAQAvIQAAAACDGJMEBgABADch
AAAAAJMIfwSVAAEAYyEAAAAAkwgGAZoAAQBqIQAAAACTCBIBnwABAHIhAAAAAJYItgWlAAIAeSEA
AAAAhhiTBAYAAgCBIQAAAACRGJkEqgACAAAAAQAaAwkAkwQBABEAkwQGABkAkwQKACkAkwQQADEA
kwQQADkAkwQQAEEAkwQQAEkAkwQQAFEAkwQQAFkAkwQQAGEAkwQQAGkAkwQGAIkAkwQGALEAkwQV
AMEAkwQGAHkAkwQGAHkAfAUgANkAxwAlAMkAjgAsAHkApgU0APEAjgA5AHEAkAVAAAEBZQVGAAkB
2QNMABEBEANTAAEBwgUBAHEAkwQGAJEAkwQGANkA2QVYAJkAkwReALkAkwQGAAgAFAB4AAgAGAB9
ACkAcwDlAC4ACwC9AC4AEwDGAC4AGwDlAC4AIwDuAC4AKwAXAS4AMwAXAS4AOwAXAS4AQwDuAC4A
SwAdAS4AUwAXAS4AWwA0AUMAYwB9AEkAcwDlAGEAewB9AGMAawB9ABsAAwABAAQAAwAAAIMErgAA
ACYBswAAALoFuAACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAADgkjkMAAAAAAAABAAAA
BAAAAAAAAAAAAAAAZgCFAAAAAAAOAAAAAAAAAAAAAABvAEEDAAAAAAQAAAAAAAAAAAAAAGYAeQAA
AAAABAAAAAAAAAAAAAAAZgDiAwAAAAAOAAAAAAAAAAAAAABvAFIAAAAAAAAAAAABAAAA5AQAAAUA
AgAAAABTVF9jNWI4YTliZTMzYTA0NTM5YTRkNDA3MjYzZTYyYjNjMABTVF9iZjNiMGU1YjIzMGQ0
MDcwOTNhNWFjNDc2YjE0MDYwOQA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMAdmFsdWVfXwBTeXN0ZW0uRGF0YQBtc2NvcmxpYgBBZGQAZGVmYXVsdEluc3RhbmNlAERhdGFU
YWJsZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3Vs
dHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0
aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0
cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRy
YWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25S
ZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5
cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBzZXRfVmFsdWUA
dmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZl
ci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2Ny
aXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2M1YjhhOWJlMzNhMDQ1Mzlh
NGQ0MDcyNjNlNjJiM2MwLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3Jp
cHRNYWluAERhdGFDb2x1bW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRp
b24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0YUNvbHVtbkNvbGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rp
b24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRp
YWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNl
cwBTVF9hM2E4Y2U1MzNhMWY0NjU0YTRhNDM1OWQ5ZmY3N2VhZC5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfYTNhOGNlNTMzYTFmNDY1NGE0YTQzNTlkOWZm
NzdlYWQuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAGdldF9Db2x1bW5zAFN1Y2Nl
c3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9Sb3dzAE9iamVjdABnZXRfRGVmYXVsdABzZXRf
VGFza1Jlc3VsdABEYXRhUm93AGdldF9Bc3NlbWJseQAAAAALTQBPAE4AVABIAAAPTQAyADAAMgA1
ADAAMQAAD00AMgAwADIANQAwADIAAA9NADIAMAAyADUAMAAzAAAPTQAyADAAMgA1ADAANAAAD00A
MgAwADIANQAwADUAAB1VAHMAZQByADoAOgBNAG8AbgB0AGgAXwBEAHQAAHFTAFQAXwBhADMAYQA4
AGMAZQA1ADMAMwBhADEAZgA0ADYANQA0AGEANABhADQAMwA1ADkAZAA5AGYAZgA3ADcAZQBhAGQA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAABK4/Q83bilLpd02
nvo46U8ABCABAQgDIAABBSABARERBCABAQ4FIAEBEVUEBwESPQQgABJlBgABEm0RcQcgAhJ1DhJt
BCAAEnkGIAESfR0cBSAAEoCBBSAAEoCFBiABEoCJHAQgAQEcBSAAEoCNByACAQ4SgI0It3pcVhk0
4IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSTQMGElEDBhIQAgYIAwYRFAQAABJNBAAAElEFAAEBElEE
AAASEAMAAAEECAASTQQIABJRBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25U
aHJvd3MBCAEAAgAAAAAAKAEAI1NUX2EzYThjZTUzM2ExZjQ2NTRhNGE0MzU5ZDlmZjc3ZWFkAAAF
AQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjIAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQu
NQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41AAC0AAAAzsrvvgEA
AACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9u
PTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4
OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0
AAAAUC8AAAAAAAAAAAAAai8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFwvAAAAAAAAAAAAAAAA
X0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQCOQzgkAAABAI5DOCQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGEAMwBhADgAYwBlADUAMwAzAGEAMQBmADQANgA1ADQAYQA0AGEANAAzADUAOQBk
ADkAZgBmADcANwBlAGEAZAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA5ADIANwAyAC4AMQA3ADIAOQA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGMANQBiADgAYQA5AGIAZQAzADMAYQAwADQANQAzADkAYQA0AGQANAAwADcAMgA2ADMA
ZQA2ADIAYgAzAGMAMAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAyAAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AYwA1AGIAOABhADkAYgBlADMAMwBhADAANAA1ADMAOQBhADQAZAA0ADAA
NwAyADYAMwBlADYAMgBiADMAYwAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGEAMwBhADgAYwBlADUAMwAzAGEAMQBmADQANgA1ADQAYQA0AGEANAAzADUA
OQBkADkAZgBmADcANwBlAGEAZAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOQAyADcAMgAuADEANwAyADkANAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAyADcAMgAuADEANwAyADkANAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAB8PwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sap_Act - Update moth list"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{20883dad-f299-4328-a8f9-b0a62e4bbca0}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sap_Act - Update moth list"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{17E2FA8F-02D6-4108-AE23-B62B6E3A488A}"
          SQLTask:SqlStmtSourceType="FileConnection"
          SQLTask:SqlStatementSource="Sap_Act - Update month list.sql" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{97A02A4D-E8E0-47D1-BA9A-A6D9440B1523}"
      DTS:From="Package\Sap_Act - Create permanent tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Sap_Act - Create temporary tables" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{1A00F18F-4EC1-4AE2-9A66-93A00E405224}"
      DTS:From="Package\Sap_Act - Create temporary tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Sap_Act - List months to process" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{B5D18034-6FF6-40B1-8AF5-5C58DB785912}"
      DTS:From="Package\Sap_Act - Create temporary tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Sap_Act - List months to process - MANUAL" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{54B4D359-D45B-4F08-8DF4-F230399C8062}"
      DTS:From="Package\Sap_Act - List months to process - MANUAL"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Foreach month" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{F79E5012-CBE1-40DF-8128-BBC4F24DDF55}"
      DTS:From="Package\Sap_Act - List months to process"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Foreach month" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{D01F2403-7A02-43A2-81EB-6275CCE8CD2A}"
      DTS:From="Package\Foreach month"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Sap_Act - Update moth list" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{068B492E-6202-4F83-8117-99813682164E}"
      DTS:From="Package\Sap_Act - Update moth list"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Sap_Act - Drop temporary tables" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="244,42"
          Id="Package\Sap_Act - Create permanent tables"
          TopLeft="320.5,5.5" />
        <NodeLayout
          Size="241,42"
          Id="Package\Sap_Act - Create temporary tables"
          TopLeft="322,107.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="442.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="234,42"
          Id="Package\Sap_Act - List months to process"
          TopLeft="5.50000000000006,209.5" />
        <NodeLayout
          Size="285,42"
          Id="Package\Sap_Act - List months to process - MANUAL"
          TopLeft="300,209.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="403.666666666667,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-281.166666666667,60"
              Start="0,0"
              End="-281.166666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.237427864798" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.237427864798"
                    Point2="0,24.237427864798"
                    Point3="-4,24.237427864798" />
                  <mssgle:LineSegment
                    End="-277.166666666667,24.237427864798" />
                  <mssgle:CubicBezierSegment
                    Point1="-277.166666666667,24.237427864798"
                    Point2="-281.166666666667,24.237427864798"
                    Point3="-281.166666666667,28.237427864798" />
                  <mssgle:LineSegment
                    End="-281.166666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="481.333333333333,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-38.8333333333333,60"
              Start="0,0"
              End="-38.8333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.237427864798" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.237427864798"
                    Point2="0,24.237427864798"
                    Point3="-4,24.237427864798" />
                  <mssgle:LineSegment
                    End="-34.8333333333333,24.237427864798" />
                  <mssgle:CubicBezierSegment
                    Point1="-34.8333333333333,24.237427864798"
                    Point2="-38.8333333333333,24.237427864798"
                    Point3="-38.8333333333333,28.237427864798" />
                  <mssgle:LineSegment
                    End="-38.8333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="193,42"
          Id="Package\Foreach month\Sap_Act - Extract Month"
          TopLeft="5.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="204,102"
          Size="204,146"
          Id="Package\Foreach month"
          TopLeft="340.5,311.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="442.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32.6666666666667,60"
              Start="0,0"
              End="32.6666666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7198443579767" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7198443579767"
                    Point2="0,35.7198443579767"
                    Point3="4,35.7198443579767" />
                  <mssgle:LineSegment
                    End="28.6666666666667,35.7198443579767" />
                  <mssgle:CubicBezierSegment
                    Point1="28.6666666666667,35.7198443579767"
                    Point2="32.6666666666667,35.7198443579767"
                    Point3="32.6666666666667,39.7198443579767" />
                  <mssgle:LineSegment
                    End="32.6666666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="122.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="287.333333333333,60"
              Start="0,0"
              End="287.333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7198443579767" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.7198443579767"
                    Point2="0,35.7198443579767"
                    Point3="4,35.7198443579767" />
                  <mssgle:LineSegment
                    End="283.333333333333,35.7198443579767" />
                  <mssgle:CubicBezierSegment
                    Point1="283.333333333333,35.7198443579767"
                    Point2="287.333333333333,35.7198443579767"
                    Point3="287.333333333333,39.7198443579767" />
                  <mssgle:LineSegment
                    End="287.333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="205,42"
          Id="Package\Sap_Act - Update moth list"
          TopLeft="340,517.5" />
        <NodeLayout
          Size="233,42"
          Id="Package\Sap_Act - Drop temporary tables"
          TopLeft="326,619.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="442.5,457.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="442.5,559.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>
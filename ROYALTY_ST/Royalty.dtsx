<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/21/2025 9:01:45 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AGRSW030"
  DTS:CreatorName="ST\paolo burigana"
  DTS:DTSID="{F86B42C6-45A4-40CC-B331-43F2BA6FD3F1}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3002.113"
  DTS:LocaleID="1033"
  DTS:ObjectName="Royalty"
  DTS:PackageType="5"
  DTS:VersionBuild="22"
  DTS:VersionGUID="{4BFBD1EB-FA41-4979-8DE6-5503B626E885}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Create permanent tables.sql]"
      DTS:CreationName="FILE"
      DTS:DTSID="{DAA0F7D9-08EA-4EF3-9FEC-48CCC2E2C26E}"
      DTS:ObjectName="Create permanent tables.sql">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="D:\Project\ROYALTY_ST\SQL_Royalty\Create permanent tables.sql" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Create temporary tables.sql]"
      DTS:CreationName="FILE"
      DTS:DTSID="{9B34EC4B-ED9A-4F1B-ABE7-B2284909E1C3}"
      DTS:ObjectName="Create temporary tables.sql">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="D:\Project\ROYALTY_ST\SQL_Royalty\Create temporary tables.sql" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Drop temporary tables.sql]"
      DTS:CreationName="FILE"
      DTS:DTSID="{92A3EE67-2698-4B8F-9860-6AD77A02A573}"
      DTS:ObjectName="Drop temporary tables.sql">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="D:\Project\ROYALTY_ST\SQL_Royalty\Drop temporary tables.sql" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[EPM]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{17E2FA8F-02D6-4108-AE23-B62B6E3A488A}"
      DTS:ObjectName="EPM">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=AGRCLFRSSQLPR.AGRMFG.STMMFG.COM\SRMPRD;Initial Catalog=EPM;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[MD]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{c5d09692-5ed7-4609-80a5-44793db1a749}"
      DTS:ObjectName="MD">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=AGRCLFRSSQLPR.AGRMFG.STMMFG.COM\SRMPRD;Initial Catalog=MD;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Reorg All.sql]"
      DTS:CreationName="FILE"
      DTS:DTSID="{C535F784-9F1B-4619-AB4A-0B1B2BDCBC5B}"
      DTS:ObjectName="Reorg All.sql">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="D:\Project\ROYALTY_ST\SQL_Royalty\Reorg All.sql" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ROYALTY]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{99b06ae1-6b55-4c3f-b639-50e988b8156d}"
      DTS:ObjectName="ROYALTY">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=AGRCLFRSSQLQA.AGRMFG.STMMFG.COM\SRMTST;Initial Catalog=ROYALTY;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP Connection Manager]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{A300F8DF-8CD4-44A7-BD10-0F9E76E438EA}"
      DTS:ObjectName="SMTP Connection Manager">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=smtpapp1.agr.st.com;UseWindowsAuthentication=False;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B7C4F2DF-A54A-442F-B065-8F1150F160A4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Agreement">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E16A4702-1163-4DD3-95B9-BC5834F1871D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Agreement_Dt">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{29142DEB-C900-4D26-A1E3-03EBC566E691}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Exchange_Dt">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{814FFF56-E0E9-4923-83E8-C1DF814FE662}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Init_Dt">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{26127E6A-03D5-4E94-9C75-4EAF796139A1}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="List_Agreement_Dt">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5748DB92-FBAD-467C-812F-431A869C0CDB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="List_Plan_Dt">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DCB4821C-2949-4C64-AB33-AE799EE5CE69}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="List_Quarter_Actual_Dt">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D1C9D309-32E7-4761-BCF6-1F03119C4A6B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Plan">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4AADE80C-E0CD-4535-A5F4-8EBCFA2EE979}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Royalty_Cum_Dt">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{038AC823-87C1-4F57-A2A6-EE152DE50957}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Royalty_Dt">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0EC3101F-8ECA-4C96-9CB1-9DC9E9AD3784}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SapAct_Forecast_Dt">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create datatables"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{96aeb0a1-3def-43b5-a0df-9cdb1efb0a2d}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create datatables"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_ac24b4632fd04c499f9c0b30d6944333"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::Agreement_Dt,User::Exchange_Dt,User::Init_Dt,User::List_Agreement_Dt,User::List_Plan_Dt,User::List_Quarter_Actual_Dt,User::Royalty_Cum_Dt,User::Royalty_Dt,User::SapAct_Forecast_Dt">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Settings.get_Default():ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Sett" +
    "ings")]

namespace ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Xml;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Configuration;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Data.OleDb;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Runtime.Enumerators;
#endregion

namespace ST_bf3b0e5b230d407093a5ac476b140609
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {

            // -----------------------------------
            DataTable Agreement_Dt = new DataTable();
            Agreement_Dt.Columns.Add("AGREEMENT_ID", typeof(string));
            Agreement_Dt.Columns.Add("AGREEMENT", typeof(string));
            Agreement_Dt.Columns.Add("VERSION_DATE", typeof(string));
            Agreement_Dt.Columns.Add("VERSION_DESCR", typeof(string));
            Agreement_Dt.Columns.Add("MODEL_ACTIVE", typeof(string));
            Agreement_Dt.Columns.Add("MODEL_INITIAL_MONTH", typeof(string));
            Agreement_Dt.Columns.Add("MODEL_FINAL_MONTH", typeof(string));
            Agreement_Dt.Columns.Add("MODEL_TYPE", typeof(string));
            Agreement_Dt.Columns.Add("MODEL_CURRENCY", typeof(string));
            Agreement_Dt.Columns.Add("MODEL_NB_SLOT", typeof(double));
            Agreement_Dt.Columns.Add("MODEL_MIN_ACCUMULATED_ROYALTY", typeof(double));
            Agreement_Dt.Columns.Add("MODEL_MIN_EACH_YEAR_ROYALTY", typeof(double));
            Agreement_Dt.Columns.Add("MODEL_MIN_EACH_QUARTER_ROYALTY", typeof(double));
            Agreement_Dt.Columns.Add("MODEL_MAX_ACCUMULATED_ROYALTY", typeof(double));
            Agreement_Dt.Columns.Add("MODEL_MAX_EACH_YEAR_ROYALTY", typeof(double));
            Agreement_Dt.Columns.Add("MODEL_MAX_EACH_QUARTER_ROYALTY", typeof(double));
            Agreement_Dt.Columns.Add("SELECTION_PL_LIST", typeof(string));
            Agreement_Dt.Columns.Add("SELECTION_CP_LIST", typeof(string));
            Agreement_Dt.Columns.Add("SELECTION_CP_CONDITION", typeof(string));
            Agreement_Dt.Columns.Add("SELECTION_CUSTOMER_FINAL_LIST", typeof(string));
            Agreement_Dt.Columns.Add("SELECTION_CUSTOMER_FINAL_CONDITION", typeof(string));
            Agreement_Dt.Columns.Add("SELECTION_CUSTOMER_FINAL_TYPE_LIST", typeof(string));
            Agreement_Dt.Columns.Add("SELECTION_CUSTOMER_FINAL_TYPE_CONDITION", typeof(string));
            Agreement_Dt.Columns.Add("SELECTION_CUSTOMER_FINAL_GROUP_LIST", typeof(string));
            Agreement_Dt.Columns.Add("SELECTION_CUSTOMER_FINAL_GROUP_CONDITION", typeof(string));
            Agreement_Dt.Columns.Add("SELECTION_CUSTOMER_FINAL_SHIPTO_LIST", typeof(string));
            Agreement_Dt.Columns.Add("SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION", typeof(string));
            Agreement_Dt.Columns.Add("SLOT01_MESSAGE", typeof(string));
            Agreement_Dt.Columns.Add("SLOT01_START", typeof(double));
            Agreement_Dt.Columns.Add("SLOT01_END", typeof(double));
            Agreement_Dt.Columns.Add("SLOT01_RATE", typeof(double));
            Agreement_Dt.Columns.Add("SLOT01_MIN", typeof(double));
            Agreement_Dt.Columns.Add("SLOT01_MAX", typeof(double));
            Agreement_Dt.Columns.Add("SLOT01_A", typeof(string));
            Agreement_Dt.Columns.Add("SLOT01_B", typeof(string));
            Agreement_Dt.Columns.Add("SLOT01_C", typeof(string));
            Agreement_Dt.Columns.Add("SLOT01_D", typeof(string));
            Agreement_Dt.Columns.Add("SLOT01_E", typeof(string));
            Agreement_Dt.Columns.Add("SLOT01_F", typeof(string));
            Agreement_Dt.Columns.Add("SLOT01_G", typeof(string));
            Agreement_Dt.Columns.Add("SLOT01_H", typeof(string));
            Agreement_Dt.Columns.Add("SLOT02_MESSAGE", typeof(string));
            Agreement_Dt.Columns.Add("SLOT02_START", typeof(double));
            Agreement_Dt.Columns.Add("SLOT02_END", typeof(double));
            Agreement_Dt.Columns.Add("SLOT02_RATE", typeof(double));
            Agreement_Dt.Columns.Add("SLOT02_MIN", typeof(double));
            Agreement_Dt.Columns.Add("SLOT02_MAX", typeof(double));
            Agreement_Dt.Columns.Add("SLOT02_A", typeof(string));
            Agreement_Dt.Columns.Add("SLOT02_B", typeof(string));
            Agreement_Dt.Columns.Add("SLOT02_C", typeof(string));
            Agreement_Dt.Columns.Add("SLOT02_D", typeof(string));
            Agreement_Dt.Columns.Add("SLOT02_E", typeof(string));
            Agreement_Dt.Columns.Add("SLOT02_F", typeof(string));
            Agreement_Dt.Columns.Add("SLOT02_G", typeof(string));
            Agreement_Dt.Columns.Add("SLOT02_H", typeof(string));
            Agreement_Dt.Columns.Add("SLOT03_MESSAGE", typeof(string));
            Agreement_Dt.Columns.Add("SLOT03_START", typeof(double));
            Agreement_Dt.Columns.Add("SLOT03_END", typeof(double));
            Agreement_Dt.Columns.Add("SLOT03_RATE", typeof(double));
            Agreement_Dt.Columns.Add("SLOT03_MIN", typeof(double));
            Agreement_Dt.Columns.Add("SLOT03_MAX", typeof(double));
            Agreement_Dt.Columns.Add("SLOT03_A", typeof(string));
            Agreement_Dt.Columns.Add("SLOT03_B", typeof(string));
            Agreement_Dt.Columns.Add("SLOT03_C", typeof(string));
            Agreement_Dt.Columns.Add("SLOT03_D", typeof(string));
            Agreement_Dt.Columns.Add("SLOT03_E", typeof(string));
            Agreement_Dt.Columns.Add("SLOT03_F", typeof(string));
            Agreement_Dt.Columns.Add("SLOT03_G", typeof(string));
            Agreement_Dt.Columns.Add("SLOT03_H", typeof(string));
            Agreement_Dt.Columns.Add("SLOT04_MESSAGE", typeof(string));
            Agreement_Dt.Columns.Add("SLOT04_START", typeof(double));
            Agreement_Dt.Columns.Add("SLOT04_END", typeof(double));
            Agreement_Dt.Columns.Add("SLOT04_RATE", typeof(double));
            Agreement_Dt.Columns.Add("SLOT04_MIN", typeof(double));
            Agreement_Dt.Columns.Add("SLOT04_MAX", typeof(double));
            Agreement_Dt.Columns.Add("SLOT04_A", typeof(string));
            Agreement_Dt.Columns.Add("SLOT04_B", typeof(string));
            Agreement_Dt.Columns.Add("SLOT04_C", typeof(string));
            Agreement_Dt.Columns.Add("SLOT04_D", typeof(string));
            Agreement_Dt.Columns.Add("SLOT04_E", typeof(string));
            Agreement_Dt.Columns.Add("SLOT04_F", typeof(string));
            Agreement_Dt.Columns.Add("SLOT04_G", typeof(string));
            Agreement_Dt.Columns.Add("SLOT04_H", typeof(string));
            Agreement_Dt.Columns.Add("SLOT05_MESSAGE", typeof(string));
            Agreement_Dt.Columns.Add("SLOT05_START", typeof(double));
            Agreement_Dt.Columns.Add("SLOT05_END", typeof(double));
            Agreement_Dt.Columns.Add("SLOT05_RATE", typeof(double));
            Agreement_Dt.Columns.Add("SLOT05_MIN", typeof(double));
            Agreement_Dt.Columns.Add("SLOT05_MAX", typeof(double));
            Agreement_Dt.Columns.Add("SLOT05_A", typeof(string));
            Agreement_Dt.Columns.Add("SLOT05_B", typeof(string));
            Agreement_Dt.Columns.Add("SLOT05_C", typeof(string));
            Agreement_Dt.Columns.Add("SLOT05_D", typeof(string));
            Agreement_Dt.Columns.Add("SLOT05_E", typeof(string));
            Agreement_Dt.Columns.Add("SLOT05_F", typeof(string));
            Agreement_Dt.Columns.Add("SLOT05_G", typeof(string));
            Agreement_Dt.Columns.Add("SLOT05_H", typeof(string));
            Agreement_Dt.Columns.Add("SLOT06_MESSAGE", typeof(string));
            Agreement_Dt.Columns.Add("SLOT06_START", typeof(double));
            Agreement_Dt.Columns.Add("SLOT06_END", typeof(double));
            Agreement_Dt.Columns.Add("SLOT06_RATE", typeof(double));
            Agreement_Dt.Columns.Add("SLOT06_MIN", typeof(double));
            Agreement_Dt.Columns.Add("SLOT06_MAX", typeof(double));
            Agreement_Dt.Columns.Add("SLOT06_A", typeof(string));
            Agreement_Dt.Columns.Add("SLOT06_B", typeof(string));
            Agreement_Dt.Columns.Add("SLOT06_C", typeof(string));
            Agreement_Dt.Columns.Add("SLOT06_D", typeof(string));
            Agreement_Dt.Columns.Add("SLOT06_E", typeof(string));
            Agreement_Dt.Columns.Add("SLOT06_F", typeof(string));
            Agreement_Dt.Columns.Add("SLOT06_G", typeof(string));
            Agreement_Dt.Columns.Add("SLOT06_H", typeof(string));
            Agreement_Dt.Columns.Add("SLOT07_MESSAGE", typeof(string));
            Agreement_Dt.Columns.Add("SLOT07_START", typeof(double));
            Agreement_Dt.Columns.Add("SLOT07_END", typeof(double));
            Agreement_Dt.Columns.Add("SLOT07_RATE", typeof(double));
            Agreement_Dt.Columns.Add("SLOT07_MIN", typeof(double));
            Agreement_Dt.Columns.Add("SLOT07_MAX", typeof(double));
            Agreement_Dt.Columns.Add("SLOT07_A", typeof(string));
            Agreement_Dt.Columns.Add("SLOT07_B", typeof(string));
            Agreement_Dt.Columns.Add("SLOT07_C", typeof(string));
            Agreement_Dt.Columns.Add("SLOT07_D", typeof(string));
            Agreement_Dt.Columns.Add("SLOT07_E", typeof(string));
            Agreement_Dt.Columns.Add("SLOT07_F", typeof(string));
            Agreement_Dt.Columns.Add("SLOT07_G", typeof(string));
            Agreement_Dt.Columns.Add("SLOT07_H", typeof(string));
            Agreement_Dt.Columns.Add("SLOT08_MESSAGE", typeof(string));
            Agreement_Dt.Columns.Add("SLOT08_START", typeof(double));
            Agreement_Dt.Columns.Add("SLOT08_END", typeof(double));
            Agreement_Dt.Columns.Add("SLOT08_RATE", typeof(double));
            Agreement_Dt.Columns.Add("SLOT08_MIN", typeof(double));
            Agreement_Dt.Columns.Add("SLOT08_MAX", typeof(double));
            Agreement_Dt.Columns.Add("SLOT08_A", typeof(string));
            Agreement_Dt.Columns.Add("SLOT08_B", typeof(string));
            Agreement_Dt.Columns.Add("SLOT08_C", typeof(string));
            Agreement_Dt.Columns.Add("SLOT08_D", typeof(string));
            Agreement_Dt.Columns.Add("SLOT08_E", typeof(string));
            Agreement_Dt.Columns.Add("SLOT08_F", typeof(string));
            Agreement_Dt.Columns.Add("SLOT08_G", typeof(string));
            Agreement_Dt.Columns.Add("SLOT08_H", typeof(string));
            Agreement_Dt.Columns.Add("SLOT09_MESSAGE", typeof(string));
            Agreement_Dt.Columns.Add("SLOT09_START", typeof(double));
            Agreement_Dt.Columns.Add("SLOT09_END", typeof(double));
            Agreement_Dt.Columns.Add("SLOT09_RATE", typeof(double));
            Agreement_Dt.Columns.Add("SLOT09_MIN", typeof(double));
            Agreement_Dt.Columns.Add("SLOT09_MAX", typeof(double));
            Agreement_Dt.Columns.Add("SLOT09_A", typeof(string));
            Agreement_Dt.Columns.Add("SLOT09_B", typeof(string));
            Agreement_Dt.Columns.Add("SLOT09_C", typeof(string));
            Agreement_Dt.Columns.Add("SLOT09_D", typeof(string));
            Agreement_Dt.Columns.Add("SLOT09_E", typeof(string));
            Agreement_Dt.Columns.Add("SLOT09_F", typeof(string));
            Agreement_Dt.Columns.Add("SLOT09_G", typeof(string));
            Agreement_Dt.Columns.Add("SLOT09_H", typeof(string));
            Agreement_Dt.Columns.Add("SLOT10_MESSAGE", typeof(string));
            Agreement_Dt.Columns.Add("SLOT10_START", typeof(double));
            Agreement_Dt.Columns.Add("SLOT10_END", typeof(double));
            Agreement_Dt.Columns.Add("SLOT10_RATE", typeof(double));
            Agreement_Dt.Columns.Add("SLOT10_MIN", typeof(double));
            Agreement_Dt.Columns.Add("SLOT10_MAX", typeof(double));
            Agreement_Dt.Columns.Add("SLOT10_A", typeof(string));
            Agreement_Dt.Columns.Add("SLOT10_B", typeof(string));
            Agreement_Dt.Columns.Add("SLOT10_C", typeof(string));
            Agreement_Dt.Columns.Add("SLOT10_D", typeof(string));
            Agreement_Dt.Columns.Add("SLOT10_E", typeof(string));
            Agreement_Dt.Columns.Add("SLOT10_F", typeof(string));
            Agreement_Dt.Columns.Add("SLOT10_G", typeof(string));
            Agreement_Dt.Columns.Add("SLOT10_H", typeof(string));





            // -----------------------------------
            DataTable Exchange_Dt = new DataTable();
            Exchange_Dt.Columns.Add("QUARTER (yyyyQq)", typeof(string));
            Exchange_Dt.Columns.Add("CURRENCY", typeof(string));
            Exchange_Dt.Columns.Add("EXCHANGE_RATE", typeof(double));







            // -----------------------------------
            DataTable Init_Dt = new DataTable();
            Init_Dt.Columns.Add("AGREEMENT", typeof(string));
            Init_Dt.Columns.Add("INITIAL_MONTH_OF_CONTRACT", typeof(string));
            Init_Dt.Columns.Add("FINAL_MONTH_OF_CONTRACT", typeof(string));
            Init_Dt.Columns.Add("MONTH_OF_INITIALIZATION", typeof(string));
            Init_Dt.Columns.Add("CUM_NET_QTY_PCS", typeof(double));
            Init_Dt.Columns.Add("CUM_NET_REVENUE_LCL", typeof(double));
            Init_Dt.Columns.Add("CUM_NET_REVENUE_USD", typeof(double));
            Init_Dt.Columns.Add("CUM_ROYALTY_LCL", typeof(double));
            Init_Dt.Columns.Add("CUM_ROYALTY_USD", typeof(double));
            Init_Dt.Columns.Add("CUM_ROYALTY_PAID_LCL", typeof(double));
            Init_Dt.Columns.Add("CUM_ROYALTY_PAID_USD", typeof(double));








            // -----------------------------------
            DataTable List_Agreement_Dt = new DataTable();
            List_Agreement_Dt.Columns.Add("AGREEMENT", typeof(string));









            // -----------------------------------
            DataTable List_Plan_Dt = new DataTable();
            List_Plan_Dt.Columns.Add("PLAN", typeof(string));







            // -----------------------------------
            DataTable List_Quarter_Actual_Dt = new DataTable();
            List_Quarter_Actual_Dt.Columns.Add("QUARTER (yyyyQq)", typeof(string));







            // -----------------------------------
            DataTable Royalty_Dt = new DataTable();
            Royalty_Dt.Columns.Add("ROYALTY_ID", typeof(string));
            Royalty_Dt.Columns.Add("YEAR (Yyyyy)", typeof(string));
            Royalty_Dt.Columns.Add("YEAR (Yyy)", typeof(string));
            Royalty_Dt.Columns.Add("QUARTER (yyyyQq)", typeof(string));
            Royalty_Dt.Columns.Add("QUARTER (yyQq)", typeof(string));
            Royalty_Dt.Columns.Add("MONTH (yyyyMmm)", typeof(string));
            Royalty_Dt.Columns.Add("MONTH (yyMmm)", typeof(string));
            Royalty_Dt.Columns.Add("GROUP_CODE_ORIGINAL", typeof(string));
            Royalty_Dt.Columns.Add("SUB_GROUP_CODE_ORIGINAL", typeof(string));
            Royalty_Dt.Columns.Add("DIV_CODE_ORIGINAL", typeof(string));
            Royalty_Dt.Columns.Add("BU_CODE_ORIGINAL", typeof(string));
            Royalty_Dt.Columns.Add("BU_CODE_CURRENT", typeof(string));
            Royalty_Dt.Columns.Add("DATA_SOURCE", typeof(string));
            Royalty_Dt.Columns.Add("PRODUCT_LINE_ORIGINAL", typeof(string));
            Royalty_Dt.Columns.Add("PRODUCT_LINE_CURRENT", typeof(string));
            Royalty_Dt.Columns.Add("CP", typeof(string));
            Royalty_Dt.Columns.Add("REASON_CODE", typeof(string));
            Royalty_Dt.Columns.Add("REASON_DESCR", typeof(string));
            Royalty_Dt.Columns.Add("REASON_TYPE", typeof(string));
            Royalty_Dt.Columns.Add("REASON_FLAG_QUANTITY", typeof(string));
            Royalty_Dt.Columns.Add("CUSTOMER_FINAL_CODE", typeof(string));
            Royalty_Dt.Columns.Add("CUSTOMER_FINAL_DESCR", typeof(string));
            Royalty_Dt.Columns.Add("CUSTOMER_FINAL_TYPE_CODE", typeof(string));
            Royalty_Dt.Columns.Add("CUSTOMER_FINAL_TYPE_DESCR", typeof(string));
            Royalty_Dt.Columns.Add("CUSTOMER_FINAL_GROUP_CODE", typeof(string));
            Royalty_Dt.Columns.Add("CUSTOMER_FINAL_GROUP_DESCR", typeof(string));
            Royalty_Dt.Columns.Add("CUSTOMER_FINAL_SHIPTO_CODE", typeof(string));
            Royalty_Dt.Columns.Add("CUSTOMER_FINAL_SHIPTO_DESCR", typeof(string));
            Royalty_Dt.Columns.Add("AGREEMENT", typeof(string));
            Royalty_Dt.Columns.Add("CONDITION", typeof(string));
            Royalty_Dt.Columns.Add("LCL_CURRENCY", typeof(string));
            Royalty_Dt.Columns.Add("EXCHANGE_RATE", typeof(double));
            Royalty_Dt.Columns.Add("NET_REVENUE_LCL", typeof(double));
            Royalty_Dt.Columns.Add("CUM_NET_REVENUE_LCL", typeof(double));
            Royalty_Dt.Columns.Add("NET_REVENUE_USD", typeof(double));
            Royalty_Dt.Columns.Add("CUM_NET_REVENUE_USD", typeof(double));
            Royalty_Dt.Columns.Add("NET_QTY_PCS", typeof(double));
            Royalty_Dt.Columns.Add("CUM_NET_QTY_PCS", typeof(double));
            Royalty_Dt.Columns.Add("ROYALTY_LCL", typeof(double));
            Royalty_Dt.Columns.Add("CUM_ROYALTY_LCL", typeof(double));
            Royalty_Dt.Columns.Add("ROYALTY_USD", typeof(double));
            Royalty_Dt.Columns.Add("CUM_ROYALTY_USD", typeof(double));
            Royalty_Dt.Columns.Add("ROYALTY_PAID_LCL", typeof(double));
            Royalty_Dt.Columns.Add("CUM_ROYALTY_PAID_LCL", typeof(double));
            Royalty_Dt.Columns.Add("ROYALTY_PAID_USD", typeof(double));
            Royalty_Dt.Columns.Add("CUM_ROYALTY_PAID_USD", typeof(double));






            // -----------------------------------
            DataTable SapAct_Forecast_Dt = new DataTable();
            SapAct_Forecast_Dt.Columns.Add("YEAR (Yyyyy)", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("YEAR (Yyy)", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("QUARTER (yyyyQq)", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("QUARTER (yyQq)", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("MONTH (yyyyMmm)", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("MONTH (yyMmm)", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("GROUP_CODE_ORIGINAL", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("SUB_GROUP_CODE_ORIGINAL", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("DIV_CODE_ORIGINAL", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("BU_CODE_ORIGINAL", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("BU_CODE_CURRENT", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("DATA_SOURCE", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("PRODUCT_LINE_ORIGINAL", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("PRODUCT_LINE_CURRENT", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("CP", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("REASON_CODE", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("REASON_DESCR", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("REASON_TYPE", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("REASON_FLAG_QUANTITY", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("CUSTOMER_FINAL_CODE", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("CUSTOMER_FINAL_DESCR", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("CUSTOMER_FINAL_TYPE_CODE", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("CUSTOMER_FINAL_TYPE_DESCR", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("CUSTOMER_FINAL_GROUP_CODE", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("CUSTOMER_FINAL_GROUP_DESCR", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("CUSTOMER_FINAL_SHIPTO_CODE", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("CUSTOMER_FINAL_SHIPTO_DESCR", typeof(string));
            SapAct_Forecast_Dt.Columns.Add("NET_REVENUE_USD", typeof(double));
            SapAct_Forecast_Dt.Columns.Add("NET_QTY_PCS", typeof(double));









            // -----------------------------------
            DataTable Royalty_Cum_Dt = new DataTable();
            Royalty_Cum_Dt.Columns.Add("AGREEMENT", typeof(string));
            Royalty_Cum_Dt.Columns.Add("CUM_NET_REVENUE_LCL", typeof(double));
            Royalty_Cum_Dt.Columns.Add("CUM_NET_REVENUE_USD", typeof(double));
            Royalty_Cum_Dt.Columns.Add("CUM_NET_QTY_PCS", typeof(double));
            Royalty_Cum_Dt.Columns.Add("CUM_ROYALTY_LCL", typeof(double));
            Royalty_Cum_Dt.Columns.Add("CUM_ROYALTY_USD", typeof(double));
            Royalty_Cum_Dt.Columns.Add("CUM_ROYALTY_PAID_LCL", typeof(double));
            Royalty_Cum_Dt.Columns.Add("CUM_ROYALTY_PAID_USD", typeof(double));







            // Esporta datatable
            // -----------------------------------
            Dts.Variables["User::Agreement_Dt"].Value = Agreement_Dt;
            Dts.Variables["User::Exchange_Dt"].Value = Exchange_Dt;
            Dts.Variables["User::Init_Dt"].Value = Init_Dt;
            Dts.Variables["User::List_Agreement_Dt"].Value = List_Agreement_Dt;
            Dts.Variables["User::List_Plan_Dt"].Value = List_Plan_Dt;
            Dts.Variables["User::List_Quarter_Actual_Dt"].Value = List_Quarter_Actual_Dt;
            Dts.Variables["User::Royalty_Dt"].Value = Royalty_Dt;
            Dts.Variables["User::SapAct_Forecast_Dt"].Value = SapAct_Forecast_Dt;
            Dts.Variables["User::Royalty_Cum_Dt"].Value = Royalty_Cum_Dt;




            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_ac24b4632fd04c499f9c0b30d6944333</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_ac24b4632fd04c499f9c0b30d6944333</msb:DisplayName>
    <msb:ProjectId>{57455162-962B-4357-9FE8-1E4D92E4312B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_ac24b4632fd04c499f9c0b30d6944333.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="ST_ac24b4632fd04c499f9c0b30d6944333.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a34fd5a7-2aa0-411e-8e0a-92ba694fba95}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a3a8ce533a1f4654a4a4359d9ff77ead</RootNamespace>
    <AssemblyName>ST_ac24b4632fd04c499f9c0b30d6944333</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a3a8ce533a1f4654a4a4359d9ff77ead")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a3a8ce533a1f4654a4a4359d9ff77ead")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_ac24b4632fd04c499f9c0b30d6944333.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPiFLWgAAAAAAAAAAOAAIiALATAAAEYAAAAIAAAAAAAAlmQA
AAAgAAAAgAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAADAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAERkAABPAAAAAIAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAKAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAnEQAAAAgAAAARgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAgAAAAAYAAABIAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAKAAAAACAAAATgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB4
ZAAAAAAAAEgAAAACAAUAgD4AAAwlAAABAAAAAAAAAIxjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwC+HQAAAQAAEXMQAAAKCgZvEQAACnIBAABw0BoAAAEo
EgAACm8TAAAKJgZvEQAACnIbAABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnIvAABw0BoAAAEoEgAA
Cm8TAAAKJgZvEQAACnJJAABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnJlAABw0BoAAAEoEgAACm8T
AAAKJgZvEQAACnJ/AABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnKnAABw0BoAAAEoEgAACm8TAAAK
JgZvEQAACnLLAABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnLhAABw0BoAAAEoEgAACm8TAAAKJgZv
EQAACnL/AABw0B4AAAEoEgAACm8TAAAKJgZvEQAACnIbAQBw0B4AAAEoEgAACm8TAAAKJgZvEQAA
CnJXAQBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnKPAQBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnLN
AQBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnIJAgBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnJBAgBw
0B4AAAEoEgAACm8TAAAKJgZvEQAACnJ/AgBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnKjAgBw0BoA
AAEoEgAACm8TAAAKJgZvEQAACnLHAgBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnL1AgBw0BoAAAEo
EgAACm8TAAAKJgZvEQAACnIxAwBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnJ3AwBw0BoAAAEoEgAA
Cm8TAAAKJgZvEQAACnK9AwBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnINBABw0BoAAAEoEgAACm8T
AAAKJgZvEQAACnJVBABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnKnBABw0BoAAAEoEgAACm8TAAAK
JgZvEQAACnLxBABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnJFBQBw0BoAAAEoEgAACm8TAAAKJgZv
EQAACnJjBQBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnJ9BQBw0B4AAAEoEgAACm8TAAAKJgZvEQAA
CnKTBQBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnKrBQBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnLB
BQBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnLXBQBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnLpBQBw
0BoAAAEoEgAACm8TAAAKJgZvEQAACnL7BQBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnINBgBw0BoA
AAEoEgAACm8TAAAKJgZvEQAACnIfBgBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnIxBgBw0BoAAAEo
EgAACm8TAAAKJgZvEQAACnJDBgBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnJVBgBw0BoAAAEoEgAA
Cm8TAAAKJgZvEQAACnJnBgBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnKFBgBw0B4AAAEoEgAACm8T
AAAKJgZvEQAACnKfBgBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnK1BgBw0B4AAAEoEgAACm8TAAAK
JgZvEQAACnLNBgBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnLjBgBw0B4AAAEoEgAACm8TAAAKJgZv
EQAACnL5BgBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnILBwBw0BoAAAEoEgAACm8TAAAKJgZvEQAA
CnIdBwBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnIvBwBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnJB
BwBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnJTBwBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnJlBwBw
0BoAAAEoEgAACm8TAAAKJgZvEQAACnJ3BwBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnKJBwBw0BoA
AAEoEgAACm8TAAAKJgZvEQAACnKnBwBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnLBBwBw0B4AAAEo
EgAACm8TAAAKJgZvEQAACnLXBwBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnLvBwBw0B4AAAEoEgAA
Cm8TAAAKJgZvEQAACnIFCABw0B4AAAEoEgAACm8TAAAKJgZvEQAACnIbCABw0BoAAAEoEgAACm8T
AAAKJgZvEQAACnItCABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnI/CABw0BoAAAEoEgAACm8TAAAK
JgZvEQAACnJRCABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnJjCABw0BoAAAEoEgAACm8TAAAKJgZv
EQAACnJ1CABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnKHCABw0BoAAAEoEgAACm8TAAAKJgZvEQAA
CnKZCABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnKrCABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnLJ
CABw0B4AAAEoEgAACm8TAAAKJgZvEQAACnLjCABw0B4AAAEoEgAACm8TAAAKJgZvEQAACnL5CABw
0B4AAAEoEgAACm8TAAAKJgZvEQAACnIRCQBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnInCQBw0B4A
AAEoEgAACm8TAAAKJgZvEQAACnI9CQBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnJPCQBw0BoAAAEo
EgAACm8TAAAKJgZvEQAACnJhCQBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnJzCQBw0BoAAAEoEgAA
Cm8TAAAKJgZvEQAACnKFCQBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnKXCQBw0BoAAAEoEgAACm8T
AAAKJgZvEQAACnKpCQBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnK7CQBw0BoAAAEoEgAACm8TAAAK
JgZvEQAACnLNCQBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnLrCQBw0B4AAAEoEgAACm8TAAAKJgZv
EQAACnIFCgBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnIbCgBw0B4AAAEoEgAACm8TAAAKJgZvEQAA
CnIzCgBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnJJCgBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnJf
CgBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnJxCgBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnKDCgBw
0BoAAAEoEgAACm8TAAAKJgZvEQAACnKVCgBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnKnCgBw0BoA
AAEoEgAACm8TAAAKJgZvEQAACnK5CgBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnLLCgBw0BoAAAEo
EgAACm8TAAAKJgZvEQAACnLdCgBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnLvCgBw0BoAAAEoEgAA
Cm8TAAAKJgZvEQAACnINCwBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnInCwBw0B4AAAEoEgAACm8T
AAAKJgZvEQAACnI9CwBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnJVCwBw0B4AAAEoEgAACm8TAAAK
JgZvEQAACnJrCwBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnKBCwBw0BoAAAEoEgAACm8TAAAKJgZv
EQAACnKTCwBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnKlCwBw0BoAAAEoEgAACm8TAAAKJgZvEQAA
CnK3CwBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnLJCwBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnLb
CwBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnLtCwBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnL/CwBw
0BoAAAEoEgAACm8TAAAKJgZvEQAACnIRDABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnIvDABw0B4A
AAEoEgAACm8TAAAKJgZvEQAACnJJDABw0B4AAAEoEgAACm8TAAAKJgZvEQAACnJfDABw0B4AAAEo
EgAACm8TAAAKJgZvEQAACnJ3DABw0B4AAAEoEgAACm8TAAAKJgZvEQAACnKNDABw0B4AAAEoEgAA
Cm8TAAAKJgZvEQAACnKjDABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnK1DABw0BoAAAEoEgAACm8T
AAAKJgZvEQAACnLHDABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnLZDABw0BoAAAEoEgAACm8TAAAK
JgZvEQAACnLrDABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnL9DABw0BoAAAEoEgAACm8TAAAKJgZv
EQAACnIPDQBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnIhDQBw0BoAAAEoEgAACm8TAAAKJgZvEQAA
CnIzDQBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnJRDQBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnJr
DQBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnKBDQBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnKZDQBw
0B4AAAEoEgAACm8TAAAKJgZvEQAACnKvDQBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnLFDQBw0BoA
AAEoEgAACm8TAAAKJgZvEQAACnLXDQBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnLpDQBw0BoAAAEo
EgAACm8TAAAKJgZvEQAACnL7DQBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnINDgBw0BoAAAEoEgAA
Cm8TAAAKJgZvEQAACnIfDgBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnIxDgBw0BoAAAEoEgAACm8T
AAAKJgZvEQAACnJDDgBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnJVDgBw0BoAAAEoEgAACm8TAAAK
JgZvEQAACnJzDgBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnKNDgBw0B4AAAEoEgAACm8TAAAKJgZv
EQAACnKjDgBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnK7DgBw0B4AAAEoEgAACm8TAAAKJgZvEQAA
CnLRDgBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnLnDgBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnL5
DgBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnILDwBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnIdDwBw
0BoAAAEoEgAACm8TAAAKJgZvEQAACnIvDwBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnJBDwBw0BoA
AAEoEgAACm8TAAAKJgZvEQAACnJTDwBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnJlDwBw0BoAAAEo
EgAACm8TAAAKJgZvEQAACnJ3DwBw0BoAAAEoEgAACm8TAAAKJgZvEQAACnKVDwBw0B4AAAEoEgAA
Cm8TAAAKJgZvEQAACnKvDwBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnLFDwBw0B4AAAEoEgAACm8T
AAAKJgZvEQAACnLdDwBw0B4AAAEoEgAACm8TAAAKJgZvEQAACnLzDwBw0B4AAAEoEgAACm8TAAAK
JgZvEQAACnIJEABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnIbEABw0BoAAAEoEgAACm8TAAAKJgZv
EQAACnItEABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnI/EABw0BoAAAEoEgAACm8TAAAKJgZvEQAA
CnJREABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnJjEABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnJ1
EABw0BoAAAEoEgAACm8TAAAKJgZvEQAACnKHEABw0BoAAAEoEgAACm8TAAAKJnMQAAAKCwdvEQAA
CnKZEABw0BoAAAEoEgAACm8TAAAKJgdvEQAACnK7EABw0BoAAAEoEgAACm8TAAAKJgdvEQAACnLN
EABw0B4AAAEoEgAACm8TAAAKJnMQAAAKDAhvEQAACnIbAABw0BoAAAEoEgAACm8TAAAKJghvEQAA
CnLpEABw0BoAAAEoEgAACm8TAAAKJghvEQAACnIdEQBw0BoAAAEoEgAACm8TAAAKJghvEQAACnJN
EQBw0BoAAAEoEgAACm8TAAAKJghvEQAACnJ9EQBw0B4AAAEoEgAACm8TAAAKJghvEQAACnKdEQBw
0B4AAAEoEgAACm8TAAAKJghvEQAACnLFEQBw0B4AAAEoEgAACm8TAAAKJghvEQAACnLtEQBw0B4A
AAEoEgAACm8TAAAKJghvEQAACnINEgBw0B4AAAEoEgAACm8TAAAKJghvEQAACnItEgBw0B4AAAEo
EgAACm8TAAAKJghvEQAACnJXEgBw0B4AAAEoEgAACm8TAAAKJnMQAAAKDQlvEQAACnIbAABw0BoA
AAEoEgAACm8TAAAKJnMQAAAKEwQRBG8RAAAKcoESAHDQGgAAASgSAAAKbxMAAAomcxAAAAoTBREF
bxEAAApymRAAcNAaAAABKBIAAApvEwAACiZzEAAAChMGEQZvEQAACnKLEgBw0BoAAAEoEgAACm8T
AAAKJhEGbxEAAApyoRIAcNAaAAABKBIAAApvEwAACiYRBm8RAAAKcrsSAHDQGgAAASgSAAAKbxMA
AAomEQZvEQAACnKZEABw0BoAAAEoEgAACm8TAAAKJhEGbxEAAApy0RIAcNAaAAABKBIAAApvEwAA
CiYRBm8RAAAKcu8SAHDQGgAAASgSAAAKbxMAAAomEQZvEQAACnIPEwBw0BoAAAEoEgAACm8TAAAK
JhEGbxEAAApyKxMAcNAaAAABKBIAAApvEwAACiYRBm8RAAAKclMTAHDQGgAAASgSAAAKbxMAAAom
EQZvEQAACnKDEwBw0BoAAAEoEgAACm8TAAAKJhEGbxEAAApypxMAcNAaAAABKBIAAApvEwAACiYR
Bm8RAAAKcskTAHDQGgAAASgSAAAKbxMAAAomEQZvEQAACnLpEwBw0BoAAAEoEgAACm8TAAAKJhEG
bxEAAApyARQAcNAaAAABKBIAAApvEwAACiYRBm8RAAAKci0UAHDQGgAAASgSAAAKbxMAAAomEQZv
EQAACnJXFABw0BoAAAEoEgAACm8TAAAKJhEGbxEAAApyXRQAcNAaAAABKBIAAApvEwAACiYRBm8R
AAAKcnUUAHDQGgAAASgSAAAKbxMAAAomEQZvEQAACnKPFABw0BoAAAEoEgAACm8TAAAKJhEGbxEA
AApypxQAcNAaAAABKBIAAApvEwAACiYRBm8RAAAKctEUAHDQGgAAASgSAAAKbxMAAAomEQZvEQAA
CnL5FABw0BoAAAEoEgAACm8TAAAKJhEGbxEAAApyIxUAcNAaAAABKBIAAApvEwAACiYRBm8RAAAK
clUVAHDQGgAAASgSAAAKbxMAAAomEQZvEQAACnKJFQBw0BoAAAEoEgAACm8TAAAKJhEGbxEAAApy
vRUAcNAaAAABKBIAAApvEwAACiYRBm8RAAAKcvMVAHDQGgAAASgSAAAKbxMAAAomEQZvEQAACnIp
FgBw0BoAAAEoEgAACm8TAAAKJhEGbxEAAApyGwAAcNAaAAABKBIAAApvEwAACiYRBm8RAAAKcmEW
AHDQGgAAASgSAAAKbxMAAAomEQZvEQAACnJ1FgBw0BoAAAEoEgAACm8TAAAKJhEGbxEAAApyzRAA
cNAeAAABKBIAAApvEwAACiYRBm8RAAAKco8WAHDQHgAAASgSAAAKbxMAAAomEQZvEQAACnKdEQBw
0B4AAAEoEgAACm8TAAAKJhEGbxEAAApyrxYAcNAeAAABKBIAAApvEwAACiYRBm8RAAAKcsURAHDQ
HgAAASgSAAAKbxMAAAomEQZvEQAACnLPFgBw0B4AAAEoEgAACm8TAAAKJhEGbxEAAApyfREAcNAe
AAABKBIAAApvEwAACiYRBm8RAAAKcucWAHDQHgAAASgSAAAKbxMAAAomEQZvEQAACnLtEQBw0B4A
AAEoEgAACm8TAAAKJhEGbxEAAApy/xYAcNAeAAABKBIAAApvEwAACiYRBm8RAAAKcg0SAHDQHgAA
ASgSAAAKbxMAAAomEQZvEQAACnIXFwBw0B4AAAEoEgAACm8TAAAKJhEGbxEAAApyLRIAcNAeAAAB
KBIAAApvEwAACiYRBm8RAAAKcjkXAHDQHgAAASgSAAAKbxMAAAomEQZvEQAACnJXEgBw0B4AAAEo
EgAACm8TAAAKJnMQAAAKEwcRB28RAAAKcqESAHDQGgAAASgSAAAKbxMAAAomEQdvEQAACnK7EgBw
0BoAAAEoEgAACm8TAAAKJhEHbxEAAApymRAAcNAaAAABKBIAAApvEwAACiYRB28RAAAKctESAHDQ
GgAAASgSAAAKbxMAAAomEQdvEQAACnLvEgBw0BoAAAEoEgAACm8TAAAKJhEHbxEAAApyDxMAcNAa
AAABKBIAAApvEwAACiYRB28RAAAKcisTAHDQGgAAASgSAAAKbxMAAAomEQdvEQAACnJTEwBw0BoA
AAEoEgAACm8TAAAKJhEHbxEAAApygxMAcNAaAAABKBIAAApvEwAACiYRB28RAAAKcqcTAHDQGgAA
ASgSAAAKbxMAAAomEQdvEQAACnLJEwBw0BoAAAEoEgAACm8TAAAKJhEHbxEAAApy6RMAcNAaAAAB
KBIAAApvEwAACiYRB28RAAAKcgEUAHDQGgAAASgSAAAKbxMAAAomEQdvEQAACnItFABw0BoAAAEo
EgAACm8TAAAKJhEHbxEAAApyVxQAcNAaAAABKBIAAApvEwAACiYRB28RAAAKcl0UAHDQGgAAASgS
AAAKbxMAAAomEQdvEQAACnJ1FABw0BoAAAEoEgAACm8TAAAKJhEHbxEAAApyjxQAcNAaAAABKBIA
AApvEwAACiYRB28RAAAKcqcUAHDQGgAAASgSAAAKbxMAAAomEQdvEQAACnLRFABw0BoAAAEoEgAA
Cm8TAAAKJhEHbxEAAApy+RQAcNAaAAABKBIAAApvEwAACiYRB28RAAAKciMVAHDQGgAAASgSAAAK
bxMAAAomEQdvEQAACnJVFQBw0BoAAAEoEgAACm8TAAAKJhEHbxEAAApyiRUAcNAaAAABKBIAAApv
EwAACiYRB28RAAAKcr0VAHDQGgAAASgSAAAKbxMAAAomEQdvEQAACnLzFQBw0BoAAAEoEgAACm8T
AAAKJhEHbxEAAApyKRYAcNAaAAABKBIAAApvEwAACiYRB28RAAAKcq8WAHDQHgAAASgSAAAKbxMA
AAomEQdvEQAACnLPFgBw0B4AAAEoEgAACm8TAAAKJnMQAAAKEwgRCG8RAAAKchsAAHDQGgAAASgS
AAAKbxMAAAomEQhvEQAACnKdEQBw0B4AAAEoEgAACm8TAAAKJhEIbxEAAApyxREAcNAeAAABKBIA
AApvEwAACiYRCG8RAAAKcn0RAHDQHgAAASgSAAAKbxMAAAomEQhvEQAACnLtEQBw0B4AAAEoEgAA
Cm8TAAAKJhEIbxEAAApyDRIAcNAeAAABKBIAAApvEwAACiYRCG8RAAAKci0SAHDQHgAAASgSAAAK
bxMAAAomEQhvEQAACnJXEgBw0B4AAAEoEgAACm8TAAAKJgIoFAAACm8VAAAKclsXAHBvFgAACgZv
FwAACgIoFAAACm8VAAAKcoEXAHBvFgAACgdvFwAACgIoFAAACm8VAAAKcqUXAHBvFgAACghvFwAA
CgIoFAAACm8VAAAKcsEXAHBvFgAACglvFwAACgIoFAAACm8VAAAKcvEXAHBvFgAAChEEbxcAAAoC
KBQAAApvFQAACnIXGABwbxYAAAoRBW8XAAAKAigUAAAKbxUAAApyURgAcG8WAAAKEQZvFwAACgIo
FAAACm8VAAAKcnMYAHBvFgAAChEHbxcAAAoCKBQAAApvFQAACnKlGABwbxYAAAoRCG8XAAAKAigU
AAAKFm8YAAAKKh4CKBkAAAoqHgIoGgAACiqufgEAAAQtHnLPGABw0AMAAAIoEgAACm8bAAAKcxwA
AAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigdAAAKKi5zCAAABoADAAAEKkJT
SkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAPwDAAAjfgAAaAQAAMwFAAAjU3RyaW5n
cwAAAAA0CgAARBkAACNVUwB4IwAAEAAAACNHVUlEAAAAiCMAAIQBAAAjQmxvYgAAAAAAAAACAAAB
Vx2iAQkDAAAA+gEzABYAAAEAAAAiAAAABQAAAAYAAAAJAAAAAQAAAB0AAAACAAAAEAAAAAEAAAAC
AAAAAwAAAAQAAAABAAAABQAAAAEAAAABAAAAAAC4AwEAAAAAAAYAagKoBAYA+QKoBAYAtgGVBA8A
HAUAAAYA4wFBBAYATQJBBAYALgJBBAYA4AJBBAYAigJBBAYAowJBBAYA+gFBBAYAFQInAwoAvgJn
AwoANQFnAw4AogB5AAYA8APpAwYAmQGVBAYAmwXpAwYAeATIBAYAaAQsBBIAaQGiAxIAygGiAxIA
UQEXBAYAfgGoBA4AUwR5AAYAQQPpAwYAAAHpAwYAvADpAw4ADAR5AAYAtQDpAwoAkANnAxYAXgXg
ABYArADgAAYAwQVBBAAAAABJAAAAAAABAAEAAQAQAAEEJQA5AAEAAQAAABAAzwQrBUkAAQADAAAB
EABoBSsFXQADAAcAAwEAAI0FAABBAAQACgARAPUDhQARACUBiQARAJIAjQAGBnEAkQBWgH0FlABW
gAUBlABQIAAAAACGAAcEBgABABo+AAAAAIYYiAQGAAEAIj4AAAAAgxiIBAYAAQAqPgAAAACTCHQE
mAABAFY+AAAAAJMIDQGdAAEAXT4AAAAAkwgZAaIAAQBlPgAAAACWCKIFqAACAGw+AAAAAIYYiAQG
AAIAdD4AAAAAkRiOBK0AAgAAAAEAIQMJAIgEAQARAIgEBgAZAIgECgApAIgEEAAxAIgEEAA5AIgE
EABBAIgEEABJAIgEEABRAIgEEABZAIgEEABhAIgEEABpAIgEBgCJAIgEBgCxAIgEFQDBAIgEBgB5
AIgEBgB5AHEFMADZAM4ANQDJAI4APABxAIUFRAD5AFoFSQABAeADTwAJARcDVgD5AK4FAQBxAIgE
BgCRAIgEBgDZAL0FWwCZAIgEYQC5AIgEBgAIABQAewAIABgAgAApAHMA6AAuAAsAwAAuABMAyQAu
ABsA6AAuACMA8QAuACsAGgEuADMAGgEuADsAGgEuAEMA8QAuAEsAIAEuAFMAGgEuAFsANwFDAGMA
gABJAHMA6ABhAHsAgABjAGsAgAAbAAMAAQAEAAMAAAB4BLEAAAAtAbYAAACmBbsAAgAEAAMAAgAF
AAUAAQAGAAUAAgAHAAcABIAAAAEAAAA4JExFAAAAAAAAAQAAAAQAAAAAAAAAAAAAAGkAhQAAAAAA
DgAAAAAAAAAAAAAAcgBIAwAAAAAEAAAAAAAAAAAAAABpAHkAAAAAAAQAAAAAAAAAAAAAAGkA6QMA
AAAADgAAAAAAAAAAAAAAcgBSAAAAAAAAAAAAAQAAANkEAAAFAAIAAAAAAABTVF9hYzI0YjQ2MzJm
ZDA0YzQ5OWY5YzBiMzBkNjk0NDMzMwBTVF9iZjNiMGU1YjIzMGQ0MDcwOTNhNWFjNDc2YjE0MDYw
OQA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTeXN0ZW0u
RGF0YQBtc2NvcmxpYgBBZGQAZGVmYXVsdEluc3RhbmNlAERhdGFUYWJsZQBWYXJpYWJsZQBEb3Vi
bGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3Vy
Y2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdz
QmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1
Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAc2V0X1ZhbHVlAHZhbHVlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFz
awBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1v
ZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9hYzI0YjQ2MzJmZDA0YzQ5OWY5YzBiMzBkNjk0
NDMzMy5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBEYXRh
Q29sdW1uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAERhdGFDb2x1bW5Db2xsZWN0aW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1h
bmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYTNhOGNlNTMzYTFmNDY1NGE0YTQzNTlk
OWZmNzdlYWQuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNU
X2EzYThjZTUzM2ExZjQ2NTRhNGE0MzU5ZDlmZjc3ZWFkLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxl
cwBTZXR0aW5ncwBnZXRfQ29sdW1ucwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBPYmpl
Y3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0Fzc2VtYmx5AAAAABlBAEcAUgBFAEUA
TQBFAE4AVABfAEkARAAAE0EARwBSAEUARQBNAEUATgBUAAAZVgBFAFIAUwBJAE8ATgBfAEQAQQBU
AEUAABtWAEUAUgBTAEkATwBOAF8ARABFAFMAQwBSAAAZTQBPAEQARQBMAF8AQQBDAFQASQBWAEUA
ACdNAE8ARABFAEwAXwBJAE4ASQBUAEkAQQBMAF8ATQBPAE4AVABIAAAjTQBPAEQARQBMAF8ARgBJ
AE4AQQBMAF8ATQBPAE4AVABIAAAVTQBPAEQARQBMAF8AVABZAFAARQAAHU0ATwBEAEUATABfAEMA
VQBSAFIARQBOAEMAWQAAG00ATwBEAEUATABfAE4AQgBfAFMATABPAFQAADtNAE8ARABFAEwAXwBN
AEkATgBfAEEAQwBDAFUATQBVAEwAQQBUAEUARABfAFIATwBZAEEATABUAFkAADdNAE8ARABFAEwA
XwBNAEkATgBfAEUAQQBDAEgAXwBZAEUAQQBSAF8AUgBPAFkAQQBMAFQAWQAAPU0ATwBEAEUATABf
AE0ASQBOAF8ARQBBAEMASABfAFEAVQBBAFIAVABFAFIAXwBSAE8AWQBBAEwAVABZAAA7TQBPAEQA
RQBMAF8ATQBBAFgAXwBBAEMAQwBVAE0AVQBMAEEAVABFAEQAXwBSAE8AWQBBAEwAVABZAAA3TQBP
AEQARQBMAF8ATQBBAFgAXwBFAEEAQwBIAF8AWQBFAEEAUgBfAFIATwBZAEEATABUAFkAAD1NAE8A
RABFAEwAXwBNAEEAWABfAEUAQQBDAEgAXwBRAFUAQQBSAFQARQBSAF8AUgBPAFkAQQBMAFQAWQAA
I1MARQBMAEUAQwBUAEkATwBOAF8AUABMAF8ATABJAFMAVAAAI1MARQBMAEUAQwBUAEkATwBOAF8A
QwBQAF8ATABJAFMAVAAALVMARQBMAEUAQwBUAEkATwBOAF8AQwBQAF8AQwBPAE4ARABJAFQASQBP
AE4AADtTAEUATABFAEMAVABJAE8ATgBfAEMAVQBTAFQATwBNAEUAUgBfAEYASQBOAEEATABfAEwA
SQBTAFQAAEVTAEUATABFAEMAVABJAE8ATgBfAEMAVQBTAFQATwBNAEUAUgBfAEYASQBOAEEATABf
AEMATwBOAEQASQBUAEkATwBOAABFUwBFAEwARQBDAFQASQBPAE4AXwBDAFUAUwBUAE8ATQBFAFIA
XwBGAEkATgBBAEwAXwBUAFkAUABFAF8ATABJAFMAVAAAT1MARQBMAEUAQwBUAEkATwBOAF8AQwBV
AFMAVABPAE0ARQBSAF8ARgBJAE4AQQBMAF8AVABZAFAARQBfAEMATwBOAEQASQBUAEkATwBOAABH
UwBFAEwARQBDAFQASQBPAE4AXwBDAFUAUwBUAE8ATQBFAFIAXwBGAEkATgBBAEwAXwBHAFIATwBV
AFAAXwBMAEkAUwBUAABRUwBFAEwARQBDAFQASQBPAE4AXwBDAFUAUwBUAE8ATQBFAFIAXwBGAEkA
TgBBAEwAXwBHAFIATwBVAFAAXwBDAE8ATgBEAEkAVABJAE8ATgAASVMARQBMAEUAQwBUAEkATwBO
AF8AQwBVAFMAVABPAE0ARQBSAF8ARgBJAE4AQQBMAF8AUwBIAEkAUABUAE8AXwBMAEkAUwBUAABT
UwBFAEwARQBDAFQASQBPAE4AXwBDAFUAUwBUAE8ATQBFAFIAXwBGAEkATgBBAEwAXwBTAEgASQBQ
AFQATwBfAEMATwBOAEQASQBUAEkATwBOAAAdUwBMAE8AVAAwADEAXwBNAEUAUwBTAEEARwBFAAAZ
UwBMAE8AVAAwADEAXwBTAFQAQQBSAFQAABVTAEwATwBUADAAMQBfAEUATgBEAAAXUwBMAE8AVAAw
ADEAXwBSAEEAVABFAAAVUwBMAE8AVAAwADEAXwBNAEkATgAAFVMATABPAFQAMAAxAF8ATQBBAFgA
ABFTAEwATwBUADAAMQBfAEEAABFTAEwATwBUADAAMQBfAEIAABFTAEwATwBUADAAMQBfAEMAABFT
AEwATwBUADAAMQBfAEQAABFTAEwATwBUADAAMQBfAEUAABFTAEwATwBUADAAMQBfAEYAABFTAEwA
TwBUADAAMQBfAEcAABFTAEwATwBUADAAMQBfAEgAAB1TAEwATwBUADAAMgBfAE0ARQBTAFMAQQBH
AEUAABlTAEwATwBUADAAMgBfAFMAVABBAFIAVAAAFVMATABPAFQAMAAyAF8ARQBOAEQAABdTAEwA
TwBUADAAMgBfAFIAQQBUAEUAABVTAEwATwBUADAAMgBfAE0ASQBOAAAVUwBMAE8AVAAwADIAXwBN
AEEAWAAAEVMATABPAFQAMAAyAF8AQQAAEVMATABPAFQAMAAyAF8AQgAAEVMATABPAFQAMAAyAF8A
QwAAEVMATABPAFQAMAAyAF8ARAAAEVMATABPAFQAMAAyAF8ARQAAEVMATABPAFQAMAAyAF8ARgAA
EVMATABPAFQAMAAyAF8ARwAAEVMATABPAFQAMAAyAF8ASAAAHVMATABPAFQAMAAzAF8ATQBFAFMA
UwBBAEcARQAAGVMATABPAFQAMAAzAF8AUwBUAEEAUgBUAAAVUwBMAE8AVAAwADMAXwBFAE4ARAAA
F1MATABPAFQAMAAzAF8AUgBBAFQARQAAFVMATABPAFQAMAAzAF8ATQBJAE4AABVTAEwATwBUADAA
MwBfAE0AQQBYAAARUwBMAE8AVAAwADMAXwBBAAARUwBMAE8AVAAwADMAXwBCAAARUwBMAE8AVAAw
ADMAXwBDAAARUwBMAE8AVAAwADMAXwBEAAARUwBMAE8AVAAwADMAXwBFAAARUwBMAE8AVAAwADMA
XwBGAAARUwBMAE8AVAAwADMAXwBHAAARUwBMAE8AVAAwADMAXwBIAAAdUwBMAE8AVAAwADQAXwBN
AEUAUwBTAEEARwBFAAAZUwBMAE8AVAAwADQAXwBTAFQAQQBSAFQAABVTAEwATwBUADAANABfAEUA
TgBEAAAXUwBMAE8AVAAwADQAXwBSAEEAVABFAAAVUwBMAE8AVAAwADQAXwBNAEkATgAAFVMATABP
AFQAMAA0AF8ATQBBAFgAABFTAEwATwBUADAANABfAEEAABFTAEwATwBUADAANABfAEIAABFTAEwA
TwBUADAANABfAEMAABFTAEwATwBUADAANABfAEQAABFTAEwATwBUADAANABfAEUAABFTAEwATwBU
ADAANABfAEYAABFTAEwATwBUADAANABfAEcAABFTAEwATwBUADAANABfAEgAAB1TAEwATwBUADAA
NQBfAE0ARQBTAFMAQQBHAEUAABlTAEwATwBUADAANQBfAFMAVABBAFIAVAAAFVMATABPAFQAMAA1
AF8ARQBOAEQAABdTAEwATwBUADAANQBfAFIAQQBUAEUAABVTAEwATwBUADAANQBfAE0ASQBOAAAV
UwBMAE8AVAAwADUAXwBNAEEAWAAAEVMATABPAFQAMAA1AF8AQQAAEVMATABPAFQAMAA1AF8AQgAA
EVMATABPAFQAMAA1AF8AQwAAEVMATABPAFQAMAA1AF8ARAAAEVMATABPAFQAMAA1AF8ARQAAEVMA
TABPAFQAMAA1AF8ARgAAEVMATABPAFQAMAA1AF8ARwAAEVMATABPAFQAMAA1AF8ASAAAHVMATABP
AFQAMAA2AF8ATQBFAFMAUwBBAEcARQAAGVMATABPAFQAMAA2AF8AUwBUAEEAUgBUAAAVUwBMAE8A
VAAwADYAXwBFAE4ARAAAF1MATABPAFQAMAA2AF8AUgBBAFQARQAAFVMATABPAFQAMAA2AF8ATQBJ
AE4AABVTAEwATwBUADAANgBfAE0AQQBYAAARUwBMAE8AVAAwADYAXwBBAAARUwBMAE8AVAAwADYA
XwBCAAARUwBMAE8AVAAwADYAXwBDAAARUwBMAE8AVAAwADYAXwBEAAARUwBMAE8AVAAwADYAXwBF
AAARUwBMAE8AVAAwADYAXwBGAAARUwBMAE8AVAAwADYAXwBHAAARUwBMAE8AVAAwADYAXwBIAAAd
UwBMAE8AVAAwADcAXwBNAEUAUwBTAEEARwBFAAAZUwBMAE8AVAAwADcAXwBTAFQAQQBSAFQAABVT
AEwATwBUADAANwBfAEUATgBEAAAXUwBMAE8AVAAwADcAXwBSAEEAVABFAAAVUwBMAE8AVAAwADcA
XwBNAEkATgAAFVMATABPAFQAMAA3AF8ATQBBAFgAABFTAEwATwBUADAANwBfAEEAABFTAEwATwBU
ADAANwBfAEIAABFTAEwATwBUADAANwBfAEMAABFTAEwATwBUADAANwBfAEQAABFTAEwATwBUADAA
NwBfAEUAABFTAEwATwBUADAANwBfAEYAABFTAEwATwBUADAANwBfAEcAABFTAEwATwBUADAANwBf
AEgAAB1TAEwATwBUADAAOABfAE0ARQBTAFMAQQBHAEUAABlTAEwATwBUADAAOABfAFMAVABBAFIA
VAAAFVMATABPAFQAMAA4AF8ARQBOAEQAABdTAEwATwBUADAAOABfAFIAQQBUAEUAABVTAEwATwBU
ADAAOABfAE0ASQBOAAAVUwBMAE8AVAAwADgAXwBNAEEAWAAAEVMATABPAFQAMAA4AF8AQQAAEVMA
TABPAFQAMAA4AF8AQgAAEVMATABPAFQAMAA4AF8AQwAAEVMATABPAFQAMAA4AF8ARAAAEVMATABP
AFQAMAA4AF8ARQAAEVMATABPAFQAMAA4AF8ARgAAEVMATABPAFQAMAA4AF8ARwAAEVMATABPAFQA
MAA4AF8ASAAAHVMATABPAFQAMAA5AF8ATQBFAFMAUwBBAEcARQAAGVMATABPAFQAMAA5AF8AUwBU
AEEAUgBUAAAVUwBMAE8AVAAwADkAXwBFAE4ARAAAF1MATABPAFQAMAA5AF8AUgBBAFQARQAAFVMA
TABPAFQAMAA5AF8ATQBJAE4AABVTAEwATwBUADAAOQBfAE0AQQBYAAARUwBMAE8AVAAwADkAXwBB
AAARUwBMAE8AVAAwADkAXwBCAAARUwBMAE8AVAAwADkAXwBDAAARUwBMAE8AVAAwADkAXwBEAAAR
UwBMAE8AVAAwADkAXwBFAAARUwBMAE8AVAAwADkAXwBGAAARUwBMAE8AVAAwADkAXwBHAAARUwBM
AE8AVAAwADkAXwBIAAAdUwBMAE8AVAAxADAAXwBNAEUAUwBTAEEARwBFAAAZUwBMAE8AVAAxADAA
XwBTAFQAQQBSAFQAABVTAEwATwBUADEAMABfAEUATgBEAAAXUwBMAE8AVAAxADAAXwBSAEEAVABF
AAAVUwBMAE8AVAAxADAAXwBNAEkATgAAFVMATABPAFQAMQAwAF8ATQBBAFgAABFTAEwATwBUADEA
MABfAEEAABFTAEwATwBUADEAMABfAEIAABFTAEwATwBUADEAMABfAEMAABFTAEwATwBUADEAMABf
AEQAABFTAEwATwBUADEAMABfAEUAABFTAEwATwBUADEAMABfAEYAABFTAEwATwBUADEAMABfAEcA
ABFTAEwATwBUADEAMABfAEgAACFRAFUAQQBSAFQARQBSACAAKAB5AHkAeQB5AFEAcQApAAARQwBV
AFIAUgBFAE4AQwBZAAAbRQBYAEMASABBAE4ARwBFAF8AUgBBAFQARQAAM0kATgBJAFQASQBBAEwA
XwBNAE8ATgBUAEgAXwBPAEYAXwBDAE8ATgBUAFIAQQBDAFQAAC9GAEkATgBBAEwAXwBNAE8ATgBU
AEgAXwBPAEYAXwBDAE8ATgBUAFIAQQBDAFQAAC9NAE8ATgBUAEgAXwBPAEYAXwBJAE4ASQBUAEkA
QQBMAEkAWgBBAFQASQBPAE4AAB9DAFUATQBfAE4ARQBUAF8AUQBUAFkAXwBQAEMAUwAAJ0MAVQBN
AF8ATgBFAFQAXwBSAEUAVgBFAE4AVQBFAF8ATABDAEwAACdDAFUATQBfAE4ARQBUAF8AUgBFAFYA
RQBOAFUARQBfAFUAUwBEAAAfQwBVAE0AXwBSAE8AWQBBAEwAVABZAF8ATABDAEwAAB9DAFUATQBf
AFIATwBZAEEATABUAFkAXwBVAFMARAAAKUMAVQBNAF8AUgBPAFkAQQBMAFQAWQBfAFAAQQBJAEQA
XwBMAEMATAAAKUMAVQBNAF8AUgBPAFkAQQBMAFQAWQBfAFAAQQBJAEQAXwBVAFMARAAACVAATABB
AE4AABVSAE8AWQBBAEwAVABZAF8ASQBEAAAZWQBFAEEAUgAgACgAWQB5AHkAeQB5ACkAABVZAEUA
QQBSACAAKABZAHkAeQApAAAdUQBVAEEAUgBUAEUAUgAgACgAeQB5AFEAcQApAAAfTQBPAE4AVABI
ACAAKAB5AHkAeQB5AE0AbQBtACkAABtNAE8ATgBUAEgAIAAoAHkAeQBNAG0AbQApAAAnRwBSAE8A
VQBQAF8AQwBPAEQARQBfAE8AUgBJAEcASQBOAEEATAAAL1MAVQBCAF8ARwBSAE8AVQBQAF8AQwBP
AEQARQBfAE8AUgBJAEcASQBOAEEATAAAI0QASQBWAF8AQwBPAEQARQBfAE8AUgBJAEcASQBOAEEA
TAAAIUIAVQBfAEMATwBEAEUAXwBPAFIASQBHAEkATgBBAEwAAB9CAFUAXwBDAE8ARABFAF8AQwBV
AFIAUgBFAE4AVAAAF0QAQQBUAEEAXwBTAE8AVQBSAEMARQAAK1AAUgBPAEQAVQBDAFQAXwBMAEkA
TgBFAF8ATwBSAEkARwBJAE4AQQBMAAApUABSAE8ARABVAEMAVABfAEwASQBOAEUAXwBDAFUAUgBS
AEUATgBUAAAFQwBQAAAXUgBFAEEAUwBPAE4AXwBDAE8ARABFAAAZUgBFAEEAUwBPAE4AXwBEAEUA
UwBDAFIAABdSAEUAQQBTAE8ATgBfAFQAWQBQAEUAAClSAEUAQQBTAE8ATgBfAEYATABBAEcAXwBR
AFUAQQBOAFQASQBUAFkAACdDAFUAUwBUAE8ATQBFAFIAXwBGAEkATgBBAEwAXwBDAE8ARABFAAAp
QwBVAFMAVABPAE0ARQBSAF8ARgBJAE4AQQBMAF8ARABFAFMAQwBSAAAxQwBVAFMAVABPAE0ARQBS
AF8ARgBJAE4AQQBMAF8AVABZAFAARQBfAEMATwBEAEUAADNDAFUAUwBUAE8ATQBFAFIAXwBGAEkA
TgBBAEwAXwBUAFkAUABFAF8ARABFAFMAQwBSAAAzQwBVAFMAVABPAE0ARQBSAF8ARgBJAE4AQQBM
AF8ARwBSAE8AVQBQAF8AQwBPAEQARQAANUMAVQBTAFQATwBNAEUAUgBfAEYASQBOAEEATABfAEcA
UgBPAFUAUABfAEQARQBTAEMAUgAANUMAVQBTAFQATwBNAEUAUgBfAEYASQBOAEEATABfAFMASABJ
AFAAVABPAF8AQwBPAEQARQAAN0MAVQBTAFQATwBNAEUAUgBfAEYASQBOAEEATABfAFMASABJAFAA
VABPAF8ARABFAFMAQwBSAAATQwBPAE4ARABJAFQASQBPAE4AABlMAEMATABfAEMAVQBSAFIARQBO
AEMAWQAAH04ARQBUAF8AUgBFAFYARQBOAFUARQBfAEwAQwBMAAAfTgBFAFQAXwBSAEUAVgBFAE4A
VQBFAF8AVQBTAEQAABdOAEUAVABfAFEAVABZAF8AUABDAFMAABdSAE8AWQBBAEwAVABZAF8ATABD
AEwAABdSAE8AWQBBAEwAVABZAF8AVQBTAEQAACFSAE8AWQBBAEwAVABZAF8AUABBAEkARABfAEwA
QwBMAAAhUgBPAFkAQQBMAFQAWQBfAFAAQQBJAEQAXwBVAFMARAAAJVUAcwBlAHIAOgA6AEEAZwBy
AGUAZQBtAGUAbgB0AF8ARAB0AAAjVQBzAGUAcgA6ADoARQB4AGMAaABhAG4AZwBlAF8ARAB0AAAb
VQBzAGUAcgA6ADoASQBuAGkAdABfAEQAdAAAL1UAcwBlAHIAOgA6AEwAaQBzAHQAXwBBAGcAcgBl
AGUAbQBlAG4AdABfAEQAdAAAJVUAcwBlAHIAOgA6AEwAaQBzAHQAXwBQAGwAYQBuAF8ARAB0AAA5
VQBzAGUAcgA6ADoATABpAHMAdABfAFEAdQBhAHIAdABlAHIAXwBBAGMAdAB1AGEAbABfAEQAdAAA
IVUAcwBlAHIAOgA6AFIAbwB5AGEAbAB0AHkAXwBEAHQAADFVAHMAZQByADoAOgBTAGEAcABBAGMA
dABfAEYAbwByAGUAYwBhAHMAdABfAEQAdAAAKVUAcwBlAHIAOgA6AFIAbwB5AGEAbAB0AHkAXwBD
AHUAbQBfAEQAdAAAcVMAVABfAGEAMwBhADgAYwBlADUAMwAzAGEAMQBmADQANgA1ADQAYQA0AGEA
NAAzADUAOQBkADkAZgBmADcANwBlAGEAZAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBv
AHUAcgBjAGUAcwAAAAAAkEdEi7PMnEqqiTvw2Fk82gAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQER
VRQHCRI9Ej0SPRI9Ej0SPRI9Ej0SPQQgABJlBgABEm0RcQcgAhJ1DhJtBCAAEn0FIAASgIEGIAES
gIUcBCABARwFIAASgIkHIAIBDhKAiQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJNAwYS
UQMGEhACBggDBhEUBAAAEk0EAAASUQUAAQESUQQAABIQAwAAAQQIABJNBAgAElEECAASEAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYTNhOGNl
NTMzYTFmNDY1NGE0YTQzNTlkOWZmNzdlYWQAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMgAA
SQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIu
TkVUIEZyYW1ld29yayA0LjUAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVz
b3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg
UHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVS
ZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAbGQAAAAAAAAAAAAAhmQAAAAgAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAHhkAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAA
AP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAA
AAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWIAAABoEAAAAAAAAAAAAABoENAAA
AFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQBMRTgkAAABAExF
OCQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBv
AAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4A
ZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBt
AGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEA
RgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGEAMwBhADgAYwBlADUAMwAz
AGEAMQBmADQANgA1ADQAYQA0AGEANAAzADUAOQBkADkAZgBmADcANwBlAGEAZAAAAD4ADwABAEYA
aQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA5ADIANwAyAC4AMQA3ADcANAAwAAAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGEAYwAyADQAYgA0ADYAMwAyAGYA
ZAAwADQAYwA0ADkAOQBmADkAYwAwAGIAMwAwAGQANgA5ADQANAAzADMAMwAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMgAyAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4
ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AYQBjADIANABiADQA
NgAzADIAZgBkADAANABjADQAOQA5AGYAOQBjADAAYgAzADAAZAA2ADkANAA0ADMAMwAzAC4AZABs
AGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGEAMwBhADgAYwBlADUA
MwAzAGEAMQBmADQANgA1ADQAYQA0AGEANAAzADUAOQBkADkAZgBmADcANwBlAGEAZAAAAEIADwAB
AFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAyADcAMgAuADEANwA3ADQA
MAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAy
ADcAMgAuADEANwA3ADQAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAGAAAAwAAACYNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create permanent tables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{E65A0ED7-B32D-4F17-9E23-A2DFD2CE4AE9}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create permanent tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{99b06ae1-6b55-4c3f-b639-50e988b8156d}"
          SQLTask:SqlStmtSourceType="FileConnection"
          SQLTask:SqlStatementSource="Create permanent tables.sql" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Create temporary tables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{287128bc-1a97-4660-ba99-19e32435a0e8}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create temporary tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{99b06ae1-6b55-4c3f-b639-50e988b8156d}"
          SQLTask:SqlStmtSourceType="FileConnection"
          SQLTask:SqlStatementSource="Create temporary tables.sql" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Delete Royalty for periods to be processed"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{420bf123-b4df-4731-b2f0-fd473e08cb3d}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delete Royalty for periods to be processed"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_8e44d50aff70467295f703472c5e0ca8"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::List_Agreement_Dt,User::List_Quarter_Actual_Dt">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Settings.get_Default():ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Sett" +
    "ings")]

namespace ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_8e44d50aff70467295f703472c5e0ca8.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a34fd5a7-2aa0-411e-8e0a-92ba694fba95}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a3a8ce533a1f4654a4a4359d9ff77ead</RootNamespace>
    <AssemblyName>ST_8e44d50aff70467295f703472c5e0ca8</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Xml;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Configuration;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Data.OleDb;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Runtime.Enumerators;
#endregion

namespace ST_bf3b0e5b230d407093a5ac476b140609
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {


            // Import user variables
            // -----------------------------------
            DataTable List_Agreement_Dt = (DataTable)Dts.Variables["User::List_Agreement_Dt"].Value;
            DataTable List_Quarter_Actual_Dt = (DataTable)Dts.Variables["User::List_Quarter_Actual_Dt"].Value;


            // Internal variables
            // -----------------------------------
            string SqlString = "";
            string Quarter_Min = "";
            string Agreement_List = "";


            // Il piu' piccolo valore di Quarter
            // -----------------------------------
            Quarter_Min = (string)List_Quarter_Actual_Dt.Rows[0]["QUARTER (yyyyQq)"];



            // La lista degli agreements
            // -----------------------------------
            Agreement_List = "(";
            foreach (DataRow Dr in List_Agreement_Dt.Rows)
            {
                Agreement_List = Agreement_List + "'" + (string)Dr["AGREEMENT"] + "',";
            }
            Agreement_List = Agreement_List.Remove(Agreement_List.Length - 1);
            Agreement_List = Agreement_List + ")";


            // Cancella tutti i dati relativi ai forecast
            // -----------------------------------
            SqlConnection SqlConn = new SqlConnection(@"Data Source = AGRCLFRSSQLQA.agrmfg.stmmfg.com\SRMTST; Integrated Security=true; Initial Catalog = ROYALTY; Connection Timeout = 0");
            SqlString = @"
                DELETE FROM [ROYALTY].[dbo].[ROYALTY] 
                WHERE 
                    [DATA_SOURCE] <> 'ACTUAL' ";
            SqlCommand Delete_Forecast_SqlCmd = new SqlCommand(SqlString, SqlConn);
            Delete_Forecast_SqlCmd.Connection.Open();
            Delete_Forecast_SqlCmd.ExecuteNonQuery();
            SqlConn.Close();


            // Cancella tutti i dati Actual precedenti ai quarter e agli agreement in elaborazione
            // -----------------------------------
            SqlString = @"
                DELETE FROM [ROYALTY].[dbo].[ROYALTY] 
                WHERE 
                    [DATA_SOURCE] = 'ACTUAL' AND
                    [QUARTER (yyyyQq)] >= '" + Quarter_Min + @"' AND
                    [AGREEMENT] IN " + Agreement_List;
            SqlCommand Delete_Actuals_SqlCmd = new SqlCommand(SqlString, SqlConn);
            Delete_Actuals_SqlCmd.Connection.Open();
            Delete_Actuals_SqlCmd.ExecuteNonQuery();
            SqlConn.Close();



            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_8e44d50aff70467295f703472c5e0ca8</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_8e44d50aff70467295f703472c5e0ca8</msb:DisplayName>
    <msb:ProjectId>{BE677CB9-57DB-4ADE-9203-F9A1B5F51F3F}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_8e44d50aff70467295f703472c5e0ca8.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a3a8ce533a1f4654a4a4359d9ff77ead")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a3a8ce533a1f4654a4a4359d9ff77ead")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_8e44d50aff70467295f703472c5e0ca8.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHWGLWgAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAajUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABg1AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAcBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABM
NQAAAAAAAEgAAAACAAUAHCIAAEQSAAABAAAAAAAAAGA0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBABIAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKdB8AAAECKBAAAApvEQAACnIxAABwbxIAAApvEwAACnQfAAABcmsAAHAKcmsAAHALbxQAAAoW
bxUAAApybQAAcG8WAAAKdCEAAAEKco8AAHALbxQAAApvFwAACg0rLwlvGAAACnQRAAABEwQHcpMA
AHARBHKXAABwbxYAAAp0IQAAAXKrAABwKBkAAAoLCW8aAAAKLcneFAl1EgAAARMFEQUsBxEFbxsA
AArcBwdvHAAAChdZbx0AAAoLB3KxAABwKB4AAAoLcrUAAHBzHwAACgxyugEAcAhzIAAACiVvIQAA
Cm8iAAAKbyMAAAomCG8kAAAKcr0CAHAGch4EAHAHKBkAAAoIcyAAAAolbyEAAApvIgAACm8jAAAK
JghvJAAACgIoEAAAChZvJQAACioBEAAAAgB2ADuxABQAAAAAHgIoJgAACioeAignAAAKKq5+AQAA
BC0ecnQEAHDQAwAAAigoAAAKbykAAApzKgAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4D
AAAEKh4CKCsAAAoqLnMIAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAF
AGwAAAB0BAAAI34AAOAEAADEBgAAI1N0cmluZ3MAAAAApAsAAOgEAAAjVVMAjBAAABAAAAAjR1VJ
RAAAAJwQAACoAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAKAAAAAUAAAAG
AAAACQAAAAEAAAArAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAAAQAAAAAA
CQQBAAAAAAAGAKkCRwUGADgDRwUGAPUBNAUPALsFAAAGACICjAQGAIwCjAQGAG0CjAQGAB8DjAQG
AMkCjAQGAOICjAQGADkCjAQGAFQCbQMKAP0CuAMKAEsBuAMOAMwEcwYGAA0FEAYOAJ4GeQAGAMYA
OgQGAEEEOgQGANgBNAUGAFEGOgQGAP0EZwUGAO0EdwQSAKgB8wMSAAkC8wMSAIIBYgQGAL0BRwUK
AOEDuAMWAP0F9gAWAL0A9gAOALMAeQAOAJ4EeQAGAIcDOgQOAGcBeQAOAJgAcwYOAL8E2gQOAI4A
2gQGABYBOgQGANIAOgQGAKoGjAQAAAAASQAAAAAAAQABAAEAEABXBCUAOQABAAEAAAAQAG4FygVV
AAEAAwAAARAABwbKBWkAAwAHAAMBAAAzBgAATQAEAAoAEQBGBKwAEQA7AbAAEQCjALQABgZxALgA
VoAjBrsAVoAbAbsAUCAAAAAAhgBdBAYAAQC0IQAAAACGGCcFBgABALwhAAAAAIMYJwUGAAEAxCEA
AAAAkwj5BL8AAQDwIQAAAACTCCMBxAABAPchAAAAAJMILwHJAAEA/yEAAAAAlghYBs8AAgAGIgAA
AACGGCcFBgACAA4iAAAAAJEYLQXUAAIAAAABAGADCQAnBQEAEQAnBQYAGQAnBQoAKQAnBRAAMQAn
BRAAOQAnBRAAQQAnBRAASQAnBRAAUQAnBRAAWQAnBRAAYQAnBRAAaQAnBQYAoQAnBQYAyQAnBRUA
2QAnBQYAcQArBigA4QD5BS0A6QAxBDIA8QBWAzgA+QBBBjwAAQExBEIAiQAxBEgAEQEZBU0AgQCJ
BjgACQFKBlIAgQCVBloAkQCgAQYACQGOA14ACQFmA2IACQFKBmcAeQAnBRAAGQEnBW0AGQGwBHQA
IQFSBAYAKQGzBl4AIQGaAQYA4QBkBgEAcQAnBQYAqQAnBQYAMQHkAHkAMQGmBoIAsQAnBYgA0QAn
BQYACAAUAKIACAAYAKcAKQBzAA8BLgALAOcALgATAPAALgAbAA8BLgAjABgBLgArAEEBLgAzAEEB
LgA7AEEBLgBDABgBLgBLAEcBLgBTAEEBLgBbAF4BQwBjAKcASQBzAA8BYQB7AKcAYwBrAKcAGwAD
AAEABAADAAAA/QTYAAAAQwHdAAAAXAbiAAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAA
OCSKRQAAAAAAAAEAAAAEAAAAAAAAAAAAAACQAIUAAAAAAA4AAAAAAAAAAAAAAJkAmQMAAAAABAAA
AAAAAAAAAAAAkAB5AAAAAAAEAAAAAAAAAAAAAACQADoEAAAAAA4AAAAAAAAAAAAAAJkAUgAAAAAA
AAAAAAEAAAB4BQAABQACAAAAAAAAU1RfOGU0NGQ1MGFmZjcwNDY3Mjk1ZjcwMzQ3MmM1ZTBjYTgA
U1RfYmYzYjBlNWIyMzBkNDA3MDkzYTVhYzQ3NmIxNDA2MDkAPE1vZHVsZT4ATWljcm9zb2Z0LlNx
bFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU3lzdGVtLkRhdGEAbXNjb3JsaWIARGJDb21tYW5k
AFNxbENvbW1hbmQAZGVmYXVsdEluc3RhbmNlAERhdGFUYWJsZQBWYXJpYWJsZQBJRGlzcG9zYWJs
ZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJj
ZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEludGVybmFsRGF0YUNvbGxlY3Rp
b25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAENsb3NlAERpc3Bvc2UARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFz
a0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBSZW1vdmUAU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBTdHJpbmcAZ2V0X0xlbmd0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRh
c2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RN
b2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfOGU0NGQ1MGFmZjcwNDY3Mjk1ZjcwMzQ3MmM1
ZTBjYTguZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAE9wZW4AU2NyaXB0TWFp
bgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBEYXRhUm93Q29sbGVjdGlvbgBnZXRfQ29ubmVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29u
bmVjdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdl
cgBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3Rp
Y3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2Ez
YThjZTUzM2ExZjQ2NTRhNGE0MzU5ZDlmZjc3ZWFkLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291
cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF9hM2E4Y2U1MzNhMWY0NjU0YTRhNDM1OWQ5ZmY3N2VhZC5Q
cm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3lzdGVtLkNvbGxlY3Rpb25zAFN1Y2Nl
c3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9Sb3dzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1
bHQAc2V0X1Rhc2tSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AGdldF9DdXJyZW50AE1vdmVO
ZXh0AERhdGFSb3cAZ2V0X0Fzc2VtYmx5AEV4ZWN1dGVOb25RdWVyeQAAAC9VAHMAZQByADoAOgBM
AGkAcwB0AF8AQQBnAHIAZQBlAG0AZQBuAHQAXwBEAHQAADlVAHMAZQByADoAOgBMAGkAcwB0AF8A
UQB1AGEAcgB0AGUAcgBfAEEAYwB0AHUAYQBsAF8ARAB0AAABACFRAFUAQQBSAFQARQBSACAAKAB5
AHkAeQB5AFEAcQApAAADKAAAAycAARNBAEcAUgBFAEUATQBFAE4AVAAABScALAABAykAAIEDRABh
AHQAYQAgAFMAbwB1AHIAYwBlACAAPQAgAEEARwBSAEMATABGAFIAUwBTAFEATABRAEEALgBhAGcA
cgBtAGYAZwAuAHMAdABtAG0AZgBnAC4AYwBvAG0AXABTAFIATQBUAFMAVAA7ACAASQBuAHQAZQBn
AHIAYQB0AGUAZAAgAFMAZQBjAHUAcgBpAHQAeQA9AHQAcgB1AGUAOwAgAEkAbgBpAHQAaQBhAGwA
IABDAGEAdABhAGwAbwBnACAAPQAgAFIATwBZAEEATABUAFkAOwAgAEMAbwBuAG4AZQBjAHQAaQBv
AG4AIABUAGkAbQBlAG8AdQB0ACAAPQAgADAAAIEBDQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAARABFAEwARQBUAEUAIABGAFIATwBNACAAWwBSAE8AWQBBAEwAVABZAF0ALgBbAGQA
YgBvAF0ALgBbAFIATwBZAEEATABUAFkAXQAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgAFcASABFAFIARQAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAWwBEAEEAVABBAF8AUwBPAFUAUgBDAEUAXQAgADwAPgAgACcAQQBDAFQAVQBBAEwAJwAg
AAGBXw0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEQARQBMAEUAVABFACAARgBS
AE8ATQAgAFsAUgBPAFkAQQBMAFQAWQBdAC4AWwBkAGIAbwBdAC4AWwBSAE8AWQBBAEwAVABZAF0A
IAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABXAEgARQBSAEUAIAANAAoAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFsARABBAFQAQQBfAFMATwBVAFIA
QwBFAF0AIAA9ACAAJwBBAEMAVABVAEEATAAnACAAQQBOAEQADQAKACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIABbAFEAVQBBAFIAVABFAFIAIAAoAHkAeQB5AHkAUQBxACkA
XQAgAD4APQAgACcAAVUnACAAQQBOAEQADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIABbAEEARwBSAEUARQBNAEUATgBUAF0AIABJAE4AIAABcVMAVABfAGEAMwBhADgA
YwBlADUAMwAzAGEAMQBmADQANgA1ADQAYQA0AGEANAAzADUAOQBkADkAZgBmADcANwBlAGEAZAAu
AFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAgBQ7SnF9xS6Ygcskm
yHlWAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFhDAcGDg4SPRJBEkUSSQQgABJxBCAAEnUFIAES
eRwDIAAcBSAAEoCBBSABEkUIBCABHA4EIAASQQcABA4ODg4OAyAAAgMgAAgEIAEOCAUAAg4ODgYg
AgEOEj0EIAASPQgAARKAmRGAnQUgABKAoQcgAgEOEoChCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAE
AQAAAAMGElkDBhJdAwYSEAIGCAMGERQEAAASWQQAABJdBQABARJdBAAAEhADAAABBAgAElkECAAS
XQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgB
ACNTVF9hM2E4Y2U1MzNhMWY0NjU0YTRhNDM1OWQ5ZmY3N2VhZAAABQEAAAAAFgEAEUNvcHlyaWdo
dCBAICAyMDIyAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rp
c3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNbQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291
cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1u
ZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMu
UnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABANQAAAAAAAAAAAABaNQAA
ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATDUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVl
LmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQCKRTgkAAABAIpFOCQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGEAMwBhADgAYwBlADUAMwAzAGEAMQBmADQANgA1ADQAYQA0AGEANAAzADUAOQBkADkA
ZgBmADcANwBlAGEAZAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA5
ADIANwAyAC4AMQA3ADgAMAAyAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADgAZQA0ADQAZAA1ADAAYQBmAGYANwAwADQANgA3ADIAOQA1AGYANwAwADMANAA3ADIAYwA1
AGUAMABjAGEAOAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAyAAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AOABlADQANABkADUAMABhAGYAZgA3ADAANAA2ADcAMgA5ADUAZgA3ADAAMwA0
ADcAMgBjADUAZQAwAGMAYQA4AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGEAMwBhADgAYwBlADUAMwAzAGEAMQBmADQANgA1ADQAYQA0AGEANAAzADUAOQBk
ADkAZgBmADcANwBlAGEAZAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOQAyADcAMgAuADEANwA4ADAAMgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOQAyADcAMgAuADEANwA4ADAAMgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABsNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Drop temporary tables"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{6a85aa73-7205-43c7-9aa1-9680bc5e84ad}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Drop temporary tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{99b06ae1-6b55-4c3f-b639-50e988b8156d}"
          SQLTask:SqlStmtSourceType="FileConnection"
          SQLTask:SqlStatementSource="Drop temporary tables.sql" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Plan"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{855A3E20-F5B4-4C05-9C4D-75935A8007C9}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Plan">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{DB8D4931-9CA7-4215-952E-929D72656580}"
        DTS:ObjectName="{DB8D4931-9CA7-4215-952E-929D72656580}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::List_Plan_Dt" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Plan\Foreach Agreement"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{5BFADD1B-570B-4001-9A39-F3067CA7378D}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Agreement">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{2E382D24-02B0-4E7F-8C31-2442B95D621E}"
            DTS:ObjectName="{2E382D24-02B0-4E7F-8C31-2442B95D621E}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateRowsInFirstTable"
                VarName="User::List_Agreement_Dt" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Foreach Plan\Foreach Agreement\Elaborate Royalty"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{a20690ae-c534-4cf1-8f12-a362b68389c3}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Elaborate Royalty"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_1090d63b87754ae2970f162a9a015fde"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::Agreement,User::Agreement_Dt,User::Exchange_Dt,User::Init_Dt,User::List_Agreement_Dt,User::List_Plan_Dt,User::List_Quarter_Actual_Dt,User::Plan"
                  ReadWriteVariables="User::Royalty_Cum_Dt,User::Royalty_Dt,User::SapAct_Forecast_Dt">
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Xml;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Configuration;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Data.OleDb;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Runtime.Enumerators;
using System.Data.SqlTypes;
#endregion

namespace ST_bf3b0e5b230d407093a5ac476b140609
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {

            // Import user variables
            // -----------------------------------
            DataTable Agreement_Dt = (DataTable)Dts.Variables["User::Agreement_Dt"].Value;
            DataTable Exchange_Dt = (DataTable)Dts.Variables["User::Exchange_Dt"].Value;
            DataTable Init_Dt = (DataTable)Dts.Variables["User::Init_Dt"].Value;
            DataTable List_Agreement_Dt = (DataTable)Dts.Variables["User::List_Agreement_Dt"].Value;
            DataTable List_Plan_Dt = (DataTable)Dts.Variables["User::List_Plan_Dt"].Value;
            DataTable List_Quarter_Actual_Dt = (DataTable)Dts.Variables["User::List_Quarter_Actual_Dt"].Value;

            string Agreement = (string)Dts.Variables["User::Agreement"].Value;
            string Plan = (string)Dts.Variables["User::Plan"].Value;

            DataTable Royalty_Dt = (DataTable)Dts.Variables["User::Royalty_Dt"].Value;
            DataTable SapAct_Forecast_Dt = (DataTable)Dts.Variables["User::SapAct_Forecast_Dt"].Value;
            DataTable Royalty_Cum_Dt = (DataTable)Dts.Variables["User::Royalty_Cum_Dt"].Value;


            // Fire
            // -----------------------------------
            bool fireAgain = false;
            //Dts.Events.FireInformation(0, "********", "Product: " + Product, "", 0, ref fireAgain);


            // Internal variables
            // -----------------------------------
            DataTable Quarter_Dt = List_Quarter_Actual_Dt.Clone();
            DataTable Rule_Dt = Agreement_Dt.Clone();
            DataTable RuleOne_Dt = Agreement_Dt.Clone();
            DataTable SapAct_Forecast_AllRules_AllQuarters_Dt = SapAct_Forecast_Dt.Clone();
            DataTable SapAct_Forecast_OneRule_OneQuarter_Dt = SapAct_Forecast_Dt.Clone();
            DataTable Royalty_OneRule_OneQuarter_Dt = Royalty_Dt.Clone();
            DataTable Royalty_AllRule_OneQuarter_Dt = Royalty_Dt.Clone();


            string QUARTER = "";

            string INITIAL_MONTH_OF_CONTRACT = "";
            string FINAL_MONTH_OF_CONTRACT = "";
            string MONTH_OF_INITIALIZATION = "";
            double CUM_NET_QTY_PCS = 0;
            double CUM_NET_REVENUE_LCL = 0;
            double CUM_NET_REVENUE_USD = 0;
            double CUM_ROYALTY_LCL = 0;
            double CUM_ROYALTY_USD = 0;
            double CUM_ROYALTY_PAID_LCL = 0;
            double CUM_ROYALTY_PAID_USD = 0;

            double EXCHANGE_RATE = 0;
            string MODEL_CURRENCY = "";
            string MODEL_TYPE = "";
            string AGREEMENT = "";
            string SELECTION_PL_LIST = "";
            string SELECTION_CP_CONDITION = "";
            string SELECTION_CP_LIST = "";
            string SELECTION_CUSTOMER_FINAL_CONDITION = "";
            string SELECTION_CUSTOMER_FINAL_LIST = "";
            string SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = "";
            string SELECTION_CUSTOMER_FINAL_TYPE_LIST = "";
            string SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = "";
            string SELECTION_CUSTOMER_FINAL_GROUP_LIST = "";
            string SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = "";
            string SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = "";



            // Empty Datatable
            // -----------------------------------
            Quarter_Dt.Clear();
            Rule_Dt.Clear();
            RuleOne_Dt.Clear();
            SapAct_Forecast_OneRule_OneQuarter_Dt.Clear();
            SapAct_Forecast_AllRules_AllQuarters_Dt.Clear();
            Royalty_OneRule_OneQuarter_Dt.Clear();
            Royalty_AllRule_OneQuarter_Dt.Clear();
            Royalty_Dt.Clear();






            // Quarters da elaborare
            // -----------------------------------
            //Query_Quarters_TEST(
            //    in Plan,
            //    in List_Quarter_Actual_Dt,
            //    ref Quarter_Dt);



            //Query_Quarters(
            //    in Plan,
            //    in List_Quarter_Actual_Dt,
            //    ref Quarter_Dt);



            //// Rules da elaborare
            //// -----------------------------------
            //Query_Agreements(
            //    in Agreement, 
            //    in Agreement_Dt, 
            //    ref Rule_Dt);




            //// Init da elaborare
            //// -----------------------------------
            //Query_Init(
            //    in Agreement, 
            //    in Init_Dt,
            //    ref INITIAL_MONTH_OF_CONTRACT,
            //    ref FINAL_MONTH_OF_CONTRACT,
            //    ref MONTH_OF_INITIALIZATION,
            //    ref CUM_NET_QTY_PCS,
            //    ref CUM_NET_REVENUE_LCL,
            //    ref CUM_NET_REVENUE_USD,
            //    ref CUM_ROYALTY_LCL,
            //    ref CUM_ROYALTY_USD,
            //    ref CUM_ROYALTY_PAID_LCL,
            //    ref CUM_ROYALTY_PAID_USD);






            //// Sap Actuals e forecast di tutti i Rules di un agreement e tutti i quarters
            //// -----------------------------------
            //Query_SapAct_Forecast_AllRules_AllQuarters(
            //    in Plan, 
            //    in Rule_Dt, 
            //    in Quarter_Dt, 
            //    ref SapAct_Forecast_AllRules_AllQuarters_Dt);




            //// Estrae i dati iniziali cumulativi dalla tabella Royalty
            //// -----------------------------------
            //Query_Royalty_Cum(
            //    in Plan,
            //    in QUARTER,
            //    ref Royalty_Cum_Dt);




            //// Calcolo delle Royalty
            //// -----------------------------------
            //Royalty_Dt.Clear();

            //foreach (DataRow Quarter_Dr in Quarter_Dt.Rows)
            //{
            //    QUARTER = (string)Quarter_Dr["QUARTER (yyyyQq)"];

            //    // Royalty di un solo quarter e di una sola rule => Royalty_OneRule_OneQuarter_Dt
            //    Royalty_AllRule_OneQuarter_Dt.Clear();

            //    foreach (DataRow Rule_Dr in Rule_Dt.Rows)
            //    {
            //        // Clear
            //        Royalty_OneRule_OneQuarter_Dt.Clear();
            //        Rule_Dt.Clear();

            //        //Memorizzza la rule da elaborare in una DataTable e salva alcuni parametri
            //        RuleOne_Dt.Rows.Add(Rule_Dr);
            //        MODEL_CURRENCY = RuleOne_Dt.Rows[0]["MODEL_CURRENCY"].ToString();
            //        MODEL_TYPE = RuleOne_Dt.Rows[0]["MODEL_TYPE"].ToString();
            //        AGREEMENT = RuleOne_Dt.Rows[0]["AGREEMENT"].ToString();
            //        SELECTION_PL_LIST = RuleOne_Dt.Rows[0]["SELECTION_PL_LIST"].ToString();
            //        SELECTION_CP_CONDITION = RuleOne_Dt.Rows[0]["SELECTION_CP_CONDITION"].ToString();
            //        SELECTION_CP_LIST = RuleOne_Dt.Rows[0]["SELECTION_CP_LIST"].ToString();
            //        SELECTION_CUSTOMER_FINAL_CONDITION = RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_CONDITION"].ToString();
            //        SELECTION_CUSTOMER_FINAL_LIST = RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_LIST"].ToString();
            //        SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_CONDITION"].ToString();
            //        SELECTION_CUSTOMER_FINAL_TYPE_LIST = RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_LIST"].ToString();
            //        SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_CONDITION"].ToString();
            //        SELECTION_CUSTOMER_FINAL_GROUP_LIST = RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_LIST"].ToString();
            //        SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION"].ToString();
            //        SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_LIST"].ToString();



            //        // Estrae Exchange Rate
            //        Query_Exchange_Rate(
            //            in MODEL_CURRENCY,
            //            in QUARTER,
            //            in Exchange_Dt,
            //            ref EXCHANGE_RATE);



            //        // Estrae dati da SapAct_Forecast_Dt e salva in SapAct_Forecast_OneRule_OneQuarter_Dt
            //        Query_SapAct_Forecast_OneRule_OneQuarter(
            //            in QUARTER,
            //            in INITIAL_MONTH_OF_CONTRACT,
            //            in FINAL_MONTH_OF_CONTRACT,
            //            in SELECTION_PL_LIST,
            //            in SELECTION_CP_CONDITION,
            //            in SELECTION_CP_LIST,
            //            in SELECTION_CUSTOMER_FINAL_CONDITION,
            //            in SELECTION_CUSTOMER_FINAL_LIST,
            //            in SELECTION_CUSTOMER_FINAL_TYPE_CONDITION,
            //            in SELECTION_CUSTOMER_FINAL_TYPE_LIST,
            //            in SELECTION_CUSTOMER_FINAL_GROUP_CONDITION,
            //            in SELECTION_CUSTOMER_FINAL_GROUP_LIST,
            //            in SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION,
            //            in SELECTION_CUSTOMER_FINAL_SHIPTO_LIST,
            //            in SapAct_Forecast_AllRules_AllQuarters_Dt,
            //            ref SapAct_Forecast_OneRule_OneQuarter_Dt);



            //        // Inserisce SapAct_Forecast_OneRule_OneQuarter_Dt in Royalty_OneRule_OneQuarter_Dt
            //        Append_In_Royalty_OneRule_OneQuarter_Dt(
            //            in SapAct_Forecast_OneRule_OneQuarter_Dt,
            //            in AGREEMENT,
            //            in MODEL_CURRENCY,
            //            in EXCHANGE_RATE,
            //            ref Royalty_OneRule_OneQuarter_Dt);



            //        // Inizializza i dati cumulativi di Royalty_OneRule_OneQuarter
            //        Init_Cumulative_Royalty_OneRule_OneQuarter(
            //            in Plan,
            //            in QUARTER,
            //            in AGREEMENT,
            //            in INITIAL_MONTH_OF_CONTRACT,
            //            in FINAL_MONTH_OF_CONTRACT,
            //            in MONTH_OF_INITIALIZATION,
            //            in CUM_NET_QTY_PCS,
            //            in CUM_NET_REVENUE_LCL,
            //            in CUM_NET_REVENUE_USD,
            //            in CUM_ROYALTY_LCL,
            //            in CUM_ROYALTY_USD,
            //            in CUM_ROYALTY_PAID_LCL,
            //            in CUM_ROYALTY_PAID_USD,
            //            in Royalty_AllRule_OneQuarter_Dt,
            //            in Royalty_Cum_Dt,
            //            ref Royalty_OneRule_OneQuarter_Dt);




            //        // Calcola Royalty_OneRule_OneQuarter
            //        Elaborate_Royalty_OneRule_OneQuarter(
            //            in MODEL_TYPE,
            //            ref RuleOne_Dt,
            //            ref Royalty_OneRule_OneQuarter_Dt);






            //    }
            //}


            //    //    // Dati da Royalty_QA_Dt a RoyaltyQDt
            //    //    // -----------------------------------
            //    //    if (Royalty_QA_Dt.Rows.Count > 0)
            //    //    {
            //    //        foreach (DataRow dr in Royalty_QA_Dt.Rows)
            //    //        {
            //    //            Royalty_Q_Dt.ImportRow(dr);
            //    //        }
            //    //    }


            //    //}




            Dts.TaskResult = (int)ScriptResults.Success;
        }








        //public void Query_Quarters(
        //    in string Plan,
        //    in DataTable List_Quarter_Actual_Dt,
        //    ref DataTable Quarter_Dt)
        //{

        //    // Variabili interne
        //    //-----------------------------------
        //    string SqlString = "";


        //    if (Plan == "ACTUAL")
        //    {
        //        Quarter_Dt.Clear();
        //        Quarter_Dt = List_Quarter_Actual_Dt.Copy();

        //        Quarter_Dt.DefaultView.Sort = "[QUARTER (yyyyQq)]";
        //        Quarter_Dt = Quarter_Dt.DefaultView.ToTable();
        //    }
        //    else
        //    {
        //        SqlConnection SqlConn = new SqlConnection(@"Data Source = AGRCLFRSSQLPR.AGRMFG.STMMFG.COM\SRMPRD; Integrated Security=true; Initial Catalog = ROYALTY; Connection Timeout = 0");

        //        SqlString = @"
        //            SELECT DISTINCT
        //                SUBSTRING([DateQuarter],1,4) + 'Q' + SUBSTRING([DateQuarter],5,1) AS [QUARTER (yyyyQq)]
        //            FROM [EPM].[dbo].[EPM_SMF]
        //            WHERE
        //                [VersionVersion] = '" + Plan + "' " + @"
        //            ORDER BY
        //                SUBSTRING([DateQuarter],1,4) + 'Q' + SUBSTRING([DateQuarter],5,1) ";
        //        SqlDataAdapter SqlAd_List_Quarter = new SqlDataAdapter(SqlString, SqlConn);
        //        SqlAd_List_Quarter.Fill(Quarter_Dt);

        //        SqlConn.Close();


        //        Quarter_Dt.DefaultView.Sort = "[QUARTER (yyyyQq)]";
        //        Quarter_Dt = Quarter_Dt.DefaultView.ToTable();
        //    }


        //}










        //public void M01_SLOTqty_RATEqty_MINMAXrev(ref DataTable RuleOne_Dt, ref DataTable Royalty_OneRule_OneQuarter_Dt)
        //{
        //    // ****************************************************
        //    // MODELLO 01
        //    // SLOT: sulle quantita'
        //    // RATE: sulle quantita', Roy/pcs
        //    // MIN/MAX RATE: su Roy/pcs
        //    //
        //    // ESEMPIO: 
        //    //
        //    //


        //    // Variabili interne
        //    // -----------------------------------
        //    string AGREEMENT_ID = "";
        //    string AGREEMENT = "";
        //    string VERSION_DATE = "";
        //    string VERSION_DESCR = "";
        //    string MODEL_ACTIVE = "";
        //    string MODEL_INITIAL_MONTH = "";
        //    string MODEL_FINAL_MONTH = "";
        //    string MODEL_TYPE = "";
        //    string MODEL_CURRENCY = "";
        //    double MODEL_NB_SLOT = 0;
        //    double MODEL_MIN_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MIN_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MIN_EACH_QUARTER_ROYALTY = 0;
        //    double MODEL_MAX_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MAX_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MAX_EACH_QUARTER_ROYALTY = 0;
        //    string SELECTION_PL_LIST = "";
        //    string SELECTION_CP_LIST = "";
        //    string SELECTION_CP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = "";
        //    string SLOT01_MESSAGE = "";
        //    double SLOT01_START = 0;
        //    double SLOT01_END = 0;
        //    double SLOT01_RATE = 0;
        //    double SLOT01_MIN = 0;
        //    double SLOT01_MAX = 0;
        //    string SLOT01_A = "";
        //    string SLOT01_B = "";
        //    string SLOT01_C = "";
        //    string SLOT01_D = "";
        //    string SLOT01_E = "";
        //    string SLOT01_F = "";
        //    string SLOT01_G = "";
        //    string SLOT01_H = "";
        //    string SLOT02_MESSAGE = "";
        //    double SLOT02_START = 0;
        //    double SLOT02_END = 0;
        //    double SLOT02_RATE = 0;
        //    double SLOT02_MIN = 0;
        //    double SLOT02_MAX = 0;
        //    string SLOT02_A = "";
        //    string SLOT02_B = "";
        //    string SLOT02_C = "";
        //    string SLOT02_D = "";
        //    string SLOT02_E = "";
        //    string SLOT02_F = "";
        //    string SLOT02_G = "";
        //    string SLOT02_H = "";
        //    string SLOT03_MESSAGE = "";
        //    double SLOT03_START = 0;
        //    double SLOT03_END = 0;
        //    double SLOT03_RATE = 0;
        //    double SLOT03_MIN = 0;
        //    double SLOT03_MAX = 0;
        //    string SLOT03_A = "";
        //    string SLOT03_B = "";
        //    string SLOT03_C = "";
        //    string SLOT03_D = "";
        //    string SLOT03_E = "";
        //    string SLOT03_F = "";
        //    string SLOT03_G = "";
        //    string SLOT03_H = "";
        //    string SLOT04_MESSAGE = "";
        //    double SLOT04_START = 0;
        //    double SLOT04_END = 0;
        //    double SLOT04_RATE = 0;
        //    double SLOT04_MIN = 0;
        //    double SLOT04_MAX = 0;
        //    string SLOT04_A = "";
        //    string SLOT04_B = "";
        //    string SLOT04_C = "";
        //    string SLOT04_D = "";
        //    string SLOT04_E = "";
        //    string SLOT04_F = "";
        //    string SLOT04_G = "";
        //    string SLOT04_H = "";
        //    string SLOT05_MESSAGE = "";
        //    double SLOT05_START = 0;
        //    double SLOT05_END = 0;
        //    double SLOT05_RATE = 0;
        //    double SLOT05_MIN = 0;
        //    double SLOT05_MAX = 0;
        //    string SLOT05_A = "";
        //    string SLOT05_B = "";
        //    string SLOT05_C = "";
        //    string SLOT05_D = "";
        //    string SLOT05_E = "";
        //    string SLOT05_F = "";
        //    string SLOT05_G = "";
        //    string SLOT05_H = "";
        //    string SLOT06_MESSAGE = "";
        //    double SLOT06_START = 0;
        //    double SLOT06_END = 0;
        //    double SLOT06_RATE = 0;
        //    double SLOT06_MIN = 0;
        //    double SLOT06_MAX = 0;
        //    string SLOT06_A = "";
        //    string SLOT06_B = "";
        //    string SLOT06_C = "";
        //    string SLOT06_D = "";
        //    string SLOT06_E = "";
        //    string SLOT06_F = "";
        //    string SLOT06_G = "";
        //    string SLOT06_H = "";
        //    string SLOT07_MESSAGE = "";
        //    double SLOT07_START = 0;
        //    double SLOT07_END = 0;
        //    double SLOT07_RATE = 0;
        //    double SLOT07_MIN = 0;
        //    double SLOT07_MAX = 0;
        //    string SLOT07_A = "";
        //    string SLOT07_B = "";
        //    string SLOT07_C = "";
        //    string SLOT07_D = "";
        //    string SLOT07_E = "";
        //    string SLOT07_F = "";
        //    string SLOT07_G = "";
        //    string SLOT07_H = "";
        //    string SLOT08_MESSAGE = "";
        //    double SLOT08_START = 0;
        //    double SLOT08_END = 0;
        //    double SLOT08_RATE = 0;
        //    double SLOT08_MIN = 0;
        //    double SLOT08_MAX = 0;
        //    string SLOT08_A = "";
        //    string SLOT08_B = "";
        //    string SLOT08_C = "";
        //    string SLOT08_D = "";
        //    string SLOT08_E = "";
        //    string SLOT08_F = "";
        //    string SLOT08_G = "";
        //    string SLOT08_H = "";
        //    string SLOT09_MESSAGE = "";
        //    double SLOT09_START = 0;
        //    double SLOT09_END = 0;
        //    double SLOT09_RATE = 0;
        //    double SLOT09_MIN = 0;
        //    double SLOT09_MAX = 0;
        //    string SLOT09_A = "";
        //    string SLOT09_B = "";
        //    string SLOT09_C = "";
        //    string SLOT09_D = "";
        //    string SLOT09_E = "";
        //    string SLOT09_F = "";
        //    string SLOT09_G = "";
        //    string SLOT09_H = "";
        //    string SLOT10_MESSAGE = "";
        //    double SLOT10_START = 0;
        //    double SLOT10_END = 0;
        //    double SLOT10_RATE = 0;
        //    double SLOT10_MIN = 0;
        //    double SLOT10_MAX = 0;
        //    string SLOT10_A = "";
        //    string SLOT10_B = "";
        //    string SLOT10_C = "";
        //    string SLOT10_D = "";
        //    string SLOT10_E = "";
        //    string SLOT10_F = "";
        //    string SLOT10_G = "";
        //    string SLOT10_H = "";

        //    double NET_QTY_PCS = 0;
        //    double CUM_NET_QTY_PCS = 0;
        //    double NET_REVENUE_LCL = 0;
        //    double CUM_NET_REVENUE_LCL = 0;
        //    double NET_QTY_TOT_PCS = 0;
        //    double NET_REVENUE_TOT_LCL = 0;
        //    double ASPLcl_TOT = 0;

        //    double Qty = 0;
        //    double Qty_Start = 0;
        //    double Qty_End = 0;
        //    double Qty_01 = 0;
        //    double Qty_02 = 0;
        //    double Qty_03 = 0;
        //    double Qty_04 = 0;
        //    double Qty_05 = 0;
        //    double Qty_06 = 0;
        //    double Qty_07 = 0;
        //    double Qty_08 = 0;
        //    double Qty_09 = 0;
        //    double Qty_10 = 0;

        //    double RevLcl = 0;
        //    double RevLcl_Start = 0;
        //    double RevLcl_End = 0;
        //    double RevLcl_01 = 0;
        //    double RevLcl_02 = 0;
        //    double RevLcl_03 = 0;
        //    double RevLcl_04 = 0;
        //    double RevLcl_05 = 0;
        //    double RevLcl_06 = 0;
        //    double RevLcl_07 = 0;
        //    double RevLcl_08 = 0;
        //    double RevLcl_09 = 0;
        //    double RevLcl_10 = 0;

        //    string Slot_Start = "";
        //    string Slot_End = "";

        //    string Condition_Start = "";
        //    string Condition_End = "";
        //    string Condition = "";


        //    // Estrae i dati della Rule
        //    // -----------------------------------
        //    AGREEMENT_ID = (string)RuleOne_Dt.Rows[0]["AGREEMENT_ID"];
        //    AGREEMENT = (string)RuleOne_Dt.Rows[0]["AGREEMENT"];
        //    VERSION_DATE = (string)RuleOne_Dt.Rows[0]["VERSION_DATE"];
        //    VERSION_DESCR = (string)RuleOne_Dt.Rows[0]["VERSION_DESCR"];
        //    MODEL_ACTIVE = (string)RuleOne_Dt.Rows[0]["MODEL_ACTIVE"];
        //    MODEL_INITIAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_INITIAL_MONTH"];
        //    MODEL_FINAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_FINAL_MONTH"];
        //    MODEL_TYPE = (string)RuleOne_Dt.Rows[0]["MODEL_TYPE"];
        //    MODEL_CURRENCY = (string)RuleOne_Dt.Rows[0]["MODEL_CURRENCY"];
        //    MODEL_NB_SLOT = (double)RuleOne_Dt.Rows[0]["MODEL_NB_SLOT"];
        //    MODEL_MIN_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_ACCUMULATED_ROYALTY"];
        //    MODEL_MIN_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_YEAR_ROYALTY"];
        //    MODEL_MIN_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_QUARTER_ROYALTY"];
        //    MODEL_MAX_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_ACCUMULATED_ROYALTY"];
        //    MODEL_MAX_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_YEAR_ROYALTY"];
        //    MODEL_MAX_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_QUARTER_ROYALTY"];
        //    SELECTION_PL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_PL_LIST"];
        //    SELECTION_CP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_LIST"];
        //    SELECTION_CP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_LIST"];
        //    SELECTION_CUSTOMER_FINAL_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_LIST"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_LIST"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_LIST"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION"];
        //    SLOT01_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT01_MESSAGE"];
        //    SLOT01_START = (double)RuleOne_Dt.Rows[0]["SLOT01_START"];
        //    SLOT01_END = (double)RuleOne_Dt.Rows[0]["SLOT01_END"];
        //    SLOT01_RATE = (double)RuleOne_Dt.Rows[0]["SLOT01_RATE"];
        //    SLOT01_MIN = (double)RuleOne_Dt.Rows[0]["SLOT01_MIN"];
        //    SLOT01_MAX = (double)RuleOne_Dt.Rows[0]["SLOT01_MAX"];
        //    SLOT01_A = (string)RuleOne_Dt.Rows[0]["SLOT01_A"];
        //    SLOT01_B = (string)RuleOne_Dt.Rows[0]["SLOT01_B"];
        //    SLOT01_C = (string)RuleOne_Dt.Rows[0]["SLOT01_C"];
        //    SLOT01_D = (string)RuleOne_Dt.Rows[0]["SLOT01_D"];
        //    SLOT01_E = (string)RuleOne_Dt.Rows[0]["SLOT01_E"];
        //    SLOT01_F = (string)RuleOne_Dt.Rows[0]["SLOT01_F"];
        //    SLOT01_G = (string)RuleOne_Dt.Rows[0]["SLOT01_G"];
        //    SLOT01_H = (string)RuleOne_Dt.Rows[0]["SLOT01_H"];
        //    SLOT02_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT02_MESSAGE"];
        //    SLOT02_START = (double)RuleOne_Dt.Rows[0]["SLOT02_START"];
        //    SLOT02_END = (double)RuleOne_Dt.Rows[0]["SLOT02_END"];
        //    SLOT02_RATE = (double)RuleOne_Dt.Rows[0]["SLOT02_RATE"];
        //    SLOT02_MIN = (double)RuleOne_Dt.Rows[0]["SLOT02_MIN"];
        //    SLOT02_MAX = (double)RuleOne_Dt.Rows[0]["SLOT02_MAX"];
        //    SLOT02_A = (string)RuleOne_Dt.Rows[0]["SLOT02_A"];
        //    SLOT02_B = (string)RuleOne_Dt.Rows[0]["SLOT02_B"];
        //    SLOT02_C = (string)RuleOne_Dt.Rows[0]["SLOT02_C"];
        //    SLOT02_D = (string)RuleOne_Dt.Rows[0]["SLOT02_D"];
        //    SLOT02_E = (string)RuleOne_Dt.Rows[0]["SLOT02_E"];
        //    SLOT02_F = (string)RuleOne_Dt.Rows[0]["SLOT02_F"];
        //    SLOT02_G = (string)RuleOne_Dt.Rows[0]["SLOT02_G"];
        //    SLOT02_H = (string)RuleOne_Dt.Rows[0]["SLOT02_H"];
        //    SLOT03_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT03_MESSAGE"];
        //    SLOT03_START = (double)RuleOne_Dt.Rows[0]["SLOT03_START"];
        //    SLOT03_END = (double)RuleOne_Dt.Rows[0]["SLOT03_END"];
        //    SLOT03_RATE = (double)RuleOne_Dt.Rows[0]["SLOT03_RATE"];
        //    SLOT03_MIN = (double)RuleOne_Dt.Rows[0]["SLOT03_MIN"];
        //    SLOT03_MAX = (double)RuleOne_Dt.Rows[0]["SLOT03_MAX"];
        //    SLOT03_A = (string)RuleOne_Dt.Rows[0]["SLOT03_A"];
        //    SLOT03_B = (string)RuleOne_Dt.Rows[0]["SLOT03_B"];
        //    SLOT03_C = (string)RuleOne_Dt.Rows[0]["SLOT03_C"];
        //    SLOT03_D = (string)RuleOne_Dt.Rows[0]["SLOT03_D"];
        //    SLOT03_E = (string)RuleOne_Dt.Rows[0]["SLOT03_E"];
        //    SLOT03_F = (string)RuleOne_Dt.Rows[0]["SLOT03_F"];
        //    SLOT03_G = (string)RuleOne_Dt.Rows[0]["SLOT03_G"];
        //    SLOT03_H = (string)RuleOne_Dt.Rows[0]["SLOT03_H"];
        //    SLOT04_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT04_MESSAGE"];
        //    SLOT04_START = (double)RuleOne_Dt.Rows[0]["SLOT04_START"];
        //    SLOT04_END = (double)RuleOne_Dt.Rows[0]["SLOT04_END"];
        //    SLOT04_RATE = (double)RuleOne_Dt.Rows[0]["SLOT04_RATE"];
        //    SLOT04_MIN = (double)RuleOne_Dt.Rows[0]["SLOT04_MIN"];
        //    SLOT04_MAX = (double)RuleOne_Dt.Rows[0]["SLOT04_MAX"];
        //    SLOT04_A = (string)RuleOne_Dt.Rows[0]["SLOT04_A"];
        //    SLOT04_B = (string)RuleOne_Dt.Rows[0]["SLOT04_B"];
        //    SLOT04_C = (string)RuleOne_Dt.Rows[0]["SLOT04_C"];
        //    SLOT04_D = (string)RuleOne_Dt.Rows[0]["SLOT04_D"];
        //    SLOT04_E = (string)RuleOne_Dt.Rows[0]["SLOT04_E"];
        //    SLOT04_F = (string)RuleOne_Dt.Rows[0]["SLOT04_F"];
        //    SLOT04_G = (string)RuleOne_Dt.Rows[0]["SLOT04_G"];
        //    SLOT04_H = (string)RuleOne_Dt.Rows[0]["SLOT04_H"];
        //    SLOT05_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT05_MESSAGE"];
        //    SLOT05_START = (double)RuleOne_Dt.Rows[0]["SLOT05_START"];
        //    SLOT05_END = (double)RuleOne_Dt.Rows[0]["SLOT05_END"];
        //    SLOT05_RATE = (double)RuleOne_Dt.Rows[0]["SLOT05_RATE"];
        //    SLOT05_MIN = (double)RuleOne_Dt.Rows[0]["SLOT05_MIN"];
        //    SLOT05_MAX = (double)RuleOne_Dt.Rows[0]["SLOT05_MAX"];
        //    SLOT05_A = (string)RuleOne_Dt.Rows[0]["SLOT05_A"];
        //    SLOT05_B = (string)RuleOne_Dt.Rows[0]["SLOT05_B"];
        //    SLOT05_C = (string)RuleOne_Dt.Rows[0]["SLOT05_C"];
        //    SLOT05_D = (string)RuleOne_Dt.Rows[0]["SLOT05_D"];
        //    SLOT05_E = (string)RuleOne_Dt.Rows[0]["SLOT05_E"];
        //    SLOT05_F = (string)RuleOne_Dt.Rows[0]["SLOT05_F"];
        //    SLOT05_G = (string)RuleOne_Dt.Rows[0]["SLOT05_G"];
        //    SLOT05_H = (string)RuleOne_Dt.Rows[0]["SLOT05_H"];
        //    SLOT06_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT06_MESSAGE"];
        //    SLOT06_START = (double)RuleOne_Dt.Rows[0]["SLOT06_START"];
        //    SLOT06_END = (double)RuleOne_Dt.Rows[0]["SLOT06_END"];
        //    SLOT06_RATE = (double)RuleOne_Dt.Rows[0]["SLOT06_RATE"];
        //    SLOT06_MIN = (double)RuleOne_Dt.Rows[0]["SLOT06_MIN"];
        //    SLOT06_MAX = (double)RuleOne_Dt.Rows[0]["SLOT06_MAX"];
        //    SLOT06_A = (string)RuleOne_Dt.Rows[0]["SLOT06_A"];
        //    SLOT06_B = (string)RuleOne_Dt.Rows[0]["SLOT06_B"];
        //    SLOT06_C = (string)RuleOne_Dt.Rows[0]["SLOT06_C"];
        //    SLOT06_D = (string)RuleOne_Dt.Rows[0]["SLOT06_D"];
        //    SLOT06_E = (string)RuleOne_Dt.Rows[0]["SLOT06_E"];
        //    SLOT06_F = (string)RuleOne_Dt.Rows[0]["SLOT06_F"];
        //    SLOT06_G = (string)RuleOne_Dt.Rows[0]["SLOT06_G"];
        //    SLOT06_H = (string)RuleOne_Dt.Rows[0]["SLOT06_H"];
        //    SLOT07_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT07_MESSAGE"];
        //    SLOT07_START = (double)RuleOne_Dt.Rows[0]["SLOT07_START"];
        //    SLOT07_END = (double)RuleOne_Dt.Rows[0]["SLOT07_END"];
        //    SLOT07_RATE = (double)RuleOne_Dt.Rows[0]["SLOT07_RATE"];
        //    SLOT07_MIN = (double)RuleOne_Dt.Rows[0]["SLOT07_MIN"];
        //    SLOT07_MAX = (double)RuleOne_Dt.Rows[0]["SLOT07_MAX"];
        //    SLOT07_A = (string)RuleOne_Dt.Rows[0]["SLOT07_A"];
        //    SLOT07_B = (string)RuleOne_Dt.Rows[0]["SLOT07_B"];
        //    SLOT07_C = (string)RuleOne_Dt.Rows[0]["SLOT07_C"];
        //    SLOT07_D = (string)RuleOne_Dt.Rows[0]["SLOT07_D"];
        //    SLOT07_E = (string)RuleOne_Dt.Rows[0]["SLOT07_E"];
        //    SLOT07_F = (string)RuleOne_Dt.Rows[0]["SLOT07_F"];
        //    SLOT07_G = (string)RuleOne_Dt.Rows[0]["SLOT07_G"];
        //    SLOT07_H = (string)RuleOne_Dt.Rows[0]["SLOT07_H"];
        //    SLOT08_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT08_MESSAGE"];
        //    SLOT08_START = (double)RuleOne_Dt.Rows[0]["SLOT08_START"];
        //    SLOT08_END = (double)RuleOne_Dt.Rows[0]["SLOT08_END"];
        //    SLOT08_RATE = (double)RuleOne_Dt.Rows[0]["SLOT08_RATE"];
        //    SLOT08_MIN = (double)RuleOne_Dt.Rows[0]["SLOT08_MIN"];
        //    SLOT08_MAX = (double)RuleOne_Dt.Rows[0]["SLOT08_MAX"];
        //    SLOT08_A = (string)RuleOne_Dt.Rows[0]["SLOT08_A"];
        //    SLOT08_B = (string)RuleOne_Dt.Rows[0]["SLOT08_B"];
        //    SLOT08_C = (string)RuleOne_Dt.Rows[0]["SLOT08_C"];
        //    SLOT08_D = (string)RuleOne_Dt.Rows[0]["SLOT08_D"];
        //    SLOT08_E = (string)RuleOne_Dt.Rows[0]["SLOT08_E"];
        //    SLOT08_F = (string)RuleOne_Dt.Rows[0]["SLOT08_F"];
        //    SLOT08_G = (string)RuleOne_Dt.Rows[0]["SLOT08_G"];
        //    SLOT08_H = (string)RuleOne_Dt.Rows[0]["SLOT08_H"];
        //    SLOT09_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT09_MESSAGE"];
        //    SLOT09_START = (double)RuleOne_Dt.Rows[0]["SLOT09_START"];
        //    SLOT09_END = (double)RuleOne_Dt.Rows[0]["SLOT09_END"];
        //    SLOT09_RATE = (double)RuleOne_Dt.Rows[0]["SLOT09_RATE"];
        //    SLOT09_MIN = (double)RuleOne_Dt.Rows[0]["SLOT09_MIN"];
        //    SLOT09_MAX = (double)RuleOne_Dt.Rows[0]["SLOT09_MAX"];
        //    SLOT09_A = (string)RuleOne_Dt.Rows[0]["SLOT09_A"];
        //    SLOT09_B = (string)RuleOne_Dt.Rows[0]["SLOT09_B"];
        //    SLOT09_C = (string)RuleOne_Dt.Rows[0]["SLOT09_C"];
        //    SLOT09_D = (string)RuleOne_Dt.Rows[0]["SLOT09_D"];
        //    SLOT09_E = (string)RuleOne_Dt.Rows[0]["SLOT09_E"];
        //    SLOT09_F = (string)RuleOne_Dt.Rows[0]["SLOT09_F"];
        //    SLOT09_G = (string)RuleOne_Dt.Rows[0]["SLOT09_G"];
        //    SLOT09_H = (string)RuleOne_Dt.Rows[0]["SLOT09_H"];
        //    SLOT10_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT10_MESSAGE"];
        //    SLOT10_START = (double)RuleOne_Dt.Rows[0]["SLOT10_START"];
        //    SLOT10_END = (double)RuleOne_Dt.Rows[0]["SLOT10_END"];
        //    SLOT10_RATE = (double)RuleOne_Dt.Rows[0]["SLOT10_RATE"];
        //    SLOT10_MIN = (double)RuleOne_Dt.Rows[0]["SLOT10_MIN"];
        //    SLOT10_MAX = (double)RuleOne_Dt.Rows[0]["SLOT10_MAX"];
        //    SLOT10_A = (string)RuleOne_Dt.Rows[0]["SLOT10_A"];
        //    SLOT10_B = (string)RuleOne_Dt.Rows[0]["SLOT10_B"];
        //    SLOT10_C = (string)RuleOne_Dt.Rows[0]["SLOT10_C"];
        //    SLOT10_D = (string)RuleOne_Dt.Rows[0]["SLOT10_D"];
        //    SLOT10_E = (string)RuleOne_Dt.Rows[0]["SLOT10_E"];
        //    SLOT10_F = (string)RuleOne_Dt.Rows[0]["SLOT10_F"];
        //    SLOT10_G = (string)RuleOne_Dt.Rows[0]["SLOT10_G"];
        //    SLOT10_H = (string)RuleOne_Dt.Rows[0]["SLOT10_H"];



        //    // Loop
        //    // -----------------------------------
        //    for (int i = 0; i < Royalty_OneRule_OneQuarter_Dt.Rows.Count; i++)
        //    {

        //        // Dati iniziali
        //        NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_QTY_PCS"]), 0);
        //        CUM_NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_QTY_PCS"]), 0);
        //        NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_REVENUE_LCL"]), 2);
        //        CUM_NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_REVENUE_LCL"]), 2);
        //        NET_QTY_TOT_PCS = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_QTY_PCS)", ""), 0);
        //        NET_REVENUE_TOT_LCL = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_REVENUE_LCL)", ""), 2);

        //        Qty = NET_QTY_PCS;
        //        Qty_End = CUM_NET_QTY_PCS;
        //        Qty_Start = Qty_End - Qty;

        //        RevLcl = NET_REVENUE_LCL;
        //        RevLcl_End = CUM_NET_REVENUE_LCL;
        //        RevLcl_Start = RevLcl_End - RevLcl;

        //        if (NET_QTY_TOT_PCS != 0)
        //        {
        //            ASPLcl_TOT = NET_REVENUE_TOT_LCL / NET_QTY_TOT_PCS;
        //        }
        //        else
        //        {
        //            ASPLcl_TOT = 0;
        //        }





        //        // Condition
        //        Condition_By_Qty(
        //            in Qty_Start,
        //            in Qty_End,
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT01_MESSAGE,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT02_MESSAGE,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT03_MESSAGE,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT04_MESSAGE,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT05_MESSAGE,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT06_MESSAGE,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT07_MESSAGE,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT08_MESSAGE,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT09_MESSAGE,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in SLOT10_MESSAGE,
        //            ref Condition_Start,
        //            ref Condition_End,
        //            ref Condition
        //            );


        //        // Quantity, Revenue
        //        Quantity_And_Revenue_By_Qty(
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in Qty,
        //            in Qty_Start,
        //            in Qty_End,
        //            ref Qty_01,
        //            ref Qty_02,
        //            ref Qty_03,
        //            ref Qty_04,
        //            ref Qty_05,
        //            ref Qty_06,
        //            ref Qty_07,
        //            ref Qty_08,
        //            ref Qty_09,
        //            ref Qty_10,
        //            ref RevLcl,
        //            ref RevLcl_End,
        //            ref RevLcl_Start,
        //            ref RevLcl_01,
        //            ref RevLcl_02,
        //            ref RevLcl_03,
        //            ref RevLcl_04,
        //            ref RevLcl_05,
        //            ref RevLcl_06,
        //            ref RevLcl_07,
        //            ref RevLcl_08,
        //            ref RevLcl_09,
        //            ref RevLcl_10);



        //    }




        //    //// Variabili interne
        //    //// -----------------------------------
        //    //double Id_Agreement = 0;
        //    //string Agreement = "";
        //    //string Model = "";
        //    //double Slot = 0;
        //    //string Agreement_Date_Start = "";
        //    //string Agreement_Date_End = "";
        //    //string PL_String = "";
        //    //string PL_Cond = "";
        //    //string CP_String = "";
        //    //string CP_Cond = "";
        //    //string Customer_String = "";
        //    //string Customer_Cond = "";
        //    //string Condition1 = "";
        //    //double Limit1 = 0;
        //    //double Rate1 = 0;
        //    //double Min1 = 0;
        //    //double Max1 = 0;
        //    //double Extra1A = 0;
        //    //double Extra1B = 0;
        //    //double Extra1C = 0;
        //    //double Extra1D = 0;
        //    //double Extra1E = 0;
        //    //double Extra1F = 0;
        //    //string Condition2 = "";
        //    //double Limit2 = 0;
        //    //double Rate2 = 0;
        //    //double Min2 = 0;
        //    //double Max2 = 0;
        //    //double Extra2A = 0;
        //    //double Extra2B = 0;
        //    //double Extra2C = 0;
        //    //double Extra2D = 0;
        //    //double Extra2E = 0;
        //    //double Extra2F = 0;
        //    //string Condition3 = "";
        //    //double Limit3 = 0;
        //    //double Rate3 = 0;
        //    //double Min3 = 0;
        //    //double Max3 = 0;
        //    //double Extra3A = 0;
        //    //double Extra3B = 0;
        //    //double Extra3C = 0;
        //    //double Extra3D = 0;
        //    //double Extra3E = 0;
        //    //double Extra3F = 0;
        //    //string Condition4 = "";
        //    //double Limit4 = 0;
        //    //double Rate4 = 0;
        //    //double Min4 = 0;
        //    //double Max4 = 0;
        //    //double Extra4A = 0;
        //    //double Extra4B = 0;
        //    //double Extra4C = 0;
        //    //double Extra4D = 0;
        //    //double Extra4E = 0;
        //    //double Extra4F = 0;
        //    //string Condition5 = "";
        //    //double Limit5 = 0;
        //    //double Rate5 = 0;
        //    //double Min5 = 0;
        //    //double Max5 = 0;
        //    //double Extra5A = 0;
        //    //double Extra5B = 0;
        //    //double Extra5C = 0;
        //    //double Extra5D = 0;
        //    //double Extra5E = 0;
        //    //double Extra5F = 0;
        //    //string Condition6 = "";
        //    //double Limit6 = 0;
        //    //double Rate6 = 0;
        //    //double Min6 = 0;
        //    //double Max6 = 0;
        //    //double Extra6A = 0;
        //    //double Extra6B = 0;
        //    //double Extra6C = 0;
        //    //double Extra6D = 0;
        //    //double Extra6E = 0;
        //    //double Extra6F = 0;
        //    //double RateOver = 0;
        //    //double MinOver = 0;
        //    //double MaxOver = 0;
        //    //double ExtraOverA = 0;
        //    //double ExtraOverB = 0;
        //    //double ExtraOverC = 0;
        //    //double ExtraOverD = 0;
        //    //double ExtraOverE = 0;
        //    //double ExtraOverF = 0;
        //    //string LclCurrency = "";
        //    //double Min_Cum_Royalty_KLcl = 0;
        //    //double Max_Cum_Royalty_KLcl = 0;

        //    //double QtyL = 0;
        //    //double QtyH = 0;
        //    //double Qty = 0;
        //    //double Qty1 = 0;
        //    //double Qty2 = 0;
        //    //double Qty3 = 0;
        //    //double Qty4 = 0;
        //    //double Qty5 = 0;
        //    //double Qty6 = 0;
        //    //double QtyOver = 0;

        //    //string ConditionL = "";
        //    //string ConditionH = "";
        //    //string Condition = "";

        //    //double RevLclL = 0;
        //    //double RevLclH = 0;
        //    //double RevLcl = 0;
        //    //double RevLcl1 = 0;
        //    //double RevLcl2 = 0;
        //    //double RevLcl3 = 0;
        //    //double RevLcl4 = 0;
        //    //double RevLcl5 = 0;
        //    //double RevLcl6 = 0;
        //    //double RevLclOver = 0;

        //    //double RateOnPcs1 = 0;
        //    //double RateOnPcs2 = 0;
        //    //double RateOnPcs3 = 0;
        //    //double RateOnPcs4 = 0;
        //    //double RateOnPcs5 = 0;
        //    //double RateOnPcs6 = 0;
        //    //double RateOnPcsOver = 0;

        //    //double RateOnRev1 = 0;
        //    //double RateOnRev2 = 0;
        //    //double RateOnRev3 = 0;
        //    //double RateOnRev4 = 0;
        //    //double RateOnRev5 = 0;
        //    //double RateOnRev6 = 0;
        //    //double RateOnRevOver = 0;

        //    //double RoyLclL = 0;
        //    //double RoyLclH = 0;
        //    //double RoyLcl = 0;
        //    //double RoyLcl1 = 0;
        //    //double RoyLcl2 = 0;
        //    //double RoyLcl3 = 0;
        //    //double RoyLcl4 = 0;
        //    //double RoyLcl5 = 0;
        //    //double RoyLcl6 = 0;
        //    //double RoyLclOver = 0;

        //    //double RoyUSDL = 0;
        //    //double RoyUSDH = 0;
        //    //double RoyUSD = 0;

        //    //double RoyPaidLcl = 0;
        //    //double RoyPaidLclL = 0;
        //    //double RoyPaidLclH = 0;

        //    //double RoyPaidUSD = 0;
        //    //double RoyPaidUSDL = 0;
        //    //double RoyPaidUSDH = 0;

        //    //double Rate_Lcl_per_pcs = 0;
        //    //double Rate_USD_per_pcs = 0;
        //    //double Rate_Rev_percent = 0;

        //    //double ExchangeRate = 0;

        //    //double ASPLclTot = 0;
        //    //double RevLclTot = 0;
        //    //double QtyTot = 0;


        //    //// Estrae i dati dell'Agreement
        //    //// -----------------------------------
        //    //Id_Agreement = (double)Agreement_QA_Dt.Rows[0]["Id_Agreement"];
        //    //Agreement = Agreement_QA_Dt.Rows[0]["Agreement"].ToString();
        //    //Model = Agreement_QA_Dt.Rows[0]["Model"].ToString();
        //    //Slot = (double)Agreement_QA_Dt.Rows[0]["Slot"];
        //    //Agreement_Date_Start = Agreement_QA_Dt.Rows[0]["Agreement_Date_Start"].ToString();
        //    //Agreement_Date_End = Agreement_QA_Dt.Rows[0]["Agreement_Date_End"].ToString();
        //    //PL_String = Agreement_QA_Dt.Rows[0]["PL_String"].ToString();
        //    //PL_Cond = Agreement_QA_Dt.Rows[0]["PL_Cond"].ToString();
        //    //CP_String = Agreement_QA_Dt.Rows[0]["CP_String"].ToString();
        //    //CP_Cond = Agreement_QA_Dt.Rows[0]["CP_Cond"].ToString();
        //    //Customer_String = Agreement_QA_Dt.Rows[0]["Customer_String"].ToString();
        //    //Customer_Cond = Agreement_QA_Dt.Rows[0]["Customer_Cond"].ToString();
        //    //Condition1 = Agreement_QA_Dt.Rows[0]["Condition1"].ToString();
        //    //Limit1 = (double)Agreement_QA_Dt.Rows[0]["Limit1"];
        //    //Rate1 = (double)Agreement_QA_Dt.Rows[0]["Rate1"];
        //    //Min1 = (double)Agreement_QA_Dt.Rows[0]["Min1"];
        //    //Max1 = (double)Agreement_QA_Dt.Rows[0]["Max1"];
        //    //Extra1A = (double)Agreement_QA_Dt.Rows[0]["Extra1A"];
        //    //Extra1B = (double)Agreement_QA_Dt.Rows[0]["Extra1B"];
        //    //Extra1C = (double)Agreement_QA_Dt.Rows[0]["Extra1C"];
        //    //Extra1D = (double)Agreement_QA_Dt.Rows[0]["Extra1D"];
        //    //Extra1E = (double)Agreement_QA_Dt.Rows[0]["Extra1E"];
        //    //Extra1F = (double)Agreement_QA_Dt.Rows[0]["Extra1F"];
        //    //Condition2 = Agreement_QA_Dt.Rows[0]["Condition2"].ToString();
        //    //Limit2 = (double)Agreement_QA_Dt.Rows[0]["Limit2"];
        //    //Rate2 = (double)Agreement_QA_Dt.Rows[0]["Rate2"];
        //    //Min2 = (double)Agreement_QA_Dt.Rows[0]["Min2"];
        //    //Max2 = (double)Agreement_QA_Dt.Rows[0]["Max2"];
        //    //Extra2A = (double)Agreement_QA_Dt.Rows[0]["Extra2A"];
        //    //Extra2B = (double)Agreement_QA_Dt.Rows[0]["Extra2B"];
        //    //Extra2C = (double)Agreement_QA_Dt.Rows[0]["Extra2C"];
        //    //Extra2D = (double)Agreement_QA_Dt.Rows[0]["Extra2D"];
        //    //Extra2E = (double)Agreement_QA_Dt.Rows[0]["Extra2E"];
        //    //Extra2F = (double)Agreement_QA_Dt.Rows[0]["Extra2F"];
        //    //Condition3 = Agreement_QA_Dt.Rows[0]["Condition3"].ToString();
        //    //Limit3 = (double)Agreement_QA_Dt.Rows[0]["Limit3"];
        //    //Rate3 = (double)Agreement_QA_Dt.Rows[0]["Rate3"];
        //    //Min3 = (double)Agreement_QA_Dt.Rows[0]["Min3"];
        //    //Max3 = (double)Agreement_QA_Dt.Rows[0]["Max3"];
        //    //Extra3A = (double)Agreement_QA_Dt.Rows[0]["Extra3A"];
        //    //Extra3B = (double)Agreement_QA_Dt.Rows[0]["Extra3B"];
        //    //Extra3C = (double)Agreement_QA_Dt.Rows[0]["Extra3C"];
        //    //Extra3D = (double)Agreement_QA_Dt.Rows[0]["Extra3D"];
        //    //Extra3E = (double)Agreement_QA_Dt.Rows[0]["Extra3E"];
        //    //Extra3F = (double)Agreement_QA_Dt.Rows[0]["Extra3F"];
        //    //Condition4 = Agreement_QA_Dt.Rows[0]["Condition4"].ToString();
        //    //Limit4 = (double)Agreement_QA_Dt.Rows[0]["Limit4"];
        //    //Rate4 = (double)Agreement_QA_Dt.Rows[0]["Rate4"];
        //    //Min4 = (double)Agreement_QA_Dt.Rows[0]["Min4"];
        //    //Max4 = (double)Agreement_QA_Dt.Rows[0]["Max4"];
        //    //Extra4A = (double)Agreement_QA_Dt.Rows[0]["Extra4A"];
        //    //Extra4B = (double)Agreement_QA_Dt.Rows[0]["Extra4B"];
        //    //Extra4C = (double)Agreement_QA_Dt.Rows[0]["Extra4C"];
        //    //Extra4D = (double)Agreement_QA_Dt.Rows[0]["Extra4D"];
        //    //Extra4E = (double)Agreement_QA_Dt.Rows[0]["Extra4E"];
        //    //Extra4F = (double)Agreement_QA_Dt.Rows[0]["Extra4F"];
        //    //Condition5 = Agreement_QA_Dt.Rows[0]["Condition5"].ToString();
        //    //Limit5 = (double)Agreement_QA_Dt.Rows[0]["Limit5"];
        //    //Rate5 = (double)Agreement_QA_Dt.Rows[0]["Rate5"];
        //    //Min5 = (double)Agreement_QA_Dt.Rows[0]["Min5"];
        //    //Max5 = (double)Agreement_QA_Dt.Rows[0]["Max5"];
        //    //Extra5A = (double)Agreement_QA_Dt.Rows[0]["Extra5A"];
        //    //Extra5B = (double)Agreement_QA_Dt.Rows[0]["Extra5B"];
        //    //Extra5C = (double)Agreement_QA_Dt.Rows[0]["Extra5C"];
        //    //Extra5D = (double)Agreement_QA_Dt.Rows[0]["Extra5D"];
        //    //Extra5E = (double)Agreement_QA_Dt.Rows[0]["Extra5E"];
        //    //Extra5F = (double)Agreement_QA_Dt.Rows[0]["Extra5F"];
        //    //Condition6 = Agreement_QA_Dt.Rows[0]["Condition6"].ToString();
        //    //Limit6 = (double)Agreement_QA_Dt.Rows[0]["Limit6"];
        //    //Rate6 = (double)Agreement_QA_Dt.Rows[0]["Rate6"];
        //    //Min6 = (double)Agreement_QA_Dt.Rows[0]["Min6"];
        //    //Max6 = (double)Agreement_QA_Dt.Rows[0]["Max6"];
        //    //Extra6A = (double)Agreement_QA_Dt.Rows[0]["Extra6A"];
        //    //Extra6B = (double)Agreement_QA_Dt.Rows[0]["Extra6B"];
        //    //Extra6C = (double)Agreement_QA_Dt.Rows[0]["Extra6C"];
        //    //Extra6D = (double)Agreement_QA_Dt.Rows[0]["Extra6D"];
        //    //Extra6E = (double)Agreement_QA_Dt.Rows[0]["Extra6E"];
        //    //Extra6F = (double)Agreement_QA_Dt.Rows[0]["Extra6F"];
        //    //RateOver = (double)Agreement_QA_Dt.Rows[0]["RateOver"];
        //    //MinOver = (double)Agreement_QA_Dt.Rows[0]["MinOver"];
        //    //MaxOver = (double)Agreement_QA_Dt.Rows[0]["MaxOver"];
        //    //ExtraOverA = (double)Agreement_QA_Dt.Rows[0]["ExtraOverA"];
        //    //ExtraOverB = (double)Agreement_QA_Dt.Rows[0]["ExtraOverB"];
        //    //ExtraOverC = (double)Agreement_QA_Dt.Rows[0]["ExtraOverC"];
        //    //ExtraOverD = (double)Agreement_QA_Dt.Rows[0]["ExtraOverD"];
        //    //ExtraOverE = (double)Agreement_QA_Dt.Rows[0]["ExtraOverE"];
        //    //ExtraOverF = (double)Agreement_QA_Dt.Rows[0]["ExtraOverF"];
        //    //LclCurrency = Agreement_QA_Dt.Rows[0]["LclCurrency"].ToString();
        //    //Min_Cum_Royalty_KLcl = (double)Agreement_QA_Dt.Rows[0]["Min_Cum_Royalty_KLcl"];
        //    //Max_Cum_Royalty_KLcl = (double)Agreement_QA_Dt.Rows[0]["Max_Cum_Royalty_KLcl"];




        //    //// Loop
        //    //// -----------------------------------
        //    //for (int RowI = 0; RowI <= Royalty_QA_Dt.Rows.Count - 1; RowI++)
        //    //{

        //    //    // Dati iniziali 
        //    //    // -----------------------------------
        //    //    Condition = "";
        //    //    ExchangeRate = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["ExchangeRate"]), 4);
        //    //    if (ExchangeRate == 0) { ExchangeRate = 1; }

        //    //    RevLcl = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Net_Revenue_KLcl"]), 4);
        //    //    RevLclH = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Cum_Net_Revenue_KLcl"]), 4);
        //    //    RevLclL = RevLclH - RevLcl;
        //    //    Qty = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Net_qty_Kpcs"]), 3);
        //    //    QtyH = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Cum_Net_qty_Kpcs"]), 3);
        //    //    QtyL = QtyH - Qty;
        //    //    RoyLcl = 0;
        //    //    RoyUSD = 0;
        //    //    RoyPaidLcl = 0;
        //    //    RoyPaidUSD = 0;
        //    //    Rate_Lcl_per_pcs = 0;
        //    //    Rate_USD_per_pcs = 0;
        //    //    Rate_Rev_percent = 0;

        //    //    if (RowI == 0)
        //    //    {
        //    //        RoyLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_Royalty_KLcl"]), 4);
        //    //        RoyUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_Royalty_KUSD"]), 4);
        //    //        RoyPaidLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_RoyaltyPaid_KLcl"]), 4);
        //    //        RoyPaidUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_RoyaltyPaid_KUSD"]), 4);
        //    //    }
        //    //    else
        //    //    {
        //    //        RoyLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_Royalty_KLcl"]), 4);
        //    //        RoyUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_Royalty_KUSD"]), 4);
        //    //        RoyPaidLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_RoyaltyPaid_KLcl"]), 4);
        //    //        RoyPaidUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_RoyaltyPaid_KUSD"]), 4);
        //    //    }

        //    //    // Condition
        //    //    // -----------------------------------
        //    //    if (QtyL < Limit1) { ConditionL = Condition1; }
        //    //    else if (QtyL >= Limit1 && QtyL < Limit2) { ConditionL = Condition2; }
        //    //    else if (QtyL >= Limit2 && QtyL < Limit3) { ConditionL = Condition3; }
        //    //    else if (QtyL >= Limit3 && QtyL < Limit4) { ConditionL = Condition4; }
        //    //    else if (QtyL >= Limit4 && QtyL < Limit5) { ConditionL = Condition5; }
        //    //    else if (QtyL >= Limit5 && QtyL < Limit6) { ConditionL = Condition6; }
        //    //    else if (QtyL >= Limit6) { ConditionL = "Over"; }
        //    //    else { ConditionL = "ERR"; }

        //    //    if (QtyH < Limit1) { ConditionH = Condition1; }
        //    //    else if (QtyH >= Limit1 && QtyH < Limit2) { ConditionH = Condition2; }
        //    //    else if (QtyH >= Limit2 && QtyH < Limit3) { ConditionH = Condition3; }
        //    //    else if (QtyH >= Limit3 && QtyH < Limit4) { ConditionH = Condition4; }
        //    //    else if (QtyH >= Limit4 && QtyH < Limit5) { ConditionH = Condition5; }
        //    //    else if (QtyH >= Limit5 && QtyH < Limit6) { ConditionH = Condition6; }
        //    //    else if (QtyH >= Limit6) { ConditionL = "Over"; }
        //    //    else { ConditionL = "ERR"; }

        //    //    if (string.Equals(ConditionL, ConditionH))
        //    //    {
        //    //        Condition = ConditionL;
        //    //    }
        //    //    else
        //    //    {
        //    //        Condition = ConditionL + " -> " + ConditionH;
        //    //    }

        //    //    // Quantity
        //    //    // -----------------------------------
        //    //    Qty1 = 0;
        //    //    Qty2 = 0;
        //    //    Qty3 = 0;
        //    //    Qty4 = 0;
        //    //    Qty5 = 0;
        //    //    Qty6 = 0;
        //    //    QtyOver = 0;

        //    //    if (Qty >= 0)
        //    //    {
        //    //        if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition1)) { Qty1 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition2)) { Qty1 = Limit1 - QtyL; Qty2 = QtyH - Limit1; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition3)) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = QtyH - Limit2; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition4)) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = Limit3 - Limit2; Qty4 = QtyH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition5)) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = QtyH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition6)) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, "Over")) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition2)) { Qty2 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition3)) { Qty2 = Limit2 - QtyL; Qty3 = QtyH - Limit2; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition4)) { Qty2 = Limit2 - QtyL; Qty3 = Limit3 - Limit2; Qty4 = QtyH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition5)) { Qty2 = Limit2 - QtyL; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = QtyH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition6)) { Qty2 = Limit2 - QtyL; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, "Over")) { Qty2 = Limit2 - QtyL; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition3)) { Qty3 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition4)) { Qty3 = Limit3 - QtyL; Qty4 = QtyH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition5)) { Qty3 = Limit3 - QtyL; Qty4 = Limit4 - Limit3; Qty5 = QtyH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition6)) { Qty3 = Limit3 - QtyL; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, "Over")) { Qty3 = Limit3 - QtyL; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition4)) { Qty4 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition5)) { Qty4 = Limit4 - QtyL; Qty5 = QtyH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition6)) { Qty4 = Limit4 - QtyL; Qty5 = Limit5 - Limit4; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, "Over")) { Qty4 = Limit4 - QtyL; Qty5 = Limit5 - Limit4; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, Condition5)) { Qty5 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, Condition6)) { Qty5 = Limit5 - QtyL; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, "Over")) { Qty5 = Limit5 - QtyL; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition6) && string.Equals(ConditionH, Condition6)) { Qty6 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition6) && string.Equals(ConditionH, "Over")) { Qty6 = Limit6 - QtyL; QtyOver = QtyH - Limit6; }

        //    //        else { QtyOver = QtyH - QtyL; }

        //    //    }
        //    //    else
        //    //    {
        //    //        if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition1)) { Qty1 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition2)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(QtyL - Limit1); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition3)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(QtyL - Limit2); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition4)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(Limit3 - Limit2); Qty4 = -(QtyL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition5)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(QtyL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition6)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, "Over")) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition2)) { Qty2 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition3)) { Qty2 = -(Limit2 - QtyH); Qty3 = -(QtyL - Limit2); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition4)) { Qty2 = -(Limit2 - QtyH); Qty3 = -(Limit3 - Limit2); Qty4 = -(QtyL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition5)) { Qty2 = -(Limit2 - QtyH); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(QtyL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition6)) { Qty2 = -(Limit2 - QtyH); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, "Over")) { Qty2 = -(Limit2 - QtyH); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition3)) { Qty3 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition4)) { Qty3 = -(Limit3 - QtyH); Qty4 = -(QtyL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition5)) { Qty3 = -(Limit3 - QtyH); Qty4 = -(Limit4 - Limit3); Qty5 = -(QtyL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition6)) { Qty3 = -(Limit3 - QtyH); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, "Over")) { Qty3 = -(Limit3 - QtyH); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition4)) { Qty4 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition5)) { Qty4 = -(Limit4 - QtyH); Qty5 = -(QtyL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition6)) { Qty4 = -(Limit4 - QtyH); Qty5 = -(Limit5 - Limit4); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, "Over")) { Qty4 = -(Limit4 - QtyH); Qty5 = -(Limit5 - Limit4); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, Condition5)) { Qty5 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, Condition6)) { Qty5 = -(Limit5 - QtyH); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, "Over")) { Qty5 = -(Limit5 - QtyH); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition6) && string.Equals(ConditionL, Condition6)) { Qty6 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition6) && string.Equals(ConditionL, "Over")) { Qty6 = -(Limit6 - QtyH); QtyOver = -(QtyL - Limit6); }

        //    //        else { QtyOver = QtyH - QtyL; }

        //    //    }

        //    //    // Net Revenue
        //    //    // -----------------------------------
        //    //    if (Qty != 0 && RevLcl != 0)
        //    //    {
        //    //        RevLcl1 = RevLcl * Qty1 / Qty;
        //    //        RevLcl2 = RevLcl * Qty2 / Qty;
        //    //        RevLcl3 = RevLcl * Qty3 / Qty;
        //    //        RevLcl4 = RevLcl * Qty4 / Qty;
        //    //        RevLcl5 = RevLcl * Qty5 / Qty;
        //    //        RevLcl6 = RevLcl * Qty6 / Qty;
        //    //        RevLclOver = RevLcl * QtyOver / Qty;
        //    //    }
        //    //    else if (Qty != 0 && RevLcl == 0)
        //    //    {
        //    //        RevLcl1 = 0;
        //    //        RevLcl2 = 0;
        //    //        RevLcl3 = 0;
        //    //        RevLcl4 = 0;
        //    //        RevLcl5 = 0;
        //    //        RevLcl6 = 0;
        //    //        RevLclOver = 0;
        //    //    }
        //    //    else if (Qty == 0 && RevLcl != 0)
        //    //    {
        //    //        RevLcl1 = 0;
        //    //        RevLcl2 = 0;
        //    //        RevLcl3 = 0;
        //    //        RevLcl4 = 0;
        //    //        RevLcl5 = 0;
        //    //        RevLcl6 = 0;
        //    //        RevLclOver = 0;

        //    //        if (string.Equals(Condition, Condition1)) { RevLcl1 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition2)) { RevLcl2 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition3)) { RevLcl3 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition4)) { RevLcl4 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition5)) { RevLcl5 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition6)) { RevLcl6 = RevLcl; }
        //    //        else { RevLclOver = RevLcl; }
        //    //    }
        //    //    else
        //    //    {
        //    //        RevLcl1 = 0;
        //    //        RevLcl2 = 0;
        //    //        RevLcl3 = 0;
        //    //        RevLcl4 = 0;
        //    //        RevLcl5 = 0;
        //    //        RevLcl6 = 0;
        //    //        RevLclOver = 0;
        //    //    }


        //    //    // ASP Tot
        //    //    // -----------------------------------
        //    //    RevLclTot = Math.Round((double)Royalty_QA_Dt.Compute("Sum(Net_Revenue_KLcl)", ""), 4);
        //    //    QtyTot = Math.Round((double)Royalty_QA_Dt.Compute("Sum(Net_qty_Kpcs)", ""), 3);
        //    //    if (QtyTot != 0) { ASPLclTot = RevLclTot / QtyTot; } else { ASPLclTot = 0; }

        //    //    // RateOnPcs
        //    //    // -----------------------------------
        //    //    RateOnPcs1 = Rate1;
        //    //    RateOnPcs2 = Rate2;
        //    //    RateOnPcs3 = Rate3;
        //    //    RateOnPcs4 = Rate4;
        //    //    RateOnPcs5 = Rate5;
        //    //    RateOnPcs6 = Rate6;
        //    //    RateOnPcsOver = RateOver;

        //    //    // Roy prima del check min/max
        //    //    // -----------------------------------
        //    //    RoyLcl1 = RateOnPcs1 * Qty1;
        //    //    RoyLcl2 = RateOnPcs2 * Qty2;
        //    //    RoyLcl3 = RateOnPcs3 * Qty3;
        //    //    RoyLcl4 = RateOnPcs4 * Qty4;
        //    //    RoyLcl5 = RateOnPcs5 * Qty5;
        //    //    RoyLcl6 = RateOnPcs6 * Qty6;
        //    //    RoyLclOver = RateOnPcsOver * QtyOver;
        //    //    RoyLcl = RoyLcl1 + RoyLcl2 + RoyLcl3 + RoyLcl4 + RoyLcl5 + RoyLcl6 + RoyLclOver;

        //    //    // RateOnRev
        //    //    // -----------------------------------
        //    //    if (RevLcl1 != 0) { RateOnRev1 = RoyLcl1 / RevLcl1; } else { RateOnRev1 = 0; }
        //    //    if (RevLcl2 != 0) { RateOnRev2 = RoyLcl2 / RevLcl2; } else { RateOnRev2 = 0; }
        //    //    if (RevLcl3 != 0) { RateOnRev3 = RoyLcl3 / RevLcl3; } else { RateOnRev3 = 0; }
        //    //    if (RevLcl4 != 0) { RateOnRev4 = RoyLcl4 / RevLcl4; } else { RateOnRev4 = 0; }
        //    //    if (RevLcl5 != 0) { RateOnRev5 = RoyLcl5 / RevLcl5; } else { RateOnRev5 = 0; }
        //    //    if (RevLcl6 != 0) { RateOnRev6 = RoyLcl6 / RevLcl6; } else { RateOnRev6 = 0; }
        //    //    if (RevLclOver != 0) { RateOnRevOver = RoyLclOver / RevLclOver; } else { RateOnRevOver = 0; }

        //    //    // Check Min/Max
        //    //    // -----------------------------------
        //    //    if (RateOnRev1 < Min1) { RateOnRev1 = Min1; } else if (RateOnRev1 > Max1) { RateOnRev1 = Max1; }
        //    //    if (RateOnRev2 < Min2) { RateOnRev2 = Min2; } else if (RateOnRev2 > Max2) { RateOnRev2 = Max2; }
        //    //    if (RateOnRev3 < Min3) { RateOnRev3 = Min3; } else if (RateOnRev3 > Max3) { RateOnRev3 = Max3; }
        //    //    if (RateOnRev4 < Min4) { RateOnRev4 = Min4; } else if (RateOnRev4 > Max4) { RateOnRev4 = Max4; }
        //    //    if (RateOnRev5 < Min5) { RateOnRev5 = Min5; } else if (RateOnRev5 > Max5) { RateOnRev5 = Max5; }
        //    //    if (RateOnRev6 < Min6) { RateOnRev6 = Min6; } else if (RateOnRev6 > Max6) { RateOnRev6 = Max6; }
        //    //    if (RateOnRevOver < MinOver) { RateOnRevOver = MinOver; } else if (RateOnRevOver > MaxOver) { RateOnRevOver = MaxOver; }

        //    //    // Roy finale
        //    //    // -----------------------------------
        //    //    if (RateOnRev1 != 0) { RoyLcl1 = RateOnRev1 * RevLcl1; }
        //    //    if (RateOnRev2 != 0) { RoyLcl2 = RateOnRev2 * RevLcl2; }
        //    //    if (RateOnRev3 != 0) { RoyLcl3 = RateOnRev3 * RevLcl3; }
        //    //    if (RateOnRev4 != 0) { RoyLcl4 = RateOnRev4 * RevLcl4; }
        //    //    if (RateOnRev5 != 0) { RoyLcl5 = RateOnRev5 * RevLcl5; }
        //    //    if (RateOnRev6 != 0) { RoyLcl6 = RateOnRev6 * RevLcl6; }
        //    //    if (RateOnRevOver != 0) { RoyLclOver = RateOnRevOver * RevLclOver; }
        //    //    RoyLcl = RoyLcl1 + RoyLcl2 + RoyLcl3 + RoyLcl4 + RoyLcl5 + RoyLcl6 + RoyLclOver;
        //    //    RoyLclH = RoyLclL + RoyLcl;
        //    //    RoyUSD = RoyLcl * ExchangeRate;
        //    //    RoyUSDH = RoyUSDL + RoyUSD;


        //    //    // Roy Paid
        //    //    // -----------------------------------
        //    //    if (RoyLcl >= 0)
        //    //    {
        //    //        if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH < Min_Cum_Royalty_KLcl) { RoyPaidLcl = 0; }
        //    //        else if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLclH - Min_Cum_Royalty_KLcl; }
        //    //        else if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = Max_Cum_Royalty_KLcl - Min_Cum_Royalty_KLcl; }
        //    //        else if (RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl && RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLcl; }
        //    //        else if (RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl && RoyLclH >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = Max_Cum_Royalty_KLcl - RoyLclL; }
        //    //        else { RoyPaidLcl = 0; }
        //    //    }
        //    //    else
        //    //    {
        //    //        if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL < Min_Cum_Royalty_KLcl) { RoyPaidLcl = 0; }
        //    //        else if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(RoyLclL - Min_Cum_Royalty_KLcl); }
        //    //        else if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(Max_Cum_Royalty_KLcl - Min_Cum_Royalty_KLcl); }
        //    //        else if (RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl && RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLcl; }
        //    //        else if (RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl && RoyLclL >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(Max_Cum_Royalty_KLcl - RoyLclL); }
        //    //        else { RoyPaidLcl = 0; }
        //    //    }
        //    //    RoyPaidLclH = RoyPaidLclL + RoyPaidLcl;
        //    //    RoyPaidUSD = RoyPaidLcl * ExchangeRate;
        //    //    RoyPaidUSDH = RoyPaidUSDL + RoyPaidUSD;

        //    //    // Rate
        //    //    // -----------------------------------
        //    //    if (Qty != 0) { Rate_Lcl_per_pcs = RoyLcl / Qty; } else { Rate_Lcl_per_pcs = 0; }
        //    //    if (Qty != 0) { Rate_USD_per_pcs = RoyUSD / Qty; } else { Rate_USD_per_pcs = 0; }
        //    //    if (RevLcl != 0) { Rate_Rev_percent = RoyLcl / RevLcl; } else { Rate_Rev_percent = 0; }

        //    //    // Salva i dati i RoyaltyQ
        //    //    // -----------------------------------
        //    //    Royalty_QA_Dt.Rows[RowI]["Condition"] = Condition;
        //    //    Royalty_QA_Dt.Rows[RowI]["Royalty_KLcl"] = Math.Round(RoyLcl, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_Royalty_KLcl"] = Math.Round(RoyLclH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Royalty_KUSD"] = Math.Round(RoyUSD, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_Royalty_KUSD"] = Math.Round(RoyUSDH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["RoyaltyPaid_KLcl"] = Math.Round(RoyPaidLcl, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_RoyaltyPaid_KLcl"] = Math.Round(RoyPaidLclH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["RoyaltyPaid_KUSD"] = Math.Round(RoyPaidUSD, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_RoyaltyPaid_KUSD"] = Math.Round(RoyPaidUSDH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_Lcl_per_pcs"] = Rate_Lcl_per_pcs;
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_USD_per_pcs"] = Rate_USD_per_pcs;
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_Rev_percent"] = Rate_Rev_percent;

        //    //}



        //}



        //public void M02_SLOTrev_RATErev_MINMAXqty(ref DataTable RuleOne_Dt, ref DataTable Royalty_OneRule_OneQuarter_Dt)
        //{
        //    // ****************************************************
        //    // MODELLO 02
        //    // SLOT: sulle revenue
        //    // RATE: sulle Revenue
        //    // MIN/MAX RATE: su Roy/pcs
        //    //
        //    // ESEMPIO: 
        //    //


        //    // Variabili interne
        //    // -----------------------------------
        //    string AGREEMENT_ID = "";
        //    string AGREEMENT = "";
        //    string VERSION_DATE = "";
        //    string VERSION_DESCR = "";
        //    string MODEL_ACTIVE = "";
        //    string MODEL_INITIAL_MONTH = "";
        //    string MODEL_FINAL_MONTH = "";
        //    string MODEL_TYPE = "";
        //    string MODEL_CURRENCY = "";
        //    double MODEL_NB_SLOT = 0;
        //    double MODEL_MIN_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MIN_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MIN_EACH_QUARTER_ROYALTY = 0;
        //    double MODEL_MAX_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MAX_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MAX_EACH_QUARTER_ROYALTY = 0;
        //    string SELECTION_PL_LIST = "";
        //    string SELECTION_CP_LIST = "";
        //    string SELECTION_CP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = "";
        //    string SLOT01_MESSAGE = "";
        //    double SLOT01_START = 0;
        //    double SLOT01_END = 0;
        //    double SLOT01_RATE = 0;
        //    double SLOT01_MIN = 0;
        //    double SLOT01_MAX = 0;
        //    string SLOT01_A = "";
        //    string SLOT01_B = "";
        //    string SLOT01_C = "";
        //    string SLOT01_D = "";
        //    string SLOT01_E = "";
        //    string SLOT01_F = "";
        //    string SLOT01_G = "";
        //    string SLOT01_H = "";
        //    string SLOT02_MESSAGE = "";
        //    double SLOT02_START = 0;
        //    double SLOT02_END = 0;
        //    double SLOT02_RATE = 0;
        //    double SLOT02_MIN = 0;
        //    double SLOT02_MAX = 0;
        //    string SLOT02_A = "";
        //    string SLOT02_B = "";
        //    string SLOT02_C = "";
        //    string SLOT02_D = "";
        //    string SLOT02_E = "";
        //    string SLOT02_F = "";
        //    string SLOT02_G = "";
        //    string SLOT02_H = "";
        //    string SLOT03_MESSAGE = "";
        //    double SLOT03_START = 0;
        //    double SLOT03_END = 0;
        //    double SLOT03_RATE = 0;
        //    double SLOT03_MIN = 0;
        //    double SLOT03_MAX = 0;
        //    string SLOT03_A = "";
        //    string SLOT03_B = "";
        //    string SLOT03_C = "";
        //    string SLOT03_D = "";
        //    string SLOT03_E = "";
        //    string SLOT03_F = "";
        //    string SLOT03_G = "";
        //    string SLOT03_H = "";
        //    string SLOT04_MESSAGE = "";
        //    double SLOT04_START = 0;
        //    double SLOT04_END = 0;
        //    double SLOT04_RATE = 0;
        //    double SLOT04_MIN = 0;
        //    double SLOT04_MAX = 0;
        //    string SLOT04_A = "";
        //    string SLOT04_B = "";
        //    string SLOT04_C = "";
        //    string SLOT04_D = "";
        //    string SLOT04_E = "";
        //    string SLOT04_F = "";
        //    string SLOT04_G = "";
        //    string SLOT04_H = "";
        //    string SLOT05_MESSAGE = "";
        //    double SLOT05_START = 0;
        //    double SLOT05_END = 0;
        //    double SLOT05_RATE = 0;
        //    double SLOT05_MIN = 0;
        //    double SLOT05_MAX = 0;
        //    string SLOT05_A = "";
        //    string SLOT05_B = "";
        //    string SLOT05_C = "";
        //    string SLOT05_D = "";
        //    string SLOT05_E = "";
        //    string SLOT05_F = "";
        //    string SLOT05_G = "";
        //    string SLOT05_H = "";
        //    string SLOT06_MESSAGE = "";
        //    double SLOT06_START = 0;
        //    double SLOT06_END = 0;
        //    double SLOT06_RATE = 0;
        //    double SLOT06_MIN = 0;
        //    double SLOT06_MAX = 0;
        //    string SLOT06_A = "";
        //    string SLOT06_B = "";
        //    string SLOT06_C = "";
        //    string SLOT06_D = "";
        //    string SLOT06_E = "";
        //    string SLOT06_F = "";
        //    string SLOT06_G = "";
        //    string SLOT06_H = "";
        //    string SLOT07_MESSAGE = "";
        //    double SLOT07_START = 0;
        //    double SLOT07_END = 0;
        //    double SLOT07_RATE = 0;
        //    double SLOT07_MIN = 0;
        //    double SLOT07_MAX = 0;
        //    string SLOT07_A = "";
        //    string SLOT07_B = "";
        //    string SLOT07_C = "";
        //    string SLOT07_D = "";
        //    string SLOT07_E = "";
        //    string SLOT07_F = "";
        //    string SLOT07_G = "";
        //    string SLOT07_H = "";
        //    string SLOT08_MESSAGE = "";
        //    double SLOT08_START = 0;
        //    double SLOT08_END = 0;
        //    double SLOT08_RATE = 0;
        //    double SLOT08_MIN = 0;
        //    double SLOT08_MAX = 0;
        //    string SLOT08_A = "";
        //    string SLOT08_B = "";
        //    string SLOT08_C = "";
        //    string SLOT08_D = "";
        //    string SLOT08_E = "";
        //    string SLOT08_F = "";
        //    string SLOT08_G = "";
        //    string SLOT08_H = "";
        //    string SLOT09_MESSAGE = "";
        //    double SLOT09_START = 0;
        //    double SLOT09_END = 0;
        //    double SLOT09_RATE = 0;
        //    double SLOT09_MIN = 0;
        //    double SLOT09_MAX = 0;
        //    string SLOT09_A = "";
        //    string SLOT09_B = "";
        //    string SLOT09_C = "";
        //    string SLOT09_D = "";
        //    string SLOT09_E = "";
        //    string SLOT09_F = "";
        //    string SLOT09_G = "";
        //    string SLOT09_H = "";
        //    string SLOT10_MESSAGE = "";
        //    double SLOT10_START = 0;
        //    double SLOT10_END = 0;
        //    double SLOT10_RATE = 0;
        //    double SLOT10_MIN = 0;
        //    double SLOT10_MAX = 0;
        //    string SLOT10_A = "";
        //    string SLOT10_B = "";
        //    string SLOT10_C = "";
        //    string SLOT10_D = "";
        //    string SLOT10_E = "";
        //    string SLOT10_F = "";
        //    string SLOT10_G = "";
        //    string SLOT10_H = "";

        //    double NET_QTY_PCS = 0;
        //    double CUM_NET_QTY_PCS = 0;
        //    double NET_REVENUE_LCL = 0;
        //    double CUM_NET_REVENUE_LCL = 0;
        //    double NET_QTY_TOT_PCS = 0;
        //    double NET_REVENUE_TOT_LCL = 0;
        //    double ASPLcl_TOT = 0;

        //    double Qty = 0;
        //    double Qty_Start = 0;
        //    double Qty_End = 0;
        //    double Qty_01 = 0;
        //    double Qty_02 = 0;
        //    double Qty_03 = 0;
        //    double Qty_04 = 0;
        //    double Qty_05 = 0;
        //    double Qty_06 = 0;
        //    double Qty_07 = 0;
        //    double Qty_08 = 0;
        //    double Qty_09 = 0;
        //    double Qty_10 = 0;

        //    double RevLcl = 0;
        //    double RevLcl_Start = 0;
        //    double RevLcl_End = 0;
        //    double RevLcl_01 = 0;
        //    double RevLcl_02 = 0;
        //    double RevLcl_03 = 0;
        //    double RevLcl_04 = 0;
        //    double RevLcl_05 = 0;
        //    double RevLcl_06 = 0;
        //    double RevLcl_07 = 0;
        //    double RevLcl_08 = 0;
        //    double RevLcl_09 = 0;
        //    double RevLcl_10 = 0;

        //    string Slot_Start = "";
        //    string Slot_End = "";

        //    string Condition_Start = "";
        //    string Condition_End = "";
        //    string Condition = "";


        //    // Estrae i dati della Rule
        //    // -----------------------------------
        //    AGREEMENT_ID = (string)RuleOne_Dt.Rows[0]["AGREEMENT_ID"];
        //    AGREEMENT = (string)RuleOne_Dt.Rows[0]["AGREEMENT"];
        //    VERSION_DATE = (string)RuleOne_Dt.Rows[0]["VERSION_DATE"];
        //    VERSION_DESCR = (string)RuleOne_Dt.Rows[0]["VERSION_DESCR"];
        //    MODEL_ACTIVE = (string)RuleOne_Dt.Rows[0]["MODEL_ACTIVE"];
        //    MODEL_INITIAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_INITIAL_MONTH"];
        //    MODEL_FINAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_FINAL_MONTH"];
        //    MODEL_TYPE = (string)RuleOne_Dt.Rows[0]["MODEL_TYPE"];
        //    MODEL_CURRENCY = (string)RuleOne_Dt.Rows[0]["MODEL_CURRENCY"];
        //    MODEL_NB_SLOT = (double)RuleOne_Dt.Rows[0]["MODEL_NB_SLOT"];
        //    MODEL_MIN_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_ACCUMULATED_ROYALTY"];
        //    MODEL_MIN_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_YEAR_ROYALTY"];
        //    MODEL_MIN_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_QUARTER_ROYALTY"];
        //    MODEL_MAX_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_ACCUMULATED_ROYALTY"];
        //    MODEL_MAX_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_YEAR_ROYALTY"];
        //    MODEL_MAX_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_QUARTER_ROYALTY"];
        //    SELECTION_PL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_PL_LIST"];
        //    SELECTION_CP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_LIST"];
        //    SELECTION_CP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_LIST"];
        //    SELECTION_CUSTOMER_FINAL_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_LIST"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_LIST"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_LIST"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION"];
        //    SLOT01_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT01_MESSAGE"];
        //    SLOT01_START = (double)RuleOne_Dt.Rows[0]["SLOT01_START"];
        //    SLOT01_END = (double)RuleOne_Dt.Rows[0]["SLOT01_END"];
        //    SLOT01_RATE = (double)RuleOne_Dt.Rows[0]["SLOT01_RATE"];
        //    SLOT01_MIN = (double)RuleOne_Dt.Rows[0]["SLOT01_MIN"];
        //    SLOT01_MAX = (double)RuleOne_Dt.Rows[0]["SLOT01_MAX"];
        //    SLOT01_A = (string)RuleOne_Dt.Rows[0]["SLOT01_A"];
        //    SLOT01_B = (string)RuleOne_Dt.Rows[0]["SLOT01_B"];
        //    SLOT01_C = (string)RuleOne_Dt.Rows[0]["SLOT01_C"];
        //    SLOT01_D = (string)RuleOne_Dt.Rows[0]["SLOT01_D"];
        //    SLOT01_E = (string)RuleOne_Dt.Rows[0]["SLOT01_E"];
        //    SLOT01_F = (string)RuleOne_Dt.Rows[0]["SLOT01_F"];
        //    SLOT01_G = (string)RuleOne_Dt.Rows[0]["SLOT01_G"];
        //    SLOT01_H = (string)RuleOne_Dt.Rows[0]["SLOT01_H"];
        //    SLOT02_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT02_MESSAGE"];
        //    SLOT02_START = (double)RuleOne_Dt.Rows[0]["SLOT02_START"];
        //    SLOT02_END = (double)RuleOne_Dt.Rows[0]["SLOT02_END"];
        //    SLOT02_RATE = (double)RuleOne_Dt.Rows[0]["SLOT02_RATE"];
        //    SLOT02_MIN = (double)RuleOne_Dt.Rows[0]["SLOT02_MIN"];
        //    SLOT02_MAX = (double)RuleOne_Dt.Rows[0]["SLOT02_MAX"];
        //    SLOT02_A = (string)RuleOne_Dt.Rows[0]["SLOT02_A"];
        //    SLOT02_B = (string)RuleOne_Dt.Rows[0]["SLOT02_B"];
        //    SLOT02_C = (string)RuleOne_Dt.Rows[0]["SLOT02_C"];
        //    SLOT02_D = (string)RuleOne_Dt.Rows[0]["SLOT02_D"];
        //    SLOT02_E = (string)RuleOne_Dt.Rows[0]["SLOT02_E"];
        //    SLOT02_F = (string)RuleOne_Dt.Rows[0]["SLOT02_F"];
        //    SLOT02_G = (string)RuleOne_Dt.Rows[0]["SLOT02_G"];
        //    SLOT02_H = (string)RuleOne_Dt.Rows[0]["SLOT02_H"];
        //    SLOT03_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT03_MESSAGE"];
        //    SLOT03_START = (double)RuleOne_Dt.Rows[0]["SLOT03_START"];
        //    SLOT03_END = (double)RuleOne_Dt.Rows[0]["SLOT03_END"];
        //    SLOT03_RATE = (double)RuleOne_Dt.Rows[0]["SLOT03_RATE"];
        //    SLOT03_MIN = (double)RuleOne_Dt.Rows[0]["SLOT03_MIN"];
        //    SLOT03_MAX = (double)RuleOne_Dt.Rows[0]["SLOT03_MAX"];
        //    SLOT03_A = (string)RuleOne_Dt.Rows[0]["SLOT03_A"];
        //    SLOT03_B = (string)RuleOne_Dt.Rows[0]["SLOT03_B"];
        //    SLOT03_C = (string)RuleOne_Dt.Rows[0]["SLOT03_C"];
        //    SLOT03_D = (string)RuleOne_Dt.Rows[0]["SLOT03_D"];
        //    SLOT03_E = (string)RuleOne_Dt.Rows[0]["SLOT03_E"];
        //    SLOT03_F = (string)RuleOne_Dt.Rows[0]["SLOT03_F"];
        //    SLOT03_G = (string)RuleOne_Dt.Rows[0]["SLOT03_G"];
        //    SLOT03_H = (string)RuleOne_Dt.Rows[0]["SLOT03_H"];
        //    SLOT04_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT04_MESSAGE"];
        //    SLOT04_START = (double)RuleOne_Dt.Rows[0]["SLOT04_START"];
        //    SLOT04_END = (double)RuleOne_Dt.Rows[0]["SLOT04_END"];
        //    SLOT04_RATE = (double)RuleOne_Dt.Rows[0]["SLOT04_RATE"];
        //    SLOT04_MIN = (double)RuleOne_Dt.Rows[0]["SLOT04_MIN"];
        //    SLOT04_MAX = (double)RuleOne_Dt.Rows[0]["SLOT04_MAX"];
        //    SLOT04_A = (string)RuleOne_Dt.Rows[0]["SLOT04_A"];
        //    SLOT04_B = (string)RuleOne_Dt.Rows[0]["SLOT04_B"];
        //    SLOT04_C = (string)RuleOne_Dt.Rows[0]["SLOT04_C"];
        //    SLOT04_D = (string)RuleOne_Dt.Rows[0]["SLOT04_D"];
        //    SLOT04_E = (string)RuleOne_Dt.Rows[0]["SLOT04_E"];
        //    SLOT04_F = (string)RuleOne_Dt.Rows[0]["SLOT04_F"];
        //    SLOT04_G = (string)RuleOne_Dt.Rows[0]["SLOT04_G"];
        //    SLOT04_H = (string)RuleOne_Dt.Rows[0]["SLOT04_H"];
        //    SLOT05_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT05_MESSAGE"];
        //    SLOT05_START = (double)RuleOne_Dt.Rows[0]["SLOT05_START"];
        //    SLOT05_END = (double)RuleOne_Dt.Rows[0]["SLOT05_END"];
        //    SLOT05_RATE = (double)RuleOne_Dt.Rows[0]["SLOT05_RATE"];
        //    SLOT05_MIN = (double)RuleOne_Dt.Rows[0]["SLOT05_MIN"];
        //    SLOT05_MAX = (double)RuleOne_Dt.Rows[0]["SLOT05_MAX"];
        //    SLOT05_A = (string)RuleOne_Dt.Rows[0]["SLOT05_A"];
        //    SLOT05_B = (string)RuleOne_Dt.Rows[0]["SLOT05_B"];
        //    SLOT05_C = (string)RuleOne_Dt.Rows[0]["SLOT05_C"];
        //    SLOT05_D = (string)RuleOne_Dt.Rows[0]["SLOT05_D"];
        //    SLOT05_E = (string)RuleOne_Dt.Rows[0]["SLOT05_E"];
        //    SLOT05_F = (string)RuleOne_Dt.Rows[0]["SLOT05_F"];
        //    SLOT05_G = (string)RuleOne_Dt.Rows[0]["SLOT05_G"];
        //    SLOT05_H = (string)RuleOne_Dt.Rows[0]["SLOT05_H"];
        //    SLOT06_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT06_MESSAGE"];
        //    SLOT06_START = (double)RuleOne_Dt.Rows[0]["SLOT06_START"];
        //    SLOT06_END = (double)RuleOne_Dt.Rows[0]["SLOT06_END"];
        //    SLOT06_RATE = (double)RuleOne_Dt.Rows[0]["SLOT06_RATE"];
        //    SLOT06_MIN = (double)RuleOne_Dt.Rows[0]["SLOT06_MIN"];
        //    SLOT06_MAX = (double)RuleOne_Dt.Rows[0]["SLOT06_MAX"];
        //    SLOT06_A = (string)RuleOne_Dt.Rows[0]["SLOT06_A"];
        //    SLOT06_B = (string)RuleOne_Dt.Rows[0]["SLOT06_B"];
        //    SLOT06_C = (string)RuleOne_Dt.Rows[0]["SLOT06_C"];
        //    SLOT06_D = (string)RuleOne_Dt.Rows[0]["SLOT06_D"];
        //    SLOT06_E = (string)RuleOne_Dt.Rows[0]["SLOT06_E"];
        //    SLOT06_F = (string)RuleOne_Dt.Rows[0]["SLOT06_F"];
        //    SLOT06_G = (string)RuleOne_Dt.Rows[0]["SLOT06_G"];
        //    SLOT06_H = (string)RuleOne_Dt.Rows[0]["SLOT06_H"];
        //    SLOT07_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT07_MESSAGE"];
        //    SLOT07_START = (double)RuleOne_Dt.Rows[0]["SLOT07_START"];
        //    SLOT07_END = (double)RuleOne_Dt.Rows[0]["SLOT07_END"];
        //    SLOT07_RATE = (double)RuleOne_Dt.Rows[0]["SLOT07_RATE"];
        //    SLOT07_MIN = (double)RuleOne_Dt.Rows[0]["SLOT07_MIN"];
        //    SLOT07_MAX = (double)RuleOne_Dt.Rows[0]["SLOT07_MAX"];
        //    SLOT07_A = (string)RuleOne_Dt.Rows[0]["SLOT07_A"];
        //    SLOT07_B = (string)RuleOne_Dt.Rows[0]["SLOT07_B"];
        //    SLOT07_C = (string)RuleOne_Dt.Rows[0]["SLOT07_C"];
        //    SLOT07_D = (string)RuleOne_Dt.Rows[0]["SLOT07_D"];
        //    SLOT07_E = (string)RuleOne_Dt.Rows[0]["SLOT07_E"];
        //    SLOT07_F = (string)RuleOne_Dt.Rows[0]["SLOT07_F"];
        //    SLOT07_G = (string)RuleOne_Dt.Rows[0]["SLOT07_G"];
        //    SLOT07_H = (string)RuleOne_Dt.Rows[0]["SLOT07_H"];
        //    SLOT08_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT08_MESSAGE"];
        //    SLOT08_START = (double)RuleOne_Dt.Rows[0]["SLOT08_START"];
        //    SLOT08_END = (double)RuleOne_Dt.Rows[0]["SLOT08_END"];
        //    SLOT08_RATE = (double)RuleOne_Dt.Rows[0]["SLOT08_RATE"];
        //    SLOT08_MIN = (double)RuleOne_Dt.Rows[0]["SLOT08_MIN"];
        //    SLOT08_MAX = (double)RuleOne_Dt.Rows[0]["SLOT08_MAX"];
        //    SLOT08_A = (string)RuleOne_Dt.Rows[0]["SLOT08_A"];
        //    SLOT08_B = (string)RuleOne_Dt.Rows[0]["SLOT08_B"];
        //    SLOT08_C = (string)RuleOne_Dt.Rows[0]["SLOT08_C"];
        //    SLOT08_D = (string)RuleOne_Dt.Rows[0]["SLOT08_D"];
        //    SLOT08_E = (string)RuleOne_Dt.Rows[0]["SLOT08_E"];
        //    SLOT08_F = (string)RuleOne_Dt.Rows[0]["SLOT08_F"];
        //    SLOT08_G = (string)RuleOne_Dt.Rows[0]["SLOT08_G"];
        //    SLOT08_H = (string)RuleOne_Dt.Rows[0]["SLOT08_H"];
        //    SLOT09_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT09_MESSAGE"];
        //    SLOT09_START = (double)RuleOne_Dt.Rows[0]["SLOT09_START"];
        //    SLOT09_END = (double)RuleOne_Dt.Rows[0]["SLOT09_END"];
        //    SLOT09_RATE = (double)RuleOne_Dt.Rows[0]["SLOT09_RATE"];
        //    SLOT09_MIN = (double)RuleOne_Dt.Rows[0]["SLOT09_MIN"];
        //    SLOT09_MAX = (double)RuleOne_Dt.Rows[0]["SLOT09_MAX"];
        //    SLOT09_A = (string)RuleOne_Dt.Rows[0]["SLOT09_A"];
        //    SLOT09_B = (string)RuleOne_Dt.Rows[0]["SLOT09_B"];
        //    SLOT09_C = (string)RuleOne_Dt.Rows[0]["SLOT09_C"];
        //    SLOT09_D = (string)RuleOne_Dt.Rows[0]["SLOT09_D"];
        //    SLOT09_E = (string)RuleOne_Dt.Rows[0]["SLOT09_E"];
        //    SLOT09_F = (string)RuleOne_Dt.Rows[0]["SLOT09_F"];
        //    SLOT09_G = (string)RuleOne_Dt.Rows[0]["SLOT09_G"];
        //    SLOT09_H = (string)RuleOne_Dt.Rows[0]["SLOT09_H"];
        //    SLOT10_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT10_MESSAGE"];
        //    SLOT10_START = (double)RuleOne_Dt.Rows[0]["SLOT10_START"];
        //    SLOT10_END = (double)RuleOne_Dt.Rows[0]["SLOT10_END"];
        //    SLOT10_RATE = (double)RuleOne_Dt.Rows[0]["SLOT10_RATE"];
        //    SLOT10_MIN = (double)RuleOne_Dt.Rows[0]["SLOT10_MIN"];
        //    SLOT10_MAX = (double)RuleOne_Dt.Rows[0]["SLOT10_MAX"];
        //    SLOT10_A = (string)RuleOne_Dt.Rows[0]["SLOT10_A"];
        //    SLOT10_B = (string)RuleOne_Dt.Rows[0]["SLOT10_B"];
        //    SLOT10_C = (string)RuleOne_Dt.Rows[0]["SLOT10_C"];
        //    SLOT10_D = (string)RuleOne_Dt.Rows[0]["SLOT10_D"];
        //    SLOT10_E = (string)RuleOne_Dt.Rows[0]["SLOT10_E"];
        //    SLOT10_F = (string)RuleOne_Dt.Rows[0]["SLOT10_F"];
        //    SLOT10_G = (string)RuleOne_Dt.Rows[0]["SLOT10_G"];
        //    SLOT10_H = (string)RuleOne_Dt.Rows[0]["SLOT10_H"];



        //    // Loop
        //    // -----------------------------------
        //    for (int i = 0; i < Royalty_OneRule_OneQuarter_Dt.Rows.Count; i++)
        //    {

        //        // Dati iniziali
        //        NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_QTY_PCS"]), 0);
        //        CUM_NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_QTY_PCS"]), 0);
        //        NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_REVENUE_LCL"]), 2);
        //        CUM_NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_REVENUE_LCL"]), 2);
        //        NET_QTY_TOT_PCS = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_QTY_PCS)", ""), 0);
        //        NET_REVENUE_TOT_LCL = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_REVENUE_LCL)", ""), 2);

        //        Qty = NET_QTY_PCS;
        //        Qty_End = CUM_NET_QTY_PCS;
        //        Qty_Start = Qty_End - Qty;

        //        RevLcl = NET_REVENUE_LCL;
        //        RevLcl_End = CUM_NET_REVENUE_LCL;
        //        RevLcl_Start = RevLcl_End - RevLcl;

        //        if (NET_QTY_TOT_PCS != 0)
        //        {
        //            ASPLcl_TOT = NET_REVENUE_TOT_LCL / NET_QTY_TOT_PCS;
        //        }
        //        else
        //        {
        //            ASPLcl_TOT = 0;
        //        }


        //        // Condition
        //        Condition_By_Rev(
        //            in RevLcl_Start,
        //            in RevLcl_End,
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT01_MESSAGE,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT02_MESSAGE,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT03_MESSAGE,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT04_MESSAGE,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT05_MESSAGE,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT06_MESSAGE,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT07_MESSAGE,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT08_MESSAGE,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT09_MESSAGE,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in SLOT10_MESSAGE,
        //            ref Condition_Start,
        //            ref Condition_End,
        //            ref Condition
        //            );


        //        // Quantity, Revenue
        //        Quantity_And_Revenue_By_Qty(
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in Qty,
        //            in Qty_Start,
        //            in Qty_End,
        //            ref Qty_01,
        //            ref Qty_02,
        //            ref Qty_03,
        //            ref Qty_04,
        //            ref Qty_05,
        //            ref Qty_06,
        //            ref Qty_07,
        //            ref Qty_08,
        //            ref Qty_09,
        //            ref Qty_10,
        //            ref RevLcl,
        //            ref RevLcl_End,
        //            ref RevLcl_Start,
        //            ref RevLcl_01,
        //            ref RevLcl_02,
        //            ref RevLcl_03,
        //            ref RevLcl_04,
        //            ref RevLcl_05,
        //            ref RevLcl_06,
        //            ref RevLcl_07,
        //            ref RevLcl_08,
        //            ref RevLcl_09,
        //            ref RevLcl_10);



        //    }











        //    //// Variabili interne
        //    //// -----------------------------------
        //    //double Id_Agreement = 0;
        //    //string Agreement = "";
        //    //string Model = "";
        //    //double Slot = 0;
        //    //string Agreement_Date_Start = "";
        //    //string Agreement_Date_End = "";
        //    //string PL_String = "";
        //    //string PL_Cond = "";
        //    //string CP_String = "";
        //    //string CP_Cond = "";
        //    //string Customer_String = "";
        //    //string Customer_Cond = "";
        //    //string Condition1 = "";
        //    //double Limit1 = 0;
        //    //double Rate1 = 0;
        //    //double Min1 = 0;
        //    //double Max1 = 0;
        //    //double Extra1A = 0;
        //    //double Extra1B = 0;
        //    //double Extra1C = 0;
        //    //double Extra1D = 0;
        //    //double Extra1E = 0;
        //    //double Extra1F = 0;
        //    //string Condition2 = "";
        //    //double Limit2 = 0;
        //    //double Rate2 = 0;
        //    //double Min2 = 0;
        //    //double Max2 = 0;
        //    //double Extra2A = 0;
        //    //double Extra2B = 0;
        //    //double Extra2C = 0;
        //    //double Extra2D = 0;
        //    //double Extra2E = 0;
        //    //double Extra2F = 0;
        //    //string Condition3 = "";
        //    //double Limit3 = 0;
        //    //double Rate3 = 0;
        //    //double Min3 = 0;
        //    //double Max3 = 0;
        //    //double Extra3A = 0;
        //    //double Extra3B = 0;
        //    //double Extra3C = 0;
        //    //double Extra3D = 0;
        //    //double Extra3E = 0;
        //    //double Extra3F = 0;
        //    //string Condition4 = "";
        //    //double Limit4 = 0;
        //    //double Rate4 = 0;
        //    //double Min4 = 0;
        //    //double Max4 = 0;
        //    //double Extra4A = 0;
        //    //double Extra4B = 0;
        //    //double Extra4C = 0;
        //    //double Extra4D = 0;
        //    //double Extra4E = 0;
        //    //double Extra4F = 0;
        //    //string Condition5 = "";
        //    //double Limit5 = 0;
        //    //double Rate5 = 0;
        //    //double Min5 = 0;
        //    //double Max5 = 0;
        //    //double Extra5A = 0;
        //    //double Extra5B = 0;
        //    //double Extra5C = 0;
        //    //double Extra5D = 0;
        //    //double Extra5E = 0;
        //    //double Extra5F = 0;
        //    //string Condition6 = "";
        //    //double Limit6 = 0;
        //    //double Rate6 = 0;
        //    //double Min6 = 0;
        //    //double Max6 = 0;
        //    //double Extra6A = 0;
        //    //double Extra6B = 0;
        //    //double Extra6C = 0;
        //    //double Extra6D = 0;
        //    //double Extra6E = 0;
        //    //double Extra6F = 0;
        //    //double RateOver = 0;
        //    //double MinOver = 0;
        //    //double MaxOver = 0;
        //    //double ExtraOverA = 0;
        //    //double ExtraOverB = 0;
        //    //double ExtraOverC = 0;
        //    //double ExtraOverD = 0;
        //    //double ExtraOverE = 0;
        //    //double ExtraOverF = 0;
        //    //string LclCurrency = "";
        //    //double Min_Cum_Royalty_KLcl = 0;
        //    //double Max_Cum_Royalty_KLcl = 0;

        //    //double QtyL = 0;
        //    //double QtyH = 0;
        //    //double Qty = 0;
        //    //double Qty1 = 0;
        //    //double Qty2 = 0;
        //    //double Qty3 = 0;
        //    //double Qty4 = 0;
        //    //double Qty5 = 0;
        //    //double Qty6 = 0;
        //    //double QtyOver = 0;

        //    //string ConditionL = "";
        //    //string ConditionH = "";
        //    //string Condition = "";

        //    //double RevLclL = 0;
        //    //double RevLclH = 0;
        //    //double RevLcl = 0;
        //    //double RevLcl1 = 0;
        //    //double RevLcl2 = 0;
        //    //double RevLcl3 = 0;
        //    //double RevLcl4 = 0;
        //    //double RevLcl5 = 0;
        //    //double RevLcl6 = 0;
        //    //double RevLclOver = 0;

        //    //double RateOnPcs1 = 0;
        //    //double RateOnPcs2 = 0;
        //    //double RateOnPcs3 = 0;
        //    //double RateOnPcs4 = 0;
        //    //double RateOnPcs5 = 0;
        //    //double RateOnPcs6 = 0;
        //    //double RateOnPcsOver = 0;

        //    //double RateOnRev1 = 0;
        //    //double RateOnRev2 = 0;
        //    //double RateOnRev3 = 0;
        //    //double RateOnRev4 = 0;
        //    //double RateOnRev5 = 0;
        //    //double RateOnRev6 = 0;
        //    //double RateOnRevOver = 0;

        //    //double RoyLclL = 0;
        //    //double RoyLclH = 0;
        //    //double RoyLcl = 0;
        //    //double RoyLcl1 = 0;
        //    //double RoyLcl2 = 0;
        //    //double RoyLcl3 = 0;
        //    //double RoyLcl4 = 0;
        //    //double RoyLcl5 = 0;
        //    //double RoyLcl6 = 0;
        //    //double RoyLclOver = 0;

        //    //double RoyUSDL = 0;
        //    //double RoyUSDH = 0;
        //    //double RoyUSD = 0;

        //    //double RoyPaidLcl = 0;
        //    //double RoyPaidLclL = 0;
        //    //double RoyPaidLclH = 0;

        //    //double RoyPaidUSD = 0;
        //    //double RoyPaidUSDL = 0;
        //    //double RoyPaidUSDH = 0;

        //    //double Rate_Lcl_per_pcs = 0;
        //    //double Rate_USD_per_pcs = 0;
        //    //double Rate_Rev_percent = 0;

        //    //double ExchangeRate = 0;

        //    //double ASPLclTot = 0;
        //    //double RevLclTot = 0;
        //    //double QtyTot = 0;


        //    //// Estrae i dati dell'Agreement
        //    //// -----------------------------------
        //    //Id_Agreement = (double)Agreement_QA_Dt.Rows[0]["Id_Agreement"];
        //    //Agreement = Agreement_QA_Dt.Rows[0]["Agreement"].ToString();
        //    //Model = Agreement_QA_Dt.Rows[0]["Model"].ToString();
        //    //Slot = (double)Agreement_QA_Dt.Rows[0]["Slot"];
        //    //Agreement_Date_Start = Agreement_QA_Dt.Rows[0]["Agreement_Date_Start"].ToString();
        //    //Agreement_Date_End = Agreement_QA_Dt.Rows[0]["Agreement_Date_End"].ToString();
        //    //PL_String = Agreement_QA_Dt.Rows[0]["PL_String"].ToString();
        //    //PL_Cond = Agreement_QA_Dt.Rows[0]["PL_Cond"].ToString();
        //    //CP_String = Agreement_QA_Dt.Rows[0]["CP_String"].ToString();
        //    //CP_Cond = Agreement_QA_Dt.Rows[0]["CP_Cond"].ToString();
        //    //Customer_String = Agreement_QA_Dt.Rows[0]["Customer_String"].ToString();
        //    //Customer_Cond = Agreement_QA_Dt.Rows[0]["Customer_Cond"].ToString();
        //    //Condition1 = Agreement_QA_Dt.Rows[0]["Condition1"].ToString();
        //    //Limit1 = (double)Agreement_QA_Dt.Rows[0]["Limit1"];
        //    //Rate1 = (double)Agreement_QA_Dt.Rows[0]["Rate1"];
        //    //Min1 = (double)Agreement_QA_Dt.Rows[0]["Min1"];
        //    //Max1 = (double)Agreement_QA_Dt.Rows[0]["Max1"];
        //    //Extra1A = (double)Agreement_QA_Dt.Rows[0]["Extra1A"];
        //    //Extra1B = (double)Agreement_QA_Dt.Rows[0]["Extra1B"];
        //    //Extra1C = (double)Agreement_QA_Dt.Rows[0]["Extra1C"];
        //    //Extra1D = (double)Agreement_QA_Dt.Rows[0]["Extra1D"];
        //    //Extra1E = (double)Agreement_QA_Dt.Rows[0]["Extra1E"];
        //    //Extra1F = (double)Agreement_QA_Dt.Rows[0]["Extra1F"];
        //    //Condition2 = Agreement_QA_Dt.Rows[0]["Condition2"].ToString();
        //    //Limit2 = (double)Agreement_QA_Dt.Rows[0]["Limit2"];
        //    //Rate2 = (double)Agreement_QA_Dt.Rows[0]["Rate2"];
        //    //Min2 = (double)Agreement_QA_Dt.Rows[0]["Min2"];
        //    //Max2 = (double)Agreement_QA_Dt.Rows[0]["Max2"];
        //    //Extra2A = (double)Agreement_QA_Dt.Rows[0]["Extra2A"];
        //    //Extra2B = (double)Agreement_QA_Dt.Rows[0]["Extra2B"];
        //    //Extra2C = (double)Agreement_QA_Dt.Rows[0]["Extra2C"];
        //    //Extra2D = (double)Agreement_QA_Dt.Rows[0]["Extra2D"];
        //    //Extra2E = (double)Agreement_QA_Dt.Rows[0]["Extra2E"];
        //    //Extra2F = (double)Agreement_QA_Dt.Rows[0]["Extra2F"];
        //    //Condition3 = Agreement_QA_Dt.Rows[0]["Condition3"].ToString();
        //    //Limit3 = (double)Agreement_QA_Dt.Rows[0]["Limit3"];
        //    //Rate3 = (double)Agreement_QA_Dt.Rows[0]["Rate3"];
        //    //Min3 = (double)Agreement_QA_Dt.Rows[0]["Min3"];
        //    //Max3 = (double)Agreement_QA_Dt.Rows[0]["Max3"];
        //    //Extra3A = (double)Agreement_QA_Dt.Rows[0]["Extra3A"];
        //    //Extra3B = (double)Agreement_QA_Dt.Rows[0]["Extra3B"];
        //    //Extra3C = (double)Agreement_QA_Dt.Rows[0]["Extra3C"];
        //    //Extra3D = (double)Agreement_QA_Dt.Rows[0]["Extra3D"];
        //    //Extra3E = (double)Agreement_QA_Dt.Rows[0]["Extra3E"];
        //    //Extra3F = (double)Agreement_QA_Dt.Rows[0]["Extra3F"];
        //    //Condition4 = Agreement_QA_Dt.Rows[0]["Condition4"].ToString();
        //    //Limit4 = (double)Agreement_QA_Dt.Rows[0]["Limit4"];
        //    //Rate4 = (double)Agreement_QA_Dt.Rows[0]["Rate4"];
        //    //Min4 = (double)Agreement_QA_Dt.Rows[0]["Min4"];
        //    //Max4 = (double)Agreement_QA_Dt.Rows[0]["Max4"];
        //    //Extra4A = (double)Agreement_QA_Dt.Rows[0]["Extra4A"];
        //    //Extra4B = (double)Agreement_QA_Dt.Rows[0]["Extra4B"];
        //    //Extra4C = (double)Agreement_QA_Dt.Rows[0]["Extra4C"];
        //    //Extra4D = (double)Agreement_QA_Dt.Rows[0]["Extra4D"];
        //    //Extra4E = (double)Agreement_QA_Dt.Rows[0]["Extra4E"];
        //    //Extra4F = (double)Agreement_QA_Dt.Rows[0]["Extra4F"];
        //    //Condition5 = Agreement_QA_Dt.Rows[0]["Condition5"].ToString();
        //    //Limit5 = (double)Agreement_QA_Dt.Rows[0]["Limit5"];
        //    //Rate5 = (double)Agreement_QA_Dt.Rows[0]["Rate5"];
        //    //Min5 = (double)Agreement_QA_Dt.Rows[0]["Min5"];
        //    //Max5 = (double)Agreement_QA_Dt.Rows[0]["Max5"];
        //    //Extra5A = (double)Agreement_QA_Dt.Rows[0]["Extra5A"];
        //    //Extra5B = (double)Agreement_QA_Dt.Rows[0]["Extra5B"];
        //    //Extra5C = (double)Agreement_QA_Dt.Rows[0]["Extra5C"];
        //    //Extra5D = (double)Agreement_QA_Dt.Rows[0]["Extra5D"];
        //    //Extra5E = (double)Agreement_QA_Dt.Rows[0]["Extra5E"];
        //    //Extra5F = (double)Agreement_QA_Dt.Rows[0]["Extra5F"];
        //    //Condition6 = Agreement_QA_Dt.Rows[0]["Condition6"].ToString();
        //    //Limit6 = (double)Agreement_QA_Dt.Rows[0]["Limit6"];
        //    //Rate6 = (double)Agreement_QA_Dt.Rows[0]["Rate6"];
        //    //Min6 = (double)Agreement_QA_Dt.Rows[0]["Min6"];
        //    //Max6 = (double)Agreement_QA_Dt.Rows[0]["Max6"];
        //    //Extra6A = (double)Agreement_QA_Dt.Rows[0]["Extra6A"];
        //    //Extra6B = (double)Agreement_QA_Dt.Rows[0]["Extra6B"];
        //    //Extra6C = (double)Agreement_QA_Dt.Rows[0]["Extra6C"];
        //    //Extra6D = (double)Agreement_QA_Dt.Rows[0]["Extra6D"];
        //    //Extra6E = (double)Agreement_QA_Dt.Rows[0]["Extra6E"];
        //    //Extra6F = (double)Agreement_QA_Dt.Rows[0]["Extra6F"];
        //    //RateOver = (double)Agreement_QA_Dt.Rows[0]["RateOver"];
        //    //MinOver = (double)Agreement_QA_Dt.Rows[0]["MinOver"];
        //    //MaxOver = (double)Agreement_QA_Dt.Rows[0]["MaxOver"];
        //    //ExtraOverA = (double)Agreement_QA_Dt.Rows[0]["ExtraOverA"];
        //    //ExtraOverB = (double)Agreement_QA_Dt.Rows[0]["ExtraOverB"];
        //    //ExtraOverC = (double)Agreement_QA_Dt.Rows[0]["ExtraOverC"];
        //    //ExtraOverD = (double)Agreement_QA_Dt.Rows[0]["ExtraOverD"];
        //    //ExtraOverE = (double)Agreement_QA_Dt.Rows[0]["ExtraOverE"];
        //    //ExtraOverF = (double)Agreement_QA_Dt.Rows[0]["ExtraOverF"];
        //    //LclCurrency = Agreement_QA_Dt.Rows[0]["LclCurrency"].ToString();
        //    //Min_Cum_Royalty_KLcl = (double)Agreement_QA_Dt.Rows[0]["Min_Cum_Royalty_KLcl"];
        //    //Max_Cum_Royalty_KLcl = (double)Agreement_QA_Dt.Rows[0]["Max_Cum_Royalty_KLcl"];



        //    //// Loop
        //    //// -----------------------------------
        //    //for (int RowI = 0; RowI <= Royalty_QA_Dt.Rows.Count - 1; RowI++)
        //    //{
        //    //    // Dati iniziali 
        //    //    // -----------------------------------
        //    //    Condition = "";
        //    //    ExchangeRate = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["ExchangeRate"]), 4);
        //    //    if (ExchangeRate == 0) { ExchangeRate = 1; }

        //    //    RevLcl = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Net_Revenue_KLcl"]), 4);
        //    //    RevLclH = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Cum_Net_Revenue_KLcl"]), 4);
        //    //    RevLclL = RevLclH - RevLcl;
        //    //    Qty = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Net_qty_Kpcs"]), 3);
        //    //    QtyH = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Cum_Net_qty_Kpcs"]), 3);
        //    //    QtyL = QtyH - Qty;
        //    //    RoyLcl = 0;
        //    //    RoyUSD = 0;
        //    //    RoyPaidLcl = 0;
        //    //    RoyPaidUSD = 0;
        //    //    Rate_Lcl_per_pcs = 0;
        //    //    Rate_USD_per_pcs = 0;
        //    //    Rate_Rev_percent = 0;

        //    //    if (RowI == 0)
        //    //    {
        //    //        RoyLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_Royalty_KLcl"]), 4);
        //    //        RoyUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_Royalty_KUSD"]), 4);
        //    //        RoyPaidLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_RoyaltyPaid_KLcl"]), 4);
        //    //        RoyPaidUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_RoyaltyPaid_KUSD"]), 4);
        //    //    }
        //    //    else
        //    //    {
        //    //        RoyLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_Royalty_KLcl"]), 4);
        //    //        RoyUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_Royalty_KUSD"]), 4);
        //    //        RoyPaidLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_RoyaltyPaid_KLcl"]), 4);
        //    //        RoyPaidUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_RoyaltyPaid_KUSD"]), 4);
        //    //    }

        //    //    // Condition
        //    //    // -----------------------------------
        //    //    if (RevLclL < Limit1) { ConditionL = Condition1; }
        //    //    else if (RevLclL >= Limit1 && RevLclL < Limit2) { ConditionL = Condition2; }
        //    //    else if (RevLclL >= Limit2 && RevLclL < Limit3) { ConditionL = Condition3; }
        //    //    else if (RevLclL >= Limit3 && RevLclL < Limit4) { ConditionL = Condition4; }
        //    //    else if (RevLclL >= Limit4 && RevLclL < Limit5) { ConditionL = Condition5; }
        //    //    else if (RevLclL >= Limit5 && RevLclL < Limit6) { ConditionL = Condition6; }
        //    //    else if (RevLclL >= Limit6) { ConditionL = "Over"; }
        //    //    else { ConditionL = "ERR"; }

        //    //    if (RevLclH < Limit1) { ConditionH = Condition1; }
        //    //    else if (RevLclH >= Limit1 && RevLclH < Limit2) { ConditionH = Condition2; }
        //    //    else if (RevLclH >= Limit2 && RevLclH < Limit3) { ConditionH = Condition3; }
        //    //    else if (RevLclH >= Limit3 && RevLclH < Limit4) { ConditionH = Condition4; }
        //    //    else if (RevLclH >= Limit4 && RevLclH < Limit5) { ConditionH = Condition5; }
        //    //    else if (RevLclH >= Limit5 && RevLclH < Limit6) { ConditionH = Condition6; }
        //    //    else if (RevLclH >= Limit6) { ConditionL = "Over"; }
        //    //    else { ConditionL = "ERR"; }

        //    //    if (string.Equals(ConditionL, ConditionH))
        //    //    {
        //    //        Condition = ConditionL;
        //    //    }
        //    //    else
        //    //    {
        //    //        Condition = ConditionL + " -> " + ConditionH;
        //    //    }

        //    //    // Revenue
        //    //    // -----------------------------------
        //    //    RevLcl1 = 0;
        //    //    RevLcl2 = 0;
        //    //    RevLcl3 = 0;
        //    //    RevLcl4 = 0;
        //    //    RevLcl5 = 0;
        //    //    RevLcl6 = 0;
        //    //    RevLclOver = 0;

        //    //    if (RevLcl >= 0)
        //    //    {
        //    //        if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition1)) { RevLcl1 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition2)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = RevLclH - Limit1; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition3)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = RevLclH - Limit2; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition4)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = Limit3 - Limit2; RevLcl4 = RevLclH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition5)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = RevLclH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition6)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, "Over")) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition2)) { RevLcl2 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition3)) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = RevLclH - Limit2; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition4)) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = Limit3 - Limit2; RevLcl4 = RevLclH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition5)) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = RevLclH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition6)) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, "Over")) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition3)) { RevLcl3 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition4)) { RevLcl3 = Limit3 - RevLclL; RevLcl4 = RevLclH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition5)) { RevLcl3 = Limit3 - RevLclL; RevLcl4 = Limit4 - Limit3; RevLcl5 = RevLclH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition6)) { RevLcl3 = Limit3 - RevLclL; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, "Over")) { RevLcl3 = Limit3 - RevLclL; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition4)) { RevLcl4 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition5)) { RevLcl4 = Limit4 - RevLclL; RevLcl5 = RevLclH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition6)) { RevLcl4 = Limit4 - RevLclL; RevLcl5 = Limit5 - Limit4; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, "Over")) { RevLcl4 = Limit4 - RevLclL; RevLcl5 = Limit5 - Limit4; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, Condition5)) { RevLcl5 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, Condition6)) { RevLcl5 = Limit5 - RevLclL; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, "Over")) { RevLcl5 = Limit5 - RevLclL; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition6) && string.Equals(ConditionH, Condition6)) { RevLcl6 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition6) && string.Equals(ConditionH, "Over")) { RevLcl6 = Limit6 - RevLclL; RevLclOver = RevLclH - Limit6; }

        //    //        else { RevLclOver = RevLclH - RevLclL; }

        //    //    }
        //    //    else
        //    //    {
        //    //        if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition1)) { RevLcl1 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition2)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(RevLclL - Limit1); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition3)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(RevLclL - Limit2); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition4)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(RevLclL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition5)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(RevLclL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition6)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, "Over")) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition2)) { RevLcl2 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition3)) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(RevLclL - Limit2); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition4)) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(RevLclL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition5)) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(RevLclL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition6)) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, "Over")) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition3)) { RevLcl3 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition4)) { RevLcl3 = -(Limit3 - RevLclH); RevLcl4 = -(RevLclL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition5)) { RevLcl3 = -(Limit3 - RevLclH); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(RevLclL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition6)) { RevLcl3 = -(Limit3 - RevLclH); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, "Over")) { RevLcl3 = -(Limit3 - RevLclH); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition4)) { RevLcl4 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition5)) { RevLcl4 = -(Limit4 - RevLclH); RevLcl5 = -(RevLclL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition6)) { RevLcl4 = -(Limit4 - RevLclH); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, "Over")) { RevLcl4 = -(Limit4 - RevLclH); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, Condition5)) { RevLcl5 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, Condition6)) { RevLcl5 = -(Limit5 - RevLclH); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, "Over")) { RevLcl5 = -(Limit5 - RevLclH); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition6) && string.Equals(ConditionL, Condition6)) { RevLcl6 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition6) && string.Equals(ConditionL, "Over")) { RevLcl6 = -(Limit6 - RevLclH); RevLclOver = -(RevLclL - Limit6); }

        //    //        else { RevLclOver = RevLclH - RevLclL; }

        //    //    }

        //    //    // Quantity
        //    //    // -----------------------------------
        //    //    if (RevLcl != 0 && Qty != 0)
        //    //    {
        //    //        Qty1 = Qty * RevLcl1 / RevLcl;
        //    //        Qty2 = Qty * RevLcl2 / RevLcl;
        //    //        Qty3 = Qty * RevLcl3 / RevLcl;
        //    //        Qty4 = Qty * RevLcl4 / RevLcl;
        //    //        Qty5 = Qty * RevLcl5 / RevLcl;
        //    //        Qty6 = Qty * RevLcl6 / RevLcl;
        //    //        QtyOver = Qty * RevLclOver / RevLcl;
        //    //    }
        //    //    else if (RevLcl != 0 && Qty == 0)
        //    //    {
        //    //        Qty1 = 0;
        //    //        Qty2 = 0;
        //    //        Qty3 = 0;
        //    //        Qty4 = 0;
        //    //        Qty5 = 0;
        //    //        Qty6 = 0;
        //    //        QtyOver = 0;
        //    //    }
        //    //    else if (RevLcl == 0 && Qty != 0)
        //    //    {
        //    //        Qty1 = 0;
        //    //        Qty2 = 0;
        //    //        Qty3 = 0;
        //    //        Qty4 = 0;
        //    //        Qty5 = 0;
        //    //        Qty6 = 0;
        //    //        QtyOver = 0;

        //    //        if (string.Equals(Condition, Condition1)) { Qty1 = Qty; }
        //    //        else if (string.Equals(Condition, Condition2)) { Qty2 = Qty; }
        //    //        else if (string.Equals(Condition, Condition3)) { Qty3 = Qty; }
        //    //        else if (string.Equals(Condition, Condition4)) { Qty4 = Qty; }
        //    //        else if (string.Equals(Condition, Condition5)) { Qty5 = Qty; }
        //    //        else if (string.Equals(Condition, Condition6)) { Qty6 = Qty; }
        //    //        else { QtyOver = Qty; }
        //    //    }
        //    //    else
        //    //    {
        //    //        Qty1 = 0;
        //    //        Qty2 = 0;
        //    //        Qty3 = 0;
        //    //        Qty4 = 0;
        //    //        Qty5 = 0;
        //    //        Qty6 = 0;
        //    //        QtyOver = 0;
        //    //    }



        //    //    // ASP Tot
        //    //    // -----------------------------------
        //    //    RevLclTot = Math.Round((double)Royalty_QA_Dt.Compute("Sum(Net_Revenue_KLcl)", ""), 4);
        //    //    QtyTot = Math.Round((double)Royalty_QA_Dt.Compute("Sum(Net_qty_Kpcs)", ""), 3);
        //    //    if (QtyTot != 0) { ASPLclTot = RevLclTot / QtyTot; } else { ASPLclTot = 0; }


        //    //    // RateOnRev
        //    //    // -----------------------------------
        //    //    RateOnRev1 = Rate1;
        //    //    RateOnRev2 = Rate2;
        //    //    RateOnRev3 = Rate3;
        //    //    RateOnRev4 = Rate4;
        //    //    RateOnRev5 = Rate5;
        //    //    RateOnRev6 = Rate6;
        //    //    RateOnRevOver = RateOver;

        //    //    // Roy prima del check min/max
        //    //    // -----------------------------------
        //    //    RoyLcl1 = RateOnRev1 * RevLcl1;
        //    //    RoyLcl2 = RateOnRev2 * RevLcl2;
        //    //    RoyLcl3 = RateOnRev3 * RevLcl3;
        //    //    RoyLcl4 = RateOnRev4 * RevLcl4;
        //    //    RoyLcl5 = RateOnRev5 * RevLcl5;
        //    //    RoyLcl6 = RateOnRev6 * RevLcl6;
        //    //    RoyLclOver = RateOnRevOver * RevLclOver;
        //    //    RoyLcl = RoyLcl1 + RoyLcl2 + RoyLcl3 + RoyLcl4 + RoyLcl5 + RoyLcl6 + RoyLclOver;

        //    //    // RateOnPcs
        //    //    // -----------------------------------
        //    //    if (Qty1 != 0) { RateOnPcs1 = RoyLcl1 / Qty1; } else { RateOnPcs1 = 0; }
        //    //    if (Qty2 != 0) { RateOnPcs2 = RoyLcl2 / Qty2; } else { RateOnPcs2 = 0; }
        //    //    if (Qty3 != 0) { RateOnPcs3 = RoyLcl3 / Qty3; } else { RateOnPcs3 = 0; }
        //    //    if (Qty4 != 0) { RateOnPcs4 = RoyLcl4 / Qty4; } else { RateOnPcs4 = 0; }
        //    //    if (Qty5 != 0) { RateOnPcs5 = RoyLcl5 / Qty5; } else { RateOnPcs5 = 0; }
        //    //    if (Qty6 != 0) { RateOnPcs6 = RoyLcl6 / Qty6; } else { RateOnPcs6 = 0; }
        //    //    if (QtyOver != 0) { RateOnPcsOver = RoyLclOver / QtyOver; } else { RateOnPcsOver = 0; }

        //    //    // Check Min/Max
        //    //    // -----------------------------------
        //    //    if (RateOnPcs1 < Min1) { RateOnPcs1 = Min1; } else if (RateOnPcs1 > Max1) { RateOnPcs1 = Max1; }
        //    //    if (RateOnPcs2 < Min2) { RateOnPcs2 = Min2; } else if (RateOnPcs2 > Max2) { RateOnPcs2 = Max2; }
        //    //    if (RateOnPcs3 < Min3) { RateOnPcs3 = Min3; } else if (RateOnPcs3 > Max3) { RateOnPcs3 = Max3; }
        //    //    if (RateOnPcs4 < Min4) { RateOnPcs4 = Min4; } else if (RateOnPcs4 > Max4) { RateOnPcs4 = Max4; }
        //    //    if (RateOnPcs5 < Min5) { RateOnPcs5 = Min5; } else if (RateOnPcs5 > Max5) { RateOnPcs5 = Max5; }
        //    //    if (RateOnPcs6 < Min6) { RateOnPcs6 = Min6; } else if (RateOnPcs6 > Max6) { RateOnPcs6 = Max6; }
        //    //    if (RateOnPcsOver < MinOver) { RateOnPcsOver = MinOver; } else if (RateOnPcsOver > MaxOver) { RateOnPcsOver = MaxOver; }

        //    //    // Roy finale
        //    //    // -----------------------------------
        //    //    if (RateOnPcs1 != 0) { RoyLcl1 = RateOnPcs1 * Qty1; }
        //    //    if (RateOnPcs2 != 0) { RoyLcl2 = RateOnPcs2 * Qty2; }
        //    //    if (RateOnPcs3 != 0) { RoyLcl3 = RateOnPcs3 * Qty3; }
        //    //    if (RateOnPcs4 != 0) { RoyLcl4 = RateOnPcs4 * Qty4; }
        //    //    if (RateOnPcs5 != 0) { RoyLcl5 = RateOnPcs5 * Qty5; }
        //    //    if (RateOnPcs6 != 0) { RoyLcl6 = RateOnPcs6 * Qty6; }
        //    //    if (RateOnPcsOver != 0) { RoyLclOver = RateOnPcsOver * QtyOver; }
        //    //    RoyLcl = RoyLcl1 + RoyLcl2 + RoyLcl3 + RoyLcl4 + RoyLcl5 + RoyLcl6 + RoyLclOver;
        //    //    RoyLclH = RoyLclL + RoyLcl;
        //    //    RoyUSD = RoyLcl * ExchangeRate;
        //    //    RoyUSDH = RoyUSDL + RoyUSD;


        //    //    // Roy Paid
        //    //    // -----------------------------------
        //    //    if (RoyLcl >= 0)
        //    //    {
        //    //        if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH < Min_Cum_Royalty_KLcl) { RoyPaidLcl = 0; }
        //    //        else if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLclH - Min_Cum_Royalty_KLcl; }
        //    //        else if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = Max_Cum_Royalty_KLcl - Min_Cum_Royalty_KLcl; }
        //    //        else if (RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl && RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLcl; }
        //    //        else if (RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl && RoyLclH >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = Max_Cum_Royalty_KLcl - RoyLclL; }
        //    //        else { RoyPaidLcl = 0; }
        //    //    }
        //    //    else
        //    //    {
        //    //        if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL < Min_Cum_Royalty_KLcl) { RoyPaidLcl = 0; }
        //    //        else if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(RoyLclL - Min_Cum_Royalty_KLcl); }
        //    //        else if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(Max_Cum_Royalty_KLcl - Min_Cum_Royalty_KLcl); }
        //    //        else if (RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl && RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLcl; }
        //    //        else if (RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl && RoyLclL >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(Max_Cum_Royalty_KLcl - RoyLclL); }
        //    //        else { RoyPaidLcl = 0; }
        //    //    }
        //    //    RoyPaidLclH = RoyPaidLclL + RoyPaidLcl;
        //    //    RoyPaidUSD = RoyPaidLcl * ExchangeRate;
        //    //    RoyPaidUSDH = RoyPaidUSDL + RoyPaidUSD;

        //    //    // Rate
        //    //    // -----------------------------------
        //    //    if (Qty != 0) { Rate_Lcl_per_pcs = RoyLcl / Qty; } else { Rate_Lcl_per_pcs = 0; }
        //    //    if (Qty != 0) { Rate_USD_per_pcs = RoyUSD / Qty; } else { Rate_USD_per_pcs = 0; }
        //    //    if (RevLcl != 0) { Rate_Rev_percent = RoyLcl / RevLcl; } else { Rate_Rev_percent = 0; }

        //    //    // Salva i dati i RoyaltyQ
        //    //    // -----------------------------------
        //    //    Royalty_QA_Dt.Rows[RowI]["Condition"] = Condition;
        //    //    Royalty_QA_Dt.Rows[RowI]["Royalty_KLcl"] = Math.Round(RoyLcl, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_Royalty_KLcl"] = Math.Round(RoyLclH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Royalty_KUSD"] = Math.Round(RoyUSD, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_Royalty_KUSD"] = Math.Round(RoyUSDH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["RoyaltyPaid_KLcl"] = Math.Round(RoyPaidLcl, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_RoyaltyPaid_KLcl"] = Math.Round(RoyPaidLclH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["RoyaltyPaid_KUSD"] = Math.Round(RoyPaidUSD, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_RoyaltyPaid_KUSD"] = Math.Round(RoyPaidUSDH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_Lcl_per_pcs"] = Rate_Lcl_per_pcs;
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_USD_per_pcs"] = Rate_USD_per_pcs;
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_Rev_percent"] = Rate_Rev_percent;

        //    //}


        //}



        //public void M03_SLOTqty_RATErev_MINMAXqty(ref DataTable RuleOne_Dt, ref DataTable Royalty_OneRule_OneQuarter_Dt)
        //{
        //    // ****************************************************
        //    // MODELLO 03
        //    // SLOT: sulle quantita'
        //    // RATE: sulle Net Revenue
        //    // MIN/MAX RATE: su Roy/pcs
        //    //
        //    // ESEMPIO: 


        //    // Variabili interne
        //    // -----------------------------------
        //    string AGREEMENT_ID = "";
        //    string AGREEMENT = "";
        //    string VERSION_DATE = "";
        //    string VERSION_DESCR = "";
        //    string MODEL_ACTIVE = "";
        //    string MODEL_INITIAL_MONTH = "";
        //    string MODEL_FINAL_MONTH = "";
        //    string MODEL_TYPE = "";
        //    string MODEL_CURRENCY = "";
        //    double MODEL_NB_SLOT = 0;
        //    double MODEL_MIN_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MIN_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MIN_EACH_QUARTER_ROYALTY = 0;
        //    double MODEL_MAX_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MAX_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MAX_EACH_QUARTER_ROYALTY = 0;
        //    string SELECTION_PL_LIST = "";
        //    string SELECTION_CP_LIST = "";
        //    string SELECTION_CP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = "";
        //    string SLOT01_MESSAGE = "";
        //    double SLOT01_START = 0;
        //    double SLOT01_END = 0;
        //    double SLOT01_RATE = 0;
        //    double SLOT01_MIN = 0;
        //    double SLOT01_MAX = 0;
        //    string SLOT01_A = "";
        //    string SLOT01_B = "";
        //    string SLOT01_C = "";
        //    string SLOT01_D = "";
        //    string SLOT01_E = "";
        //    string SLOT01_F = "";
        //    string SLOT01_G = "";
        //    string SLOT01_H = "";
        //    string SLOT02_MESSAGE = "";
        //    double SLOT02_START = 0;
        //    double SLOT02_END = 0;
        //    double SLOT02_RATE = 0;
        //    double SLOT02_MIN = 0;
        //    double SLOT02_MAX = 0;
        //    string SLOT02_A = "";
        //    string SLOT02_B = "";
        //    string SLOT02_C = "";
        //    string SLOT02_D = "";
        //    string SLOT02_E = "";
        //    string SLOT02_F = "";
        //    string SLOT02_G = "";
        //    string SLOT02_H = "";
        //    string SLOT03_MESSAGE = "";
        //    double SLOT03_START = 0;
        //    double SLOT03_END = 0;
        //    double SLOT03_RATE = 0;
        //    double SLOT03_MIN = 0;
        //    double SLOT03_MAX = 0;
        //    string SLOT03_A = "";
        //    string SLOT03_B = "";
        //    string SLOT03_C = "";
        //    string SLOT03_D = "";
        //    string SLOT03_E = "";
        //    string SLOT03_F = "";
        //    string SLOT03_G = "";
        //    string SLOT03_H = "";
        //    string SLOT04_MESSAGE = "";
        //    double SLOT04_START = 0;
        //    double SLOT04_END = 0;
        //    double SLOT04_RATE = 0;
        //    double SLOT04_MIN = 0;
        //    double SLOT04_MAX = 0;
        //    string SLOT04_A = "";
        //    string SLOT04_B = "";
        //    string SLOT04_C = "";
        //    string SLOT04_D = "";
        //    string SLOT04_E = "";
        //    string SLOT04_F = "";
        //    string SLOT04_G = "";
        //    string SLOT04_H = "";
        //    string SLOT05_MESSAGE = "";
        //    double SLOT05_START = 0;
        //    double SLOT05_END = 0;
        //    double SLOT05_RATE = 0;
        //    double SLOT05_MIN = 0;
        //    double SLOT05_MAX = 0;
        //    string SLOT05_A = "";
        //    string SLOT05_B = "";
        //    string SLOT05_C = "";
        //    string SLOT05_D = "";
        //    string SLOT05_E = "";
        //    string SLOT05_F = "";
        //    string SLOT05_G = "";
        //    string SLOT05_H = "";
        //    string SLOT06_MESSAGE = "";
        //    double SLOT06_START = 0;
        //    double SLOT06_END = 0;
        //    double SLOT06_RATE = 0;
        //    double SLOT06_MIN = 0;
        //    double SLOT06_MAX = 0;
        //    string SLOT06_A = "";
        //    string SLOT06_B = "";
        //    string SLOT06_C = "";
        //    string SLOT06_D = "";
        //    string SLOT06_E = "";
        //    string SLOT06_F = "";
        //    string SLOT06_G = "";
        //    string SLOT06_H = "";
        //    string SLOT07_MESSAGE = "";
        //    double SLOT07_START = 0;
        //    double SLOT07_END = 0;
        //    double SLOT07_RATE = 0;
        //    double SLOT07_MIN = 0;
        //    double SLOT07_MAX = 0;
        //    string SLOT07_A = "";
        //    string SLOT07_B = "";
        //    string SLOT07_C = "";
        //    string SLOT07_D = "";
        //    string SLOT07_E = "";
        //    string SLOT07_F = "";
        //    string SLOT07_G = "";
        //    string SLOT07_H = "";
        //    string SLOT08_MESSAGE = "";
        //    double SLOT08_START = 0;
        //    double SLOT08_END = 0;
        //    double SLOT08_RATE = 0;
        //    double SLOT08_MIN = 0;
        //    double SLOT08_MAX = 0;
        //    string SLOT08_A = "";
        //    string SLOT08_B = "";
        //    string SLOT08_C = "";
        //    string SLOT08_D = "";
        //    string SLOT08_E = "";
        //    string SLOT08_F = "";
        //    string SLOT08_G = "";
        //    string SLOT08_H = "";
        //    string SLOT09_MESSAGE = "";
        //    double SLOT09_START = 0;
        //    double SLOT09_END = 0;
        //    double SLOT09_RATE = 0;
        //    double SLOT09_MIN = 0;
        //    double SLOT09_MAX = 0;
        //    string SLOT09_A = "";
        //    string SLOT09_B = "";
        //    string SLOT09_C = "";
        //    string SLOT09_D = "";
        //    string SLOT09_E = "";
        //    string SLOT09_F = "";
        //    string SLOT09_G = "";
        //    string SLOT09_H = "";
        //    string SLOT10_MESSAGE = "";
        //    double SLOT10_START = 0;
        //    double SLOT10_END = 0;
        //    double SLOT10_RATE = 0;
        //    double SLOT10_MIN = 0;
        //    double SLOT10_MAX = 0;
        //    string SLOT10_A = "";
        //    string SLOT10_B = "";
        //    string SLOT10_C = "";
        //    string SLOT10_D = "";
        //    string SLOT10_E = "";
        //    string SLOT10_F = "";
        //    string SLOT10_G = "";
        //    string SLOT10_H = "";

        //    double NET_QTY_PCS = 0;
        //    double CUM_NET_QTY_PCS = 0;
        //    double NET_REVENUE_LCL = 0;
        //    double CUM_NET_REVENUE_LCL = 0;
        //    double NET_QTY_TOT_PCS = 0;
        //    double NET_REVENUE_TOT_LCL = 0;
        //    double CUM_ROYALTY_LCL = 0;
        //    double CUM_ROYALTY_USD = 0;
        //    double CUM_ROYALTY_PAID_LCL = 0;
        //    double CUM_ROYALTY_PAID_USD = 0;
        //    double ASPLcl_TOT = 0;
        //    double EXCHANGE_RATE = 0;

        //    double Qty = 0;
        //    double Qty_Start = 0;
        //    double Qty_End = 0;
        //    double Qty_01 = 0;
        //    double Qty_02 = 0;
        //    double Qty_03 = 0;
        //    double Qty_04 = 0;
        //    double Qty_05 = 0;
        //    double Qty_06 = 0;
        //    double Qty_07 = 0;
        //    double Qty_08 = 0;
        //    double Qty_09 = 0;
        //    double Qty_10 = 0;

        //    double RevLcl = 0;
        //    double RevLcl_Start = 0;
        //    double RevLcl_End = 0;
        //    double RevLcl_01 = 0;
        //    double RevLcl_02 = 0;
        //    double RevLcl_03 = 0;
        //    double RevLcl_04 = 0;
        //    double RevLcl_05 = 0;
        //    double RevLcl_06 = 0;
        //    double RevLcl_07 = 0;
        //    double RevLcl_08 = 0;
        //    double RevLcl_09 = 0;
        //    double RevLcl_10 = 0;

        //    string Condition_Start = "";
        //    string Condition_End = "";
        //    string Condition = "";

        //    double RateOnRevLcl_01 = 0;
        //    double RateOnRevLcl_02 = 0;
        //    double RateOnRevLcl_03 = 0;
        //    double RateOnRevLcl_04 = 0;
        //    double RateOnRevLcl_05 = 0;
        //    double RateOnRevLcl_06 = 0;
        //    double RateOnRevLcl_07 = 0;
        //    double RateOnRevLcl_08 = 0;
        //    double RateOnRevLcl_09 = 0;
        //    double RateOnRevLcl_10 = 0;

        //    double RoyLcl_BeforeCheck_01 = 0;
        //    double RoyLcl_BeforeCheck_02 = 0;
        //    double RoyLcl_BeforeCheck_03 = 0;
        //    double RoyLcl_BeforeCheck_04 = 0;
        //    double RoyLcl_BeforeCheck_05 = 0;
        //    double RoyLcl_BeforeCheck_06 = 0;
        //    double RoyLcl_BeforeCheck_07 = 0;
        //    double RoyLcl_BeforeCheck_08 = 0;
        //    double RoyLcl_BeforeCheck_09 = 0;
        //    double RoyLcl_BeforeCheck_10 = 0;
        //    double RoyLcl_BeforeCheck = 0;

        //    double RoyLcl_On_Qty_Before_Check_01 = 0;
        //    double RoyLcl_On_Qty_Before_Check_02 = 0;
        //    double RoyLcl_On_Qty_Before_Check_03 = 0;
        //    double RoyLcl_On_Qty_Before_Check_04 = 0;
        //    double RoyLcl_On_Qty_Before_Check_05 = 0;
        //    double RoyLcl_On_Qty_Before_Check_06 = 0;
        //    double RoyLcl_On_Qty_Before_Check_07 = 0;
        //    double RoyLcl_On_Qty_Before_Check_08 = 0;
        //    double RoyLcl_On_Qty_Before_Check_09 = 0;
        //    double RoyLcl_On_Qty_Before_Check_10 = 0;

        //    double RateLclOnQty_01 = 0;
        //    double RateLclOnQty_02 = 0;
        //    double RateLclOnQty_03 = 0;
        //    double RateLclOnQty_04 = 0;
        //    double RateLclOnQty_05 = 0;
        //    double RateLclOnQty_06 = 0;
        //    double RateLclOnQty_07 = 0;
        //    double RateLclOnQty_08 = 0;
        //    double RateLclOnQty_09 = 0;
        //    double RateLclOnQty_10 = 0;

        //    double RoyLcl_01 = 0;
        //    double RoyLcl_02 = 0;
        //    double RoyLcl_03 = 0;
        //    double RoyLcl_04 = 0;
        //    double RoyLcl_05 = 0;
        //    double RoyLcl_06 = 0;
        //    double RoyLcl_07 = 0;
        //    double RoyLcl_08 = 0;
        //    double RoyLcl_09 = 0;
        //    double RoyLcl_10 = 0;
        //    double RoyLcl = 0;
        //    double RoyLcl_Start = 0;
        //    double RoyLcl_End = 0;
        //    double RoyUSD = 0;
        //    double RoyUSD_Start = 0;
        //    double RoyUSD_End = 0;

        //    double RoyLcl_Paid = 0;
        //    double RoyLcl_Paid_Start = 0;
        //    double RoyLcl_Paid_End = 0;
        //    double RoyUSD_Paid = 0;
        //    double RoyUSD_Paid_Start = 0;
        //    double RoyUSD_Paid_End = 0;


        //    // Estrae i dati della Rule
        //    // -----------------------------------
        //    AGREEMENT_ID = (string)RuleOne_Dt.Rows[0]["AGREEMENT_ID"];
        //    AGREEMENT = (string)RuleOne_Dt.Rows[0]["AGREEMENT"];
        //    VERSION_DATE = (string)RuleOne_Dt.Rows[0]["VERSION_DATE"];
        //    VERSION_DESCR = (string)RuleOne_Dt.Rows[0]["VERSION_DESCR"];
        //    MODEL_ACTIVE = (string)RuleOne_Dt.Rows[0]["MODEL_ACTIVE"];
        //    MODEL_INITIAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_INITIAL_MONTH"];
        //    MODEL_FINAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_FINAL_MONTH"];
        //    MODEL_TYPE = (string)RuleOne_Dt.Rows[0]["MODEL_TYPE"];
        //    MODEL_CURRENCY = (string)RuleOne_Dt.Rows[0]["MODEL_CURRENCY"];
        //    MODEL_NB_SLOT = (double)RuleOne_Dt.Rows[0]["MODEL_NB_SLOT"];
        //    MODEL_MIN_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_ACCUMULATED_ROYALTY"];
        //    MODEL_MIN_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_YEAR_ROYALTY"];
        //    MODEL_MIN_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_QUARTER_ROYALTY"];
        //    MODEL_MAX_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_ACCUMULATED_ROYALTY"];
        //    MODEL_MAX_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_YEAR_ROYALTY"];
        //    MODEL_MAX_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_QUARTER_ROYALTY"];
        //    SELECTION_PL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_PL_LIST"];
        //    SELECTION_CP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_LIST"];
        //    SELECTION_CP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_LIST"];
        //    SELECTION_CUSTOMER_FINAL_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_LIST"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_LIST"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_LIST"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION"];
        //    SLOT01_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT01_MESSAGE"];
        //    SLOT01_START = (double)RuleOne_Dt.Rows[0]["SLOT01_START"];
        //    SLOT01_END = (double)RuleOne_Dt.Rows[0]["SLOT01_END"];
        //    SLOT01_RATE = (double)RuleOne_Dt.Rows[0]["SLOT01_RATE"];
        //    SLOT01_MIN = (double)RuleOne_Dt.Rows[0]["SLOT01_MIN"];
        //    SLOT01_MAX = (double)RuleOne_Dt.Rows[0]["SLOT01_MAX"];
        //    SLOT01_A = (string)RuleOne_Dt.Rows[0]["SLOT01_A"];
        //    SLOT01_B = (string)RuleOne_Dt.Rows[0]["SLOT01_B"];
        //    SLOT01_C = (string)RuleOne_Dt.Rows[0]["SLOT01_C"];
        //    SLOT01_D = (string)RuleOne_Dt.Rows[0]["SLOT01_D"];
        //    SLOT01_E = (string)RuleOne_Dt.Rows[0]["SLOT01_E"];
        //    SLOT01_F = (string)RuleOne_Dt.Rows[0]["SLOT01_F"];
        //    SLOT01_G = (string)RuleOne_Dt.Rows[0]["SLOT01_G"];
        //    SLOT01_H = (string)RuleOne_Dt.Rows[0]["SLOT01_H"];
        //    SLOT02_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT02_MESSAGE"];
        //    SLOT02_START = (double)RuleOne_Dt.Rows[0]["SLOT02_START"];
        //    SLOT02_END = (double)RuleOne_Dt.Rows[0]["SLOT02_END"];
        //    SLOT02_RATE = (double)RuleOne_Dt.Rows[0]["SLOT02_RATE"];
        //    SLOT02_MIN = (double)RuleOne_Dt.Rows[0]["SLOT02_MIN"];
        //    SLOT02_MAX = (double)RuleOne_Dt.Rows[0]["SLOT02_MAX"];
        //    SLOT02_A = (string)RuleOne_Dt.Rows[0]["SLOT02_A"];
        //    SLOT02_B = (string)RuleOne_Dt.Rows[0]["SLOT02_B"];
        //    SLOT02_C = (string)RuleOne_Dt.Rows[0]["SLOT02_C"];
        //    SLOT02_D = (string)RuleOne_Dt.Rows[0]["SLOT02_D"];
        //    SLOT02_E = (string)RuleOne_Dt.Rows[0]["SLOT02_E"];
        //    SLOT02_F = (string)RuleOne_Dt.Rows[0]["SLOT02_F"];
        //    SLOT02_G = (string)RuleOne_Dt.Rows[0]["SLOT02_G"];
        //    SLOT02_H = (string)RuleOne_Dt.Rows[0]["SLOT02_H"];
        //    SLOT03_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT03_MESSAGE"];
        //    SLOT03_START = (double)RuleOne_Dt.Rows[0]["SLOT03_START"];
        //    SLOT03_END = (double)RuleOne_Dt.Rows[0]["SLOT03_END"];
        //    SLOT03_RATE = (double)RuleOne_Dt.Rows[0]["SLOT03_RATE"];
        //    SLOT03_MIN = (double)RuleOne_Dt.Rows[0]["SLOT03_MIN"];
        //    SLOT03_MAX = (double)RuleOne_Dt.Rows[0]["SLOT03_MAX"];
        //    SLOT03_A = (string)RuleOne_Dt.Rows[0]["SLOT03_A"];
        //    SLOT03_B = (string)RuleOne_Dt.Rows[0]["SLOT03_B"];
        //    SLOT03_C = (string)RuleOne_Dt.Rows[0]["SLOT03_C"];
        //    SLOT03_D = (string)RuleOne_Dt.Rows[0]["SLOT03_D"];
        //    SLOT03_E = (string)RuleOne_Dt.Rows[0]["SLOT03_E"];
        //    SLOT03_F = (string)RuleOne_Dt.Rows[0]["SLOT03_F"];
        //    SLOT03_G = (string)RuleOne_Dt.Rows[0]["SLOT03_G"];
        //    SLOT03_H = (string)RuleOne_Dt.Rows[0]["SLOT03_H"];
        //    SLOT04_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT04_MESSAGE"];
        //    SLOT04_START = (double)RuleOne_Dt.Rows[0]["SLOT04_START"];
        //    SLOT04_END = (double)RuleOne_Dt.Rows[0]["SLOT04_END"];
        //    SLOT04_RATE = (double)RuleOne_Dt.Rows[0]["SLOT04_RATE"];
        //    SLOT04_MIN = (double)RuleOne_Dt.Rows[0]["SLOT04_MIN"];
        //    SLOT04_MAX = (double)RuleOne_Dt.Rows[0]["SLOT04_MAX"];
        //    SLOT04_A = (string)RuleOne_Dt.Rows[0]["SLOT04_A"];
        //    SLOT04_B = (string)RuleOne_Dt.Rows[0]["SLOT04_B"];
        //    SLOT04_C = (string)RuleOne_Dt.Rows[0]["SLOT04_C"];
        //    SLOT04_D = (string)RuleOne_Dt.Rows[0]["SLOT04_D"];
        //    SLOT04_E = (string)RuleOne_Dt.Rows[0]["SLOT04_E"];
        //    SLOT04_F = (string)RuleOne_Dt.Rows[0]["SLOT04_F"];
        //    SLOT04_G = (string)RuleOne_Dt.Rows[0]["SLOT04_G"];
        //    SLOT04_H = (string)RuleOne_Dt.Rows[0]["SLOT04_H"];
        //    SLOT05_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT05_MESSAGE"];
        //    SLOT05_START = (double)RuleOne_Dt.Rows[0]["SLOT05_START"];
        //    SLOT05_END = (double)RuleOne_Dt.Rows[0]["SLOT05_END"];
        //    SLOT05_RATE = (double)RuleOne_Dt.Rows[0]["SLOT05_RATE"];
        //    SLOT05_MIN = (double)RuleOne_Dt.Rows[0]["SLOT05_MIN"];
        //    SLOT05_MAX = (double)RuleOne_Dt.Rows[0]["SLOT05_MAX"];
        //    SLOT05_A = (string)RuleOne_Dt.Rows[0]["SLOT05_A"];
        //    SLOT05_B = (string)RuleOne_Dt.Rows[0]["SLOT05_B"];
        //    SLOT05_C = (string)RuleOne_Dt.Rows[0]["SLOT05_C"];
        //    SLOT05_D = (string)RuleOne_Dt.Rows[0]["SLOT05_D"];
        //    SLOT05_E = (string)RuleOne_Dt.Rows[0]["SLOT05_E"];
        //    SLOT05_F = (string)RuleOne_Dt.Rows[0]["SLOT05_F"];
        //    SLOT05_G = (string)RuleOne_Dt.Rows[0]["SLOT05_G"];
        //    SLOT05_H = (string)RuleOne_Dt.Rows[0]["SLOT05_H"];
        //    SLOT06_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT06_MESSAGE"];
        //    SLOT06_START = (double)RuleOne_Dt.Rows[0]["SLOT06_START"];
        //    SLOT06_END = (double)RuleOne_Dt.Rows[0]["SLOT06_END"];
        //    SLOT06_RATE = (double)RuleOne_Dt.Rows[0]["SLOT06_RATE"];
        //    SLOT06_MIN = (double)RuleOne_Dt.Rows[0]["SLOT06_MIN"];
        //    SLOT06_MAX = (double)RuleOne_Dt.Rows[0]["SLOT06_MAX"];
        //    SLOT06_A = (string)RuleOne_Dt.Rows[0]["SLOT06_A"];
        //    SLOT06_B = (string)RuleOne_Dt.Rows[0]["SLOT06_B"];
        //    SLOT06_C = (string)RuleOne_Dt.Rows[0]["SLOT06_C"];
        //    SLOT06_D = (string)RuleOne_Dt.Rows[0]["SLOT06_D"];
        //    SLOT06_E = (string)RuleOne_Dt.Rows[0]["SLOT06_E"];
        //    SLOT06_F = (string)RuleOne_Dt.Rows[0]["SLOT06_F"];
        //    SLOT06_G = (string)RuleOne_Dt.Rows[0]["SLOT06_G"];
        //    SLOT06_H = (string)RuleOne_Dt.Rows[0]["SLOT06_H"];
        //    SLOT07_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT07_MESSAGE"];
        //    SLOT07_START = (double)RuleOne_Dt.Rows[0]["SLOT07_START"];
        //    SLOT07_END = (double)RuleOne_Dt.Rows[0]["SLOT07_END"];
        //    SLOT07_RATE = (double)RuleOne_Dt.Rows[0]["SLOT07_RATE"];
        //    SLOT07_MIN = (double)RuleOne_Dt.Rows[0]["SLOT07_MIN"];
        //    SLOT07_MAX = (double)RuleOne_Dt.Rows[0]["SLOT07_MAX"];
        //    SLOT07_A = (string)RuleOne_Dt.Rows[0]["SLOT07_A"];
        //    SLOT07_B = (string)RuleOne_Dt.Rows[0]["SLOT07_B"];
        //    SLOT07_C = (string)RuleOne_Dt.Rows[0]["SLOT07_C"];
        //    SLOT07_D = (string)RuleOne_Dt.Rows[0]["SLOT07_D"];
        //    SLOT07_E = (string)RuleOne_Dt.Rows[0]["SLOT07_E"];
        //    SLOT07_F = (string)RuleOne_Dt.Rows[0]["SLOT07_F"];
        //    SLOT07_G = (string)RuleOne_Dt.Rows[0]["SLOT07_G"];
        //    SLOT07_H = (string)RuleOne_Dt.Rows[0]["SLOT07_H"];
        //    SLOT08_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT08_MESSAGE"];
        //    SLOT08_START = (double)RuleOne_Dt.Rows[0]["SLOT08_START"];
        //    SLOT08_END = (double)RuleOne_Dt.Rows[0]["SLOT08_END"];
        //    SLOT08_RATE = (double)RuleOne_Dt.Rows[0]["SLOT08_RATE"];
        //    SLOT08_MIN = (double)RuleOne_Dt.Rows[0]["SLOT08_MIN"];
        //    SLOT08_MAX = (double)RuleOne_Dt.Rows[0]["SLOT08_MAX"];
        //    SLOT08_A = (string)RuleOne_Dt.Rows[0]["SLOT08_A"];
        //    SLOT08_B = (string)RuleOne_Dt.Rows[0]["SLOT08_B"];
        //    SLOT08_C = (string)RuleOne_Dt.Rows[0]["SLOT08_C"];
        //    SLOT08_D = (string)RuleOne_Dt.Rows[0]["SLOT08_D"];
        //    SLOT08_E = (string)RuleOne_Dt.Rows[0]["SLOT08_E"];
        //    SLOT08_F = (string)RuleOne_Dt.Rows[0]["SLOT08_F"];
        //    SLOT08_G = (string)RuleOne_Dt.Rows[0]["SLOT08_G"];
        //    SLOT08_H = (string)RuleOne_Dt.Rows[0]["SLOT08_H"];
        //    SLOT09_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT09_MESSAGE"];
        //    SLOT09_START = (double)RuleOne_Dt.Rows[0]["SLOT09_START"];
        //    SLOT09_END = (double)RuleOne_Dt.Rows[0]["SLOT09_END"];
        //    SLOT09_RATE = (double)RuleOne_Dt.Rows[0]["SLOT09_RATE"];
        //    SLOT09_MIN = (double)RuleOne_Dt.Rows[0]["SLOT09_MIN"];
        //    SLOT09_MAX = (double)RuleOne_Dt.Rows[0]["SLOT09_MAX"];
        //    SLOT09_A = (string)RuleOne_Dt.Rows[0]["SLOT09_A"];
        //    SLOT09_B = (string)RuleOne_Dt.Rows[0]["SLOT09_B"];
        //    SLOT09_C = (string)RuleOne_Dt.Rows[0]["SLOT09_C"];
        //    SLOT09_D = (string)RuleOne_Dt.Rows[0]["SLOT09_D"];
        //    SLOT09_E = (string)RuleOne_Dt.Rows[0]["SLOT09_E"];
        //    SLOT09_F = (string)RuleOne_Dt.Rows[0]["SLOT09_F"];
        //    SLOT09_G = (string)RuleOne_Dt.Rows[0]["SLOT09_G"];
        //    SLOT09_H = (string)RuleOne_Dt.Rows[0]["SLOT09_H"];
        //    SLOT10_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT10_MESSAGE"];
        //    SLOT10_START = (double)RuleOne_Dt.Rows[0]["SLOT10_START"];
        //    SLOT10_END = (double)RuleOne_Dt.Rows[0]["SLOT10_END"];
        //    SLOT10_RATE = (double)RuleOne_Dt.Rows[0]["SLOT10_RATE"];
        //    SLOT10_MIN = (double)RuleOne_Dt.Rows[0]["SLOT10_MIN"];
        //    SLOT10_MAX = (double)RuleOne_Dt.Rows[0]["SLOT10_MAX"];
        //    SLOT10_A = (string)RuleOne_Dt.Rows[0]["SLOT10_A"];
        //    SLOT10_B = (string)RuleOne_Dt.Rows[0]["SLOT10_B"];
        //    SLOT10_C = (string)RuleOne_Dt.Rows[0]["SLOT10_C"];
        //    SLOT10_D = (string)RuleOne_Dt.Rows[0]["SLOT10_D"];
        //    SLOT10_E = (string)RuleOne_Dt.Rows[0]["SLOT10_E"];
        //    SLOT10_F = (string)RuleOne_Dt.Rows[0]["SLOT10_F"];
        //    SLOT10_G = (string)RuleOne_Dt.Rows[0]["SLOT10_G"];
        //    SLOT10_H = (string)RuleOne_Dt.Rows[0]["SLOT10_H"];


        //    // Loop
        //    // -----------------------------------
        //    for (int i = 0; i < Royalty_OneRule_OneQuarter_Dt.Rows.Count; i++)
        //    {

        //        // Dati iniziali
        //        // -----------------------------------
        //        EXCHANGE_RATE = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["EXCHANGE_RATE"]), 4);
        //        NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_QTY_PCS"]), 0);
        //        CUM_NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_QTY_PCS"]), 0);
        //        NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_REVENUE_LCL"]), 2);
        //        CUM_NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_REVENUE_LCL"]), 2);
        //        NET_QTY_TOT_PCS = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_QTY_PCS)", ""), 0);
        //        NET_REVENUE_TOT_LCL = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_REVENUE_LCL)", ""), 2);

        //        CUM_ROYALTY_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_ROYALTY_LCL"]), 2);
        //        CUM_ROYALTY_USD = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_ROYALTY_USD"]), 2);
        //        CUM_ROYALTY_PAID_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_ROYALTY_PAID_LCL"]), 2);
        //        CUM_ROYALTY_PAID_USD = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_ROYALTY_PAID_USD"]), 2);

        //        Qty = NET_QTY_PCS;
        //        Qty_End = CUM_NET_QTY_PCS;
        //        Qty_Start = Qty_End - Qty;

        //        RevLcl = NET_REVENUE_LCL;
        //        RevLcl_End = CUM_NET_REVENUE_LCL;
        //        RevLcl_Start = RevLcl_End - RevLcl;

        //        if (NET_QTY_TOT_PCS != 0)
        //        {
        //            ASPLcl_TOT = NET_REVENUE_TOT_LCL / NET_QTY_TOT_PCS;
        //        }
        //        else
        //        {
        //            ASPLcl_TOT = 0;
        //        }


        //        // Condition
        //        // -----------------------------------
        //        Condition_By_Qty(
        //            in Qty_Start,
        //            in Qty_End,
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT01_MESSAGE,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT02_MESSAGE,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT03_MESSAGE,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT04_MESSAGE,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT05_MESSAGE,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT06_MESSAGE,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT07_MESSAGE,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT08_MESSAGE,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT09_MESSAGE,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in SLOT10_MESSAGE,
        //            ref Condition_Start,
        //            ref Condition_End,
        //            ref Condition
        //            );


        //        // Quantity, Revenue
        //        // -----------------------------------
        //        Quantity_And_Revenue_By_Qty(
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in Qty,
        //            in Qty_Start,
        //            in Qty_End,
        //            ref Qty_01,
        //            ref Qty_02,
        //            ref Qty_03,
        //            ref Qty_04,
        //            ref Qty_05,
        //            ref Qty_06,
        //            ref Qty_07,
        //            ref Qty_08,
        //            ref Qty_09,
        //            ref Qty_10,
        //            ref RevLcl,
        //            ref RevLcl_End,
        //            ref RevLcl_Start,
        //            ref RevLcl_01,
        //            ref RevLcl_02,
        //            ref RevLcl_03,
        //            ref RevLcl_04,
        //            ref RevLcl_05,
        //            ref RevLcl_06,
        //            ref RevLcl_07,
        //            ref RevLcl_08,
        //            ref RevLcl_09,
        //            ref RevLcl_10);



        //        // RateOnRev
        //        // -----------------------------------
        //        RateOnRevLcl_01 = SLOT01_RATE;
        //        RateOnRevLcl_02 = SLOT02_RATE;
        //        RateOnRevLcl_03 = SLOT03_RATE;
        //        RateOnRevLcl_04 = SLOT04_RATE;
        //        RateOnRevLcl_05 = SLOT05_RATE;
        //        RateOnRevLcl_06 = SLOT06_RATE;
        //        RateOnRevLcl_07 = SLOT07_RATE;
        //        RateOnRevLcl_08 = SLOT08_RATE;
        //        RateOnRevLcl_09 = SLOT09_RATE;
        //        RateOnRevLcl_10 = SLOT10_RATE;


        //        // Roy prima del check Min/Max
        //        // -----------------------------------
        //        RoyLcl_BeforeCheck_01 = RateOnRevLcl_01 * RevLcl_01;
        //        RoyLcl_BeforeCheck_02 = RateOnRevLcl_01 * RevLcl_01;
        //        RoyLcl_BeforeCheck_03 = RateOnRevLcl_01 * RevLcl_01;
        //        RoyLcl_BeforeCheck_04 = RateOnRevLcl_01 * RevLcl_01;
        //        RoyLcl_BeforeCheck_05 = RateOnRevLcl_01 * RevLcl_01;
        //        RoyLcl_BeforeCheck_06 = RateOnRevLcl_01 * RevLcl_01;
        //        RoyLcl_BeforeCheck_07 = RateOnRevLcl_01 * RevLcl_01;
        //        RoyLcl_BeforeCheck_08 = RateOnRevLcl_01 * RevLcl_01;
        //        RoyLcl_BeforeCheck_09 = RateOnRevLcl_01 * RevLcl_01;
        //        RoyLcl_BeforeCheck_10 = RateOnRevLcl_01 * RevLcl_01;
        //        RoyLcl_BeforeCheck =
        //            RoyLcl_BeforeCheck_01 +
        //            RoyLcl_BeforeCheck_02 +
        //            RoyLcl_BeforeCheck_03 +
        //            RoyLcl_BeforeCheck_04 +
        //            RoyLcl_BeforeCheck_05 +
        //            RoyLcl_BeforeCheck_06 +
        //            RoyLcl_BeforeCheck_07 +
        //            RoyLcl_BeforeCheck_08 +
        //            RoyLcl_BeforeCheck_09 +
        //            RoyLcl_BeforeCheck_10;


        //        // Roy/Qty prima del check Min/Max
        //        // -----------------------------------
        //        if (Qty_01 != 0) { RoyLcl_On_Qty_Before_Check_01 = RoyLcl_BeforeCheck_01 / Qty_01; } else { RoyLcl_On_Qty_Before_Check_01 = 0; };
        //        if (Qty_02 != 0) { RoyLcl_On_Qty_Before_Check_02 = RoyLcl_BeforeCheck_02 / Qty_02; } else { RoyLcl_On_Qty_Before_Check_02 = 0; };
        //        if (Qty_03 != 0) { RoyLcl_On_Qty_Before_Check_03 = RoyLcl_BeforeCheck_03 / Qty_03; } else { RoyLcl_On_Qty_Before_Check_03 = 0; };
        //        if (Qty_04 != 0) { RoyLcl_On_Qty_Before_Check_04 = RoyLcl_BeforeCheck_04 / Qty_04; } else { RoyLcl_On_Qty_Before_Check_04 = 0; };
        //        if (Qty_05 != 0) { RoyLcl_On_Qty_Before_Check_05 = RoyLcl_BeforeCheck_05 / Qty_05; } else { RoyLcl_On_Qty_Before_Check_05 = 0; };
        //        if (Qty_06 != 0) { RoyLcl_On_Qty_Before_Check_06 = RoyLcl_BeforeCheck_06 / Qty_06; } else { RoyLcl_On_Qty_Before_Check_06 = 0; };
        //        if (Qty_07 != 0) { RoyLcl_On_Qty_Before_Check_07 = RoyLcl_BeforeCheck_07 / Qty_07; } else { RoyLcl_On_Qty_Before_Check_07 = 0; };
        //        if (Qty_08 != 0) { RoyLcl_On_Qty_Before_Check_08 = RoyLcl_BeforeCheck_08 / Qty_08; } else { RoyLcl_On_Qty_Before_Check_08 = 0; };
        //        if (Qty_09 != 0) { RoyLcl_On_Qty_Before_Check_09 = RoyLcl_BeforeCheck_09 / Qty_09; } else { RoyLcl_On_Qty_Before_Check_09 = 0; };
        //        if (Qty_10 != 0) { RoyLcl_On_Qty_Before_Check_10 = RoyLcl_BeforeCheck_10 / Qty_10; } else { RoyLcl_On_Qty_Before_Check_10 = 0; };


        //        // Check Min/Max
        //        // -----------------------------------
        //        if (RoyLcl_On_Qty_Before_Check_01 < SLOT01_MIN) { RateLclOnQty_01 = SLOT01_MIN; } else if (RoyLcl_On_Qty_Before_Check_01 > SLOT01_MAX) { RateLclOnQty_01 = SLOT01_MAX; } else { RateLclOnQty_01 = RoyLcl_On_Qty_Before_Check_01; }
        //        if (RoyLcl_On_Qty_Before_Check_02 < SLOT02_MIN) { RateLclOnQty_02 = SLOT02_MIN; } else if (RoyLcl_On_Qty_Before_Check_02 > SLOT02_MAX) { RateLclOnQty_02 = SLOT02_MAX; } else { RateLclOnQty_02 = RoyLcl_On_Qty_Before_Check_02; }
        //        if (RoyLcl_On_Qty_Before_Check_03 < SLOT03_MIN) { RateLclOnQty_03 = SLOT03_MIN; } else if (RoyLcl_On_Qty_Before_Check_03 > SLOT03_MAX) { RateLclOnQty_03 = SLOT03_MAX; } else { RateLclOnQty_03 = RoyLcl_On_Qty_Before_Check_03; }
        //        if (RoyLcl_On_Qty_Before_Check_04 < SLOT04_MIN) { RateLclOnQty_04 = SLOT04_MIN; } else if (RoyLcl_On_Qty_Before_Check_04 > SLOT04_MAX) { RateLclOnQty_04 = SLOT04_MAX; } else { RateLclOnQty_04 = RoyLcl_On_Qty_Before_Check_04; }
        //        if (RoyLcl_On_Qty_Before_Check_05 < SLOT05_MIN) { RateLclOnQty_05 = SLOT05_MIN; } else if (RoyLcl_On_Qty_Before_Check_05 > SLOT05_MAX) { RateLclOnQty_05 = SLOT05_MAX; } else { RateLclOnQty_05 = RoyLcl_On_Qty_Before_Check_05; }
        //        if (RoyLcl_On_Qty_Before_Check_06 < SLOT06_MIN) { RateLclOnQty_06 = SLOT06_MIN; } else if (RoyLcl_On_Qty_Before_Check_06 > SLOT06_MAX) { RateLclOnQty_06 = SLOT06_MAX; } else { RateLclOnQty_06 = RoyLcl_On_Qty_Before_Check_06; }
        //        if (RoyLcl_On_Qty_Before_Check_07 < SLOT07_MIN) { RateLclOnQty_07 = SLOT07_MIN; } else if (RoyLcl_On_Qty_Before_Check_07 > SLOT07_MAX) { RateLclOnQty_07 = SLOT07_MAX; } else { RateLclOnQty_07 = RoyLcl_On_Qty_Before_Check_07; }
        //        if (RoyLcl_On_Qty_Before_Check_08 < SLOT08_MIN) { RateLclOnQty_08 = SLOT08_MIN; } else if (RoyLcl_On_Qty_Before_Check_08 > SLOT08_MAX) { RateLclOnQty_08 = SLOT08_MAX; } else { RateLclOnQty_08 = RoyLcl_On_Qty_Before_Check_08; }
        //        if (RoyLcl_On_Qty_Before_Check_09 < SLOT09_MIN) { RateLclOnQty_09 = SLOT09_MIN; } else if (RoyLcl_On_Qty_Before_Check_09 > SLOT09_MAX) { RateLclOnQty_09 = SLOT09_MAX; } else { RateLclOnQty_09 = RoyLcl_On_Qty_Before_Check_09; }
        //        if (RoyLcl_On_Qty_Before_Check_10 < SLOT10_MIN) { RateLclOnQty_10 = SLOT10_MIN; } else if (RoyLcl_On_Qty_Before_Check_10 > SLOT10_MAX) { RateLclOnQty_10 = SLOT10_MAX; } else { RateLclOnQty_10 = RoyLcl_On_Qty_Before_Check_10; }


        //        // Royalty finale
        //        // -----------------------------------
        //        if (RateLclOnQty_01 != 0) { RoyLcl_01 = RateLclOnQty_01 * Qty_01; }
        //        if (RateLclOnQty_02 != 0) { RoyLcl_02 = RateLclOnQty_02 * Qty_02; }
        //        if (RateLclOnQty_03 != 0) { RoyLcl_03 = RateLclOnQty_03 * Qty_03; }
        //        if (RateLclOnQty_04 != 0) { RoyLcl_04 = RateLclOnQty_04 * Qty_04; }
        //        if (RateLclOnQty_05 != 0) { RoyLcl_05 = RateLclOnQty_05 * Qty_05; }
        //        if (RateLclOnQty_06 != 0) { RoyLcl_06 = RateLclOnQty_06 * Qty_06; }
        //        if (RateLclOnQty_07 != 0) { RoyLcl_07 = RateLclOnQty_07 * Qty_07; }
        //        if (RateLclOnQty_08 != 0) { RoyLcl_08 = RateLclOnQty_08 * Qty_08; }
        //        if (RateLclOnQty_09 != 0) { RoyLcl_09 = RateLclOnQty_09 * Qty_09; }
        //        if (RateLclOnQty_10 != 0) { RoyLcl_10 = RateLclOnQty_10 * Qty_10; }
        //        RoyLcl =
        //            RoyLcl_01 +
        //            RoyLcl_02 +
        //            RoyLcl_03 +
        //            RoyLcl_04 +
        //            RoyLcl_05 +
        //            RoyLcl_06 +
        //            RoyLcl_07 +
        //            RoyLcl_08 +
        //            RoyLcl_09 +
        //            RoyLcl_10;
        //        RoyLcl_Start = CUM_ROYALTY_LCL;
        //        RoyLcl_End = CUM_ROYALTY_LCL + RoyLcl;
        //        RoyUSD = RoyLcl * EXCHANGE_RATE;
        //        RoyUSD_Start = CUM_ROYALTY_USD;
        //        RoyUSD_End = CUM_ROYALTY_USD + RoyUSD;



        //        // Royalty Paid
        //        // -----------------------------------
        //        Royalty_Paid(
        //            in RoyLcl,
        //            in RoyLcl_Start,
        //            in RoyLcl_End,
        //            in MODEL_MIN_ACCUMULATED_ROYALTY,
        //            in MODEL_MIN_EACH_YEAR_ROYALTY,
        //            in MODEL_MIN_EACH_QUARTER_ROYALTY,
        //            in MODEL_MAX_ACCUMULATED_ROYALTY,
        //            in MODEL_MAX_EACH_YEAR_ROYALTY,
        //            in MODEL_MAX_EACH_QUARTER_ROYALTY,
        //            in EXCHANGE_RATE,
        //            ref RoyLcl_Paid,
        //            ref RoyLcl_Paid_Start,
        //            ref RoyLcl_Paid_End,
        //            ref RoyUSD_Paid,
        //            ref RoyUSD_Paid_Start,
        //            ref RoyUSD_Paid_End);



        //        // Memorizza i risultati del datatable
        //        // -----------------------------------
        //        Royalty_OneRule_OneQuarter_Dt.Rows[i]["CONDITION"] = Condition;
        //        Royalty_OneRule_OneQuarter_Dt.Rows[i]["ROYALTY_LCL"] = Math.Round(RoyLcl, 2);
        //        Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_ROYALTY_LCL"] = Math.Round(RoyLcl_End, 2);
        //        Royalty_OneRule_OneQuarter_Dt.Rows[i]["ROYALTY_USD"] = Math.Round(RoyUSD, 2);
        //        Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_ROYALTY_USD"] = Math.Round(RoyUSD_End, 2);
        //        Royalty_OneRule_OneQuarter_Dt.Rows[i]["ROYALTY_PAID_LCL"] = Math.Round(RoyLcl_Paid, 2);
        //        Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_ROYALTY_PAID_LCL"] = Math.Round(RoyLcl_Paid_End, 2);
        //        Royalty_OneRule_OneQuarter_Dt.Rows[i]["ROYALTY_PAID_USD"] = Math.Round(RoyUSD_Paid, 2);
        //        Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_ROYALTY_PAID_USD"] = Math.Round(RoyUSD_Paid_End, 2);


        //    }



        //}



        //public void M04_SLOTrev_RATErev_MINMAXasp(ref DataTable RuleOne_Dt, ref DataTable Royalty_OneRule_OneQuarter_Dt)
        //{
        //    // ****************************************************
        //    // MODELLO 04
        //    // SLOT: su Revenue
        //    // RATE: su Revenue
        //    // MIN/MAX RATE: su ASP
        //    //
        //    // ESEMPIO: 
        //    //


        //    // Variabili interne
        //    // -----------------------------------
        //    string AGREEMENT_ID = "";
        //    string AGREEMENT = "";
        //    string VERSION_DATE = "";
        //    string VERSION_DESCR = "";
        //    string MODEL_ACTIVE = "";
        //    string MODEL_INITIAL_MONTH = "";
        //    string MODEL_FINAL_MONTH = "";
        //    string MODEL_TYPE = "";
        //    string MODEL_CURRENCY = "";
        //    double MODEL_NB_SLOT = 0;
        //    double MODEL_MIN_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MIN_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MIN_EACH_QUARTER_ROYALTY = 0;
        //    double MODEL_MAX_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MAX_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MAX_EACH_QUARTER_ROYALTY = 0;
        //    string SELECTION_PL_LIST = "";
        //    string SELECTION_CP_LIST = "";
        //    string SELECTION_CP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = "";
        //    string SLOT01_MESSAGE = "";
        //    double SLOT01_START = 0;
        //    double SLOT01_END = 0;
        //    double SLOT01_RATE = 0;
        //    double SLOT01_MIN = 0;
        //    double SLOT01_MAX = 0;
        //    string SLOT01_A = "";
        //    string SLOT01_B = "";
        //    string SLOT01_C = "";
        //    string SLOT01_D = "";
        //    string SLOT01_E = "";
        //    string SLOT01_F = "";
        //    string SLOT01_G = "";
        //    string SLOT01_H = "";
        //    string SLOT02_MESSAGE = "";
        //    double SLOT02_START = 0;
        //    double SLOT02_END = 0;
        //    double SLOT02_RATE = 0;
        //    double SLOT02_MIN = 0;
        //    double SLOT02_MAX = 0;
        //    string SLOT02_A = "";
        //    string SLOT02_B = "";
        //    string SLOT02_C = "";
        //    string SLOT02_D = "";
        //    string SLOT02_E = "";
        //    string SLOT02_F = "";
        //    string SLOT02_G = "";
        //    string SLOT02_H = "";
        //    string SLOT03_MESSAGE = "";
        //    double SLOT03_START = 0;
        //    double SLOT03_END = 0;
        //    double SLOT03_RATE = 0;
        //    double SLOT03_MIN = 0;
        //    double SLOT03_MAX = 0;
        //    string SLOT03_A = "";
        //    string SLOT03_B = "";
        //    string SLOT03_C = "";
        //    string SLOT03_D = "";
        //    string SLOT03_E = "";
        //    string SLOT03_F = "";
        //    string SLOT03_G = "";
        //    string SLOT03_H = "";
        //    string SLOT04_MESSAGE = "";
        //    double SLOT04_START = 0;
        //    double SLOT04_END = 0;
        //    double SLOT04_RATE = 0;
        //    double SLOT04_MIN = 0;
        //    double SLOT04_MAX = 0;
        //    string SLOT04_A = "";
        //    string SLOT04_B = "";
        //    string SLOT04_C = "";
        //    string SLOT04_D = "";
        //    string SLOT04_E = "";
        //    string SLOT04_F = "";
        //    string SLOT04_G = "";
        //    string SLOT04_H = "";
        //    string SLOT05_MESSAGE = "";
        //    double SLOT05_START = 0;
        //    double SLOT05_END = 0;
        //    double SLOT05_RATE = 0;
        //    double SLOT05_MIN = 0;
        //    double SLOT05_MAX = 0;
        //    string SLOT05_A = "";
        //    string SLOT05_B = "";
        //    string SLOT05_C = "";
        //    string SLOT05_D = "";
        //    string SLOT05_E = "";
        //    string SLOT05_F = "";
        //    string SLOT05_G = "";
        //    string SLOT05_H = "";
        //    string SLOT06_MESSAGE = "";
        //    double SLOT06_START = 0;
        //    double SLOT06_END = 0;
        //    double SLOT06_RATE = 0;
        //    double SLOT06_MIN = 0;
        //    double SLOT06_MAX = 0;
        //    string SLOT06_A = "";
        //    string SLOT06_B = "";
        //    string SLOT06_C = "";
        //    string SLOT06_D = "";
        //    string SLOT06_E = "";
        //    string SLOT06_F = "";
        //    string SLOT06_G = "";
        //    string SLOT06_H = "";
        //    string SLOT07_MESSAGE = "";
        //    double SLOT07_START = 0;
        //    double SLOT07_END = 0;
        //    double SLOT07_RATE = 0;
        //    double SLOT07_MIN = 0;
        //    double SLOT07_MAX = 0;
        //    string SLOT07_A = "";
        //    string SLOT07_B = "";
        //    string SLOT07_C = "";
        //    string SLOT07_D = "";
        //    string SLOT07_E = "";
        //    string SLOT07_F = "";
        //    string SLOT07_G = "";
        //    string SLOT07_H = "";
        //    string SLOT08_MESSAGE = "";
        //    double SLOT08_START = 0;
        //    double SLOT08_END = 0;
        //    double SLOT08_RATE = 0;
        //    double SLOT08_MIN = 0;
        //    double SLOT08_MAX = 0;
        //    string SLOT08_A = "";
        //    string SLOT08_B = "";
        //    string SLOT08_C = "";
        //    string SLOT08_D = "";
        //    string SLOT08_E = "";
        //    string SLOT08_F = "";
        //    string SLOT08_G = "";
        //    string SLOT08_H = "";
        //    string SLOT09_MESSAGE = "";
        //    double SLOT09_START = 0;
        //    double SLOT09_END = 0;
        //    double SLOT09_RATE = 0;
        //    double SLOT09_MIN = 0;
        //    double SLOT09_MAX = 0;
        //    string SLOT09_A = "";
        //    string SLOT09_B = "";
        //    string SLOT09_C = "";
        //    string SLOT09_D = "";
        //    string SLOT09_E = "";
        //    string SLOT09_F = "";
        //    string SLOT09_G = "";
        //    string SLOT09_H = "";
        //    string SLOT10_MESSAGE = "";
        //    double SLOT10_START = 0;
        //    double SLOT10_END = 0;
        //    double SLOT10_RATE = 0;
        //    double SLOT10_MIN = 0;
        //    double SLOT10_MAX = 0;
        //    string SLOT10_A = "";
        //    string SLOT10_B = "";
        //    string SLOT10_C = "";
        //    string SLOT10_D = "";
        //    string SLOT10_E = "";
        //    string SLOT10_F = "";
        //    string SLOT10_G = "";
        //    string SLOT10_H = "";

        //    double NET_QTY_PCS = 0;
        //    double CUM_NET_QTY_PCS = 0;
        //    double NET_REVENUE_LCL = 0;
        //    double CUM_NET_REVENUE_LCL = 0;
        //    double NET_QTY_TOT_PCS = 0;
        //    double NET_REVENUE_TOT_LCL = 0;
        //    double ASPLcl_TOT = 0;

        //    double Qty = 0;
        //    double Qty_Start = 0;
        //    double Qty_End = 0;
        //    double Qty_01 = 0;
        //    double Qty_02 = 0;
        //    double Qty_03 = 0;
        //    double Qty_04 = 0;
        //    double Qty_05 = 0;
        //    double Qty_06 = 0;
        //    double Qty_07 = 0;
        //    double Qty_08 = 0;
        //    double Qty_09 = 0;
        //    double Qty_10 = 0;

        //    double RevLcl = 0;
        //    double RevLcl_Start = 0;
        //    double RevLcl_End = 0;
        //    double RevLcl_01 = 0;
        //    double RevLcl_02 = 0;
        //    double RevLcl_03 = 0;
        //    double RevLcl_04 = 0;
        //    double RevLcl_05 = 0;
        //    double RevLcl_06 = 0;
        //    double RevLcl_07 = 0;
        //    double RevLcl_08 = 0;
        //    double RevLcl_09 = 0;
        //    double RevLcl_10 = 0;

        //    string Slot_Start = "";
        //    string Slot_End = "";

        //    string Condition_Start = "";
        //    string Condition_End = "";
        //    string Condition = "";


        //    // Estrae i dati della Rule
        //    // -----------------------------------
        //    AGREEMENT_ID = (string)RuleOne_Dt.Rows[0]["AGREEMENT_ID"];
        //    AGREEMENT = (string)RuleOne_Dt.Rows[0]["AGREEMENT"];
        //    VERSION_DATE = (string)RuleOne_Dt.Rows[0]["VERSION_DATE"];
        //    VERSION_DESCR = (string)RuleOne_Dt.Rows[0]["VERSION_DESCR"];
        //    MODEL_ACTIVE = (string)RuleOne_Dt.Rows[0]["MODEL_ACTIVE"];
        //    MODEL_INITIAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_INITIAL_MONTH"];
        //    MODEL_FINAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_FINAL_MONTH"];
        //    MODEL_TYPE = (string)RuleOne_Dt.Rows[0]["MODEL_TYPE"];
        //    MODEL_CURRENCY = (string)RuleOne_Dt.Rows[0]["MODEL_CURRENCY"];
        //    MODEL_NB_SLOT = (double)RuleOne_Dt.Rows[0]["MODEL_NB_SLOT"];
        //    MODEL_MIN_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_ACCUMULATED_ROYALTY"];
        //    MODEL_MIN_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_YEAR_ROYALTY"];
        //    MODEL_MIN_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_QUARTER_ROYALTY"];
        //    MODEL_MAX_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_ACCUMULATED_ROYALTY"];
        //    MODEL_MAX_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_YEAR_ROYALTY"];
        //    MODEL_MAX_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_QUARTER_ROYALTY"];
        //    SELECTION_PL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_PL_LIST"];
        //    SELECTION_CP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_LIST"];
        //    SELECTION_CP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_LIST"];
        //    SELECTION_CUSTOMER_FINAL_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_LIST"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_LIST"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_LIST"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION"];
        //    SLOT01_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT01_MESSAGE"];
        //    SLOT01_START = (double)RuleOne_Dt.Rows[0]["SLOT01_START"];
        //    SLOT01_END = (double)RuleOne_Dt.Rows[0]["SLOT01_END"];
        //    SLOT01_RATE = (double)RuleOne_Dt.Rows[0]["SLOT01_RATE"];
        //    SLOT01_MIN = (double)RuleOne_Dt.Rows[0]["SLOT01_MIN"];
        //    SLOT01_MAX = (double)RuleOne_Dt.Rows[0]["SLOT01_MAX"];
        //    SLOT01_A = (string)RuleOne_Dt.Rows[0]["SLOT01_A"];
        //    SLOT01_B = (string)RuleOne_Dt.Rows[0]["SLOT01_B"];
        //    SLOT01_C = (string)RuleOne_Dt.Rows[0]["SLOT01_C"];
        //    SLOT01_D = (string)RuleOne_Dt.Rows[0]["SLOT01_D"];
        //    SLOT01_E = (string)RuleOne_Dt.Rows[0]["SLOT01_E"];
        //    SLOT01_F = (string)RuleOne_Dt.Rows[0]["SLOT01_F"];
        //    SLOT01_G = (string)RuleOne_Dt.Rows[0]["SLOT01_G"];
        //    SLOT01_H = (string)RuleOne_Dt.Rows[0]["SLOT01_H"];
        //    SLOT02_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT02_MESSAGE"];
        //    SLOT02_START = (double)RuleOne_Dt.Rows[0]["SLOT02_START"];
        //    SLOT02_END = (double)RuleOne_Dt.Rows[0]["SLOT02_END"];
        //    SLOT02_RATE = (double)RuleOne_Dt.Rows[0]["SLOT02_RATE"];
        //    SLOT02_MIN = (double)RuleOne_Dt.Rows[0]["SLOT02_MIN"];
        //    SLOT02_MAX = (double)RuleOne_Dt.Rows[0]["SLOT02_MAX"];
        //    SLOT02_A = (string)RuleOne_Dt.Rows[0]["SLOT02_A"];
        //    SLOT02_B = (string)RuleOne_Dt.Rows[0]["SLOT02_B"];
        //    SLOT02_C = (string)RuleOne_Dt.Rows[0]["SLOT02_C"];
        //    SLOT02_D = (string)RuleOne_Dt.Rows[0]["SLOT02_D"];
        //    SLOT02_E = (string)RuleOne_Dt.Rows[0]["SLOT02_E"];
        //    SLOT02_F = (string)RuleOne_Dt.Rows[0]["SLOT02_F"];
        //    SLOT02_G = (string)RuleOne_Dt.Rows[0]["SLOT02_G"];
        //    SLOT02_H = (string)RuleOne_Dt.Rows[0]["SLOT02_H"];
        //    SLOT03_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT03_MESSAGE"];
        //    SLOT03_START = (double)RuleOne_Dt.Rows[0]["SLOT03_START"];
        //    SLOT03_END = (double)RuleOne_Dt.Rows[0]["SLOT03_END"];
        //    SLOT03_RATE = (double)RuleOne_Dt.Rows[0]["SLOT03_RATE"];
        //    SLOT03_MIN = (double)RuleOne_Dt.Rows[0]["SLOT03_MIN"];
        //    SLOT03_MAX = (double)RuleOne_Dt.Rows[0]["SLOT03_MAX"];
        //    SLOT03_A = (string)RuleOne_Dt.Rows[0]["SLOT03_A"];
        //    SLOT03_B = (string)RuleOne_Dt.Rows[0]["SLOT03_B"];
        //    SLOT03_C = (string)RuleOne_Dt.Rows[0]["SLOT03_C"];
        //    SLOT03_D = (string)RuleOne_Dt.Rows[0]["SLOT03_D"];
        //    SLOT03_E = (string)RuleOne_Dt.Rows[0]["SLOT03_E"];
        //    SLOT03_F = (string)RuleOne_Dt.Rows[0]["SLOT03_F"];
        //    SLOT03_G = (string)RuleOne_Dt.Rows[0]["SLOT03_G"];
        //    SLOT03_H = (string)RuleOne_Dt.Rows[0]["SLOT03_H"];
        //    SLOT04_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT04_MESSAGE"];
        //    SLOT04_START = (double)RuleOne_Dt.Rows[0]["SLOT04_START"];
        //    SLOT04_END = (double)RuleOne_Dt.Rows[0]["SLOT04_END"];
        //    SLOT04_RATE = (double)RuleOne_Dt.Rows[0]["SLOT04_RATE"];
        //    SLOT04_MIN = (double)RuleOne_Dt.Rows[0]["SLOT04_MIN"];
        //    SLOT04_MAX = (double)RuleOne_Dt.Rows[0]["SLOT04_MAX"];
        //    SLOT04_A = (string)RuleOne_Dt.Rows[0]["SLOT04_A"];
        //    SLOT04_B = (string)RuleOne_Dt.Rows[0]["SLOT04_B"];
        //    SLOT04_C = (string)RuleOne_Dt.Rows[0]["SLOT04_C"];
        //    SLOT04_D = (string)RuleOne_Dt.Rows[0]["SLOT04_D"];
        //    SLOT04_E = (string)RuleOne_Dt.Rows[0]["SLOT04_E"];
        //    SLOT04_F = (string)RuleOne_Dt.Rows[0]["SLOT04_F"];
        //    SLOT04_G = (string)RuleOne_Dt.Rows[0]["SLOT04_G"];
        //    SLOT04_H = (string)RuleOne_Dt.Rows[0]["SLOT04_H"];
        //    SLOT05_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT05_MESSAGE"];
        //    SLOT05_START = (double)RuleOne_Dt.Rows[0]["SLOT05_START"];
        //    SLOT05_END = (double)RuleOne_Dt.Rows[0]["SLOT05_END"];
        //    SLOT05_RATE = (double)RuleOne_Dt.Rows[0]["SLOT05_RATE"];
        //    SLOT05_MIN = (double)RuleOne_Dt.Rows[0]["SLOT05_MIN"];
        //    SLOT05_MAX = (double)RuleOne_Dt.Rows[0]["SLOT05_MAX"];
        //    SLOT05_A = (string)RuleOne_Dt.Rows[0]["SLOT05_A"];
        //    SLOT05_B = (string)RuleOne_Dt.Rows[0]["SLOT05_B"];
        //    SLOT05_C = (string)RuleOne_Dt.Rows[0]["SLOT05_C"];
        //    SLOT05_D = (string)RuleOne_Dt.Rows[0]["SLOT05_D"];
        //    SLOT05_E = (string)RuleOne_Dt.Rows[0]["SLOT05_E"];
        //    SLOT05_F = (string)RuleOne_Dt.Rows[0]["SLOT05_F"];
        //    SLOT05_G = (string)RuleOne_Dt.Rows[0]["SLOT05_G"];
        //    SLOT05_H = (string)RuleOne_Dt.Rows[0]["SLOT05_H"];
        //    SLOT06_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT06_MESSAGE"];
        //    SLOT06_START = (double)RuleOne_Dt.Rows[0]["SLOT06_START"];
        //    SLOT06_END = (double)RuleOne_Dt.Rows[0]["SLOT06_END"];
        //    SLOT06_RATE = (double)RuleOne_Dt.Rows[0]["SLOT06_RATE"];
        //    SLOT06_MIN = (double)RuleOne_Dt.Rows[0]["SLOT06_MIN"];
        //    SLOT06_MAX = (double)RuleOne_Dt.Rows[0]["SLOT06_MAX"];
        //    SLOT06_A = (string)RuleOne_Dt.Rows[0]["SLOT06_A"];
        //    SLOT06_B = (string)RuleOne_Dt.Rows[0]["SLOT06_B"];
        //    SLOT06_C = (string)RuleOne_Dt.Rows[0]["SLOT06_C"];
        //    SLOT06_D = (string)RuleOne_Dt.Rows[0]["SLOT06_D"];
        //    SLOT06_E = (string)RuleOne_Dt.Rows[0]["SLOT06_E"];
        //    SLOT06_F = (string)RuleOne_Dt.Rows[0]["SLOT06_F"];
        //    SLOT06_G = (string)RuleOne_Dt.Rows[0]["SLOT06_G"];
        //    SLOT06_H = (string)RuleOne_Dt.Rows[0]["SLOT06_H"];
        //    SLOT07_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT07_MESSAGE"];
        //    SLOT07_START = (double)RuleOne_Dt.Rows[0]["SLOT07_START"];
        //    SLOT07_END = (double)RuleOne_Dt.Rows[0]["SLOT07_END"];
        //    SLOT07_RATE = (double)RuleOne_Dt.Rows[0]["SLOT07_RATE"];
        //    SLOT07_MIN = (double)RuleOne_Dt.Rows[0]["SLOT07_MIN"];
        //    SLOT07_MAX = (double)RuleOne_Dt.Rows[0]["SLOT07_MAX"];
        //    SLOT07_A = (string)RuleOne_Dt.Rows[0]["SLOT07_A"];
        //    SLOT07_B = (string)RuleOne_Dt.Rows[0]["SLOT07_B"];
        //    SLOT07_C = (string)RuleOne_Dt.Rows[0]["SLOT07_C"];
        //    SLOT07_D = (string)RuleOne_Dt.Rows[0]["SLOT07_D"];
        //    SLOT07_E = (string)RuleOne_Dt.Rows[0]["SLOT07_E"];
        //    SLOT07_F = (string)RuleOne_Dt.Rows[0]["SLOT07_F"];
        //    SLOT07_G = (string)RuleOne_Dt.Rows[0]["SLOT07_G"];
        //    SLOT07_H = (string)RuleOne_Dt.Rows[0]["SLOT07_H"];
        //    SLOT08_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT08_MESSAGE"];
        //    SLOT08_START = (double)RuleOne_Dt.Rows[0]["SLOT08_START"];
        //    SLOT08_END = (double)RuleOne_Dt.Rows[0]["SLOT08_END"];
        //    SLOT08_RATE = (double)RuleOne_Dt.Rows[0]["SLOT08_RATE"];
        //    SLOT08_MIN = (double)RuleOne_Dt.Rows[0]["SLOT08_MIN"];
        //    SLOT08_MAX = (double)RuleOne_Dt.Rows[0]["SLOT08_MAX"];
        //    SLOT08_A = (string)RuleOne_Dt.Rows[0]["SLOT08_A"];
        //    SLOT08_B = (string)RuleOne_Dt.Rows[0]["SLOT08_B"];
        //    SLOT08_C = (string)RuleOne_Dt.Rows[0]["SLOT08_C"];
        //    SLOT08_D = (string)RuleOne_Dt.Rows[0]["SLOT08_D"];
        //    SLOT08_E = (string)RuleOne_Dt.Rows[0]["SLOT08_E"];
        //    SLOT08_F = (string)RuleOne_Dt.Rows[0]["SLOT08_F"];
        //    SLOT08_G = (string)RuleOne_Dt.Rows[0]["SLOT08_G"];
        //    SLOT08_H = (string)RuleOne_Dt.Rows[0]["SLOT08_H"];
        //    SLOT09_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT09_MESSAGE"];
        //    SLOT09_START = (double)RuleOne_Dt.Rows[0]["SLOT09_START"];
        //    SLOT09_END = (double)RuleOne_Dt.Rows[0]["SLOT09_END"];
        //    SLOT09_RATE = (double)RuleOne_Dt.Rows[0]["SLOT09_RATE"];
        //    SLOT09_MIN = (double)RuleOne_Dt.Rows[0]["SLOT09_MIN"];
        //    SLOT09_MAX = (double)RuleOne_Dt.Rows[0]["SLOT09_MAX"];
        //    SLOT09_A = (string)RuleOne_Dt.Rows[0]["SLOT09_A"];
        //    SLOT09_B = (string)RuleOne_Dt.Rows[0]["SLOT09_B"];
        //    SLOT09_C = (string)RuleOne_Dt.Rows[0]["SLOT09_C"];
        //    SLOT09_D = (string)RuleOne_Dt.Rows[0]["SLOT09_D"];
        //    SLOT09_E = (string)RuleOne_Dt.Rows[0]["SLOT09_E"];
        //    SLOT09_F = (string)RuleOne_Dt.Rows[0]["SLOT09_F"];
        //    SLOT09_G = (string)RuleOne_Dt.Rows[0]["SLOT09_G"];
        //    SLOT09_H = (string)RuleOne_Dt.Rows[0]["SLOT09_H"];
        //    SLOT10_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT10_MESSAGE"];
        //    SLOT10_START = (double)RuleOne_Dt.Rows[0]["SLOT10_START"];
        //    SLOT10_END = (double)RuleOne_Dt.Rows[0]["SLOT10_END"];
        //    SLOT10_RATE = (double)RuleOne_Dt.Rows[0]["SLOT10_RATE"];
        //    SLOT10_MIN = (double)RuleOne_Dt.Rows[0]["SLOT10_MIN"];
        //    SLOT10_MAX = (double)RuleOne_Dt.Rows[0]["SLOT10_MAX"];
        //    SLOT10_A = (string)RuleOne_Dt.Rows[0]["SLOT10_A"];
        //    SLOT10_B = (string)RuleOne_Dt.Rows[0]["SLOT10_B"];
        //    SLOT10_C = (string)RuleOne_Dt.Rows[0]["SLOT10_C"];
        //    SLOT10_D = (string)RuleOne_Dt.Rows[0]["SLOT10_D"];
        //    SLOT10_E = (string)RuleOne_Dt.Rows[0]["SLOT10_E"];
        //    SLOT10_F = (string)RuleOne_Dt.Rows[0]["SLOT10_F"];
        //    SLOT10_G = (string)RuleOne_Dt.Rows[0]["SLOT10_G"];
        //    SLOT10_H = (string)RuleOne_Dt.Rows[0]["SLOT10_H"];




        //    // Loop
        //    // -----------------------------------
        //    for (int i = 0; i < Royalty_OneRule_OneQuarter_Dt.Rows.Count; i++)
        //    {

        //        // Dati iniziali
        //        NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_QTY_PCS"]), 0);
        //        CUM_NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_QTY_PCS"]), 0);
        //        NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_REVENUE_LCL"]), 2);
        //        CUM_NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_REVENUE_LCL"]), 2);
        //        NET_QTY_TOT_PCS = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_QTY_PCS)", ""), 0);
        //        NET_REVENUE_TOT_LCL = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_REVENUE_LCL)", ""), 2);

        //        Qty = NET_QTY_PCS;
        //        Qty_End = CUM_NET_QTY_PCS;
        //        Qty_Start = Qty_End - Qty;

        //        RevLcl = NET_REVENUE_LCL;
        //        RevLcl_End = CUM_NET_REVENUE_LCL;
        //        RevLcl_Start = RevLcl_End - RevLcl;

        //        if (NET_QTY_TOT_PCS != 0)
        //        {
        //            ASPLcl_TOT = NET_REVENUE_TOT_LCL / NET_QTY_TOT_PCS;
        //        }
        //        else
        //        {
        //            ASPLcl_TOT = 0;
        //        }


        //        // Condition
        //        Condition_By_Rev(
        //            in RevLcl_Start,
        //            in RevLcl_End,
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT01_MESSAGE,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT02_MESSAGE,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT03_MESSAGE,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT04_MESSAGE,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT05_MESSAGE,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT06_MESSAGE,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT07_MESSAGE,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT08_MESSAGE,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT09_MESSAGE,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in SLOT10_MESSAGE,
        //            ref Condition_Start,
        //            ref Condition_End,
        //            ref Condition
        //            );


        //        // Quantity, Revenue
        //        Quantity_And_Revenue_By_Rev(
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in Qty,
        //            in Qty_Start,
        //            in Qty_End,
        //            ref Qty_01,
        //            ref Qty_02,
        //            ref Qty_03,
        //            ref Qty_04,
        //            ref Qty_05,
        //            ref Qty_06,
        //            ref Qty_07,
        //            ref Qty_08,
        //            ref Qty_09,
        //            ref Qty_10,
        //            ref RevLcl,
        //            ref RevLcl_End,
        //            ref RevLcl_Start,
        //            ref RevLcl_01,
        //            ref RevLcl_02,
        //            ref RevLcl_03,
        //            ref RevLcl_04,
        //            ref RevLcl_05,
        //            ref RevLcl_06,
        //            ref RevLcl_07,
        //            ref RevLcl_08,
        //            ref RevLcl_09,
        //            ref RevLcl_10);



        //    }








        //    //// Variabili interne
        //    //// -----------------------------------
        //    //double Id_Agreement = 0;
        //    //string Agreement = "";
        //    //string Model = "";
        //    //double Slot = 0;
        //    //string Agreement_Date_Start = "";
        //    //string Agreement_Date_End = "";
        //    //string PL_String = "";
        //    //string PL_Cond = "";
        //    //string CP_String = "";
        //    //string CP_Cond = "";
        //    //string Customer_String = "";
        //    //string Customer_Cond = "";
        //    //string Condition1 = "";
        //    //double Limit1 = 0;
        //    //double Rate1 = 0;
        //    //double Min1 = 0;
        //    //double Max1 = 0;
        //    //double Extra1A = 0;
        //    //double Extra1B = 0;
        //    //double Extra1C = 0;
        //    //double Extra1D = 0;
        //    //double Extra1E = 0;
        //    //double Extra1F = 0;
        //    //string Condition2 = "";
        //    //double Limit2 = 0;
        //    //double Rate2 = 0;
        //    //double Min2 = 0;
        //    //double Max2 = 0;
        //    //double Extra2A = 0;
        //    //double Extra2B = 0;
        //    //double Extra2C = 0;
        //    //double Extra2D = 0;
        //    //double Extra2E = 0;
        //    //double Extra2F = 0;
        //    //string Condition3 = "";
        //    //double Limit3 = 0;
        //    //double Rate3 = 0;
        //    //double Min3 = 0;
        //    //double Max3 = 0;
        //    //double Extra3A = 0;
        //    //double Extra3B = 0;
        //    //double Extra3C = 0;
        //    //double Extra3D = 0;
        //    //double Extra3E = 0;
        //    //double Extra3F = 0;
        //    //string Condition4 = "";
        //    //double Limit4 = 0;
        //    //double Rate4 = 0;
        //    //double Min4 = 0;
        //    //double Max4 = 0;
        //    //double Extra4A = 0;
        //    //double Extra4B = 0;
        //    //double Extra4C = 0;
        //    //double Extra4D = 0;
        //    //double Extra4E = 0;
        //    //double Extra4F = 0;
        //    //string Condition5 = "";
        //    //double Limit5 = 0;
        //    //double Rate5 = 0;
        //    //double Min5 = 0;
        //    //double Max5 = 0;
        //    //double Extra5A = 0;
        //    //double Extra5B = 0;
        //    //double Extra5C = 0;
        //    //double Extra5D = 0;
        //    //double Extra5E = 0;
        //    //double Extra5F = 0;
        //    //string Condition6 = "";
        //    //double Limit6 = 0;
        //    //double Rate6 = 0;
        //    //double Min6 = 0;
        //    //double Max6 = 0;
        //    //double Extra6A = 0;
        //    //double Extra6B = 0;
        //    //double Extra6C = 0;
        //    //double Extra6D = 0;
        //    //double Extra6E = 0;
        //    //double Extra6F = 0;
        //    //double RateOver = 0;
        //    //double MinOver = 0;
        //    //double MaxOver = 0;
        //    //double ExtraOverA = 0;
        //    //double ExtraOverB = 0;
        //    //double ExtraOverC = 0;
        //    //double ExtraOverD = 0;
        //    //double ExtraOverE = 0;
        //    //double ExtraOverF = 0;
        //    //string LclCurrency = "";
        //    //double Min_Cum_Royalty_KLcl = 0;
        //    //double Max_Cum_Royalty_KLcl = 0;

        //    //double QtyL = 0;
        //    //double QtyH = 0;
        //    //double Qty = 0;
        //    //double Qty1 = 0;
        //    //double Qty2 = 0;
        //    //double Qty3 = 0;
        //    //double Qty4 = 0;
        //    //double Qty5 = 0;
        //    //double Qty6 = 0;
        //    //double QtyOver = 0;

        //    //string ConditionL = "";
        //    //string ConditionH = "";
        //    //string Condition = "";

        //    //double RevLclL = 0;
        //    //double RevLclH = 0;
        //    //double RevLcl = 0;
        //    //double RevLcl1 = 0;
        //    //double RevLcl2 = 0;
        //    //double RevLcl3 = 0;
        //    //double RevLcl4 = 0;
        //    //double RevLcl5 = 0;
        //    //double RevLcl6 = 0;
        //    //double RevLclOver = 0;

        //    //double RateOnPcs1 = 0;
        //    //double RateOnPcs2 = 0;
        //    //double RateOnPcs3 = 0;
        //    //double RateOnPcs4 = 0;
        //    //double RateOnPcs5 = 0;
        //    //double RateOnPcs6 = 0;
        //    //double RateOnPcsOver = 0;

        //    //double RateOnRev1 = 0;
        //    //double RateOnRev2 = 0;
        //    //double RateOnRev3 = 0;
        //    //double RateOnRev4 = 0;
        //    //double RateOnRev5 = 0;
        //    //double RateOnRev6 = 0;
        //    //double RateOnRevOver = 0;

        //    //double RoyLclL = 0;
        //    //double RoyLclH = 0;
        //    //double RoyLcl = 0;
        //    //double RoyLcl1 = 0;
        //    //double RoyLcl2 = 0;
        //    //double RoyLcl3 = 0;
        //    //double RoyLcl4 = 0;
        //    //double RoyLcl5 = 0;
        //    //double RoyLcl6 = 0;
        //    //double RoyLclOver = 0;

        //    //double RoyUSDL = 0;
        //    //double RoyUSDH = 0;
        //    //double RoyUSD = 0;

        //    //double RoyPaidLcl = 0;
        //    //double RoyPaidLclL = 0;
        //    //double RoyPaidLclH = 0;

        //    //double RoyPaidUSD = 0;
        //    //double RoyPaidUSDL = 0;
        //    //double RoyPaidUSDH = 0;

        //    //double Rate_Lcl_per_pcs = 0;
        //    //double Rate_USD_per_pcs = 0;
        //    //double Rate_Rev_percent = 0;

        //    //double ExchangeRate = 0;

        //    //double ASPLclTot = 0;
        //    //double RevLclTot = 0;
        //    //double QtyTot = 0;


        //    //// Estrae i dati dell'Agreement
        //    //// -----------------------------------
        //    //Id_Agreement = (double)Agreement_QA_Dt.Rows[0]["Id_Agreement"];
        //    //Agreement = Agreement_QA_Dt.Rows[0]["Agreement"].ToString();
        //    //Model = Agreement_QA_Dt.Rows[0]["Model"].ToString();
        //    //Slot = (double)Agreement_QA_Dt.Rows[0]["Slot"];
        //    //Agreement_Date_Start = Agreement_QA_Dt.Rows[0]["Agreement_Date_Start"].ToString();
        //    //Agreement_Date_End = Agreement_QA_Dt.Rows[0]["Agreement_Date_End"].ToString();
        //    //PL_String = Agreement_QA_Dt.Rows[0]["PL_String"].ToString();
        //    //PL_Cond = Agreement_QA_Dt.Rows[0]["PL_Cond"].ToString();
        //    //CP_String = Agreement_QA_Dt.Rows[0]["CP_String"].ToString();
        //    //CP_Cond = Agreement_QA_Dt.Rows[0]["CP_Cond"].ToString();
        //    //Customer_String = Agreement_QA_Dt.Rows[0]["Customer_String"].ToString();
        //    //Customer_Cond = Agreement_QA_Dt.Rows[0]["Customer_Cond"].ToString();
        //    //Condition1 = Agreement_QA_Dt.Rows[0]["Condition1"].ToString();
        //    //Limit1 = (double)Agreement_QA_Dt.Rows[0]["Limit1"];
        //    //Rate1 = (double)Agreement_QA_Dt.Rows[0]["Rate1"];
        //    //Min1 = (double)Agreement_QA_Dt.Rows[0]["Min1"];
        //    //Max1 = (double)Agreement_QA_Dt.Rows[0]["Max1"];
        //    //Extra1A = (double)Agreement_QA_Dt.Rows[0]["Extra1A"];
        //    //Extra1B = (double)Agreement_QA_Dt.Rows[0]["Extra1B"];
        //    //Extra1C = (double)Agreement_QA_Dt.Rows[0]["Extra1C"];
        //    //Extra1D = (double)Agreement_QA_Dt.Rows[0]["Extra1D"];
        //    //Extra1E = (double)Agreement_QA_Dt.Rows[0]["Extra1E"];
        //    //Extra1F = (double)Agreement_QA_Dt.Rows[0]["Extra1F"];
        //    //Condition2 = Agreement_QA_Dt.Rows[0]["Condition2"].ToString();
        //    //Limit2 = (double)Agreement_QA_Dt.Rows[0]["Limit2"];
        //    //Rate2 = (double)Agreement_QA_Dt.Rows[0]["Rate2"];
        //    //Min2 = (double)Agreement_QA_Dt.Rows[0]["Min2"];
        //    //Max2 = (double)Agreement_QA_Dt.Rows[0]["Max2"];
        //    //Extra2A = (double)Agreement_QA_Dt.Rows[0]["Extra2A"];
        //    //Extra2B = (double)Agreement_QA_Dt.Rows[0]["Extra2B"];
        //    //Extra2C = (double)Agreement_QA_Dt.Rows[0]["Extra2C"];
        //    //Extra2D = (double)Agreement_QA_Dt.Rows[0]["Extra2D"];
        //    //Extra2E = (double)Agreement_QA_Dt.Rows[0]["Extra2E"];
        //    //Extra2F = (double)Agreement_QA_Dt.Rows[0]["Extra2F"];
        //    //Condition3 = Agreement_QA_Dt.Rows[0]["Condition3"].ToString();
        //    //Limit3 = (double)Agreement_QA_Dt.Rows[0]["Limit3"];
        //    //Rate3 = (double)Agreement_QA_Dt.Rows[0]["Rate3"];
        //    //Min3 = (double)Agreement_QA_Dt.Rows[0]["Min3"];
        //    //Max3 = (double)Agreement_QA_Dt.Rows[0]["Max3"];
        //    //Extra3A = (double)Agreement_QA_Dt.Rows[0]["Extra3A"];
        //    //Extra3B = (double)Agreement_QA_Dt.Rows[0]["Extra3B"];
        //    //Extra3C = (double)Agreement_QA_Dt.Rows[0]["Extra3C"];
        //    //Extra3D = (double)Agreement_QA_Dt.Rows[0]["Extra3D"];
        //    //Extra3E = (double)Agreement_QA_Dt.Rows[0]["Extra3E"];
        //    //Extra3F = (double)Agreement_QA_Dt.Rows[0]["Extra3F"];
        //    //Condition4 = Agreement_QA_Dt.Rows[0]["Condition4"].ToString();
        //    //Limit4 = (double)Agreement_QA_Dt.Rows[0]["Limit4"];
        //    //Rate4 = (double)Agreement_QA_Dt.Rows[0]["Rate4"];
        //    //Min4 = (double)Agreement_QA_Dt.Rows[0]["Min4"];
        //    //Max4 = (double)Agreement_QA_Dt.Rows[0]["Max4"];
        //    //Extra4A = (double)Agreement_QA_Dt.Rows[0]["Extra4A"];
        //    //Extra4B = (double)Agreement_QA_Dt.Rows[0]["Extra4B"];
        //    //Extra4C = (double)Agreement_QA_Dt.Rows[0]["Extra4C"];
        //    //Extra4D = (double)Agreement_QA_Dt.Rows[0]["Extra4D"];
        //    //Extra4E = (double)Agreement_QA_Dt.Rows[0]["Extra4E"];
        //    //Extra4F = (double)Agreement_QA_Dt.Rows[0]["Extra4F"];
        //    //Condition5 = Agreement_QA_Dt.Rows[0]["Condition5"].ToString();
        //    //Limit5 = (double)Agreement_QA_Dt.Rows[0]["Limit5"];
        //    //Rate5 = (double)Agreement_QA_Dt.Rows[0]["Rate5"];
        //    //Min5 = (double)Agreement_QA_Dt.Rows[0]["Min5"];
        //    //Max5 = (double)Agreement_QA_Dt.Rows[0]["Max5"];
        //    //Extra5A = (double)Agreement_QA_Dt.Rows[0]["Extra5A"];
        //    //Extra5B = (double)Agreement_QA_Dt.Rows[0]["Extra5B"];
        //    //Extra5C = (double)Agreement_QA_Dt.Rows[0]["Extra5C"];
        //    //Extra5D = (double)Agreement_QA_Dt.Rows[0]["Extra5D"];
        //    //Extra5E = (double)Agreement_QA_Dt.Rows[0]["Extra5E"];
        //    //Extra5F = (double)Agreement_QA_Dt.Rows[0]["Extra5F"];
        //    //Condition6 = Agreement_QA_Dt.Rows[0]["Condition6"].ToString();
        //    //Limit6 = (double)Agreement_QA_Dt.Rows[0]["Limit6"];
        //    //Rate6 = (double)Agreement_QA_Dt.Rows[0]["Rate6"];
        //    //Min6 = (double)Agreement_QA_Dt.Rows[0]["Min6"];
        //    //Max6 = (double)Agreement_QA_Dt.Rows[0]["Max6"];
        //    //Extra6A = (double)Agreement_QA_Dt.Rows[0]["Extra6A"];
        //    //Extra6B = (double)Agreement_QA_Dt.Rows[0]["Extra6B"];
        //    //Extra6C = (double)Agreement_QA_Dt.Rows[0]["Extra6C"];
        //    //Extra6D = (double)Agreement_QA_Dt.Rows[0]["Extra6D"];
        //    //Extra6E = (double)Agreement_QA_Dt.Rows[0]["Extra6E"];
        //    //Extra6F = (double)Agreement_QA_Dt.Rows[0]["Extra6F"];
        //    //RateOver = (double)Agreement_QA_Dt.Rows[0]["RateOver"];
        //    //MinOver = (double)Agreement_QA_Dt.Rows[0]["MinOver"];
        //    //MaxOver = (double)Agreement_QA_Dt.Rows[0]["MaxOver"];
        //    //ExtraOverA = (double)Agreement_QA_Dt.Rows[0]["ExtraOverA"];
        //    //ExtraOverB = (double)Agreement_QA_Dt.Rows[0]["ExtraOverB"];
        //    //ExtraOverC = (double)Agreement_QA_Dt.Rows[0]["ExtraOverC"];
        //    //ExtraOverD = (double)Agreement_QA_Dt.Rows[0]["ExtraOverD"];
        //    //ExtraOverE = (double)Agreement_QA_Dt.Rows[0]["ExtraOverE"];
        //    //ExtraOverF = (double)Agreement_QA_Dt.Rows[0]["ExtraOverF"];
        //    //LclCurrency = Agreement_QA_Dt.Rows[0]["LclCurrency"].ToString();
        //    //Min_Cum_Royalty_KLcl = (double)Agreement_QA_Dt.Rows[0]["Min_Cum_Royalty_KLcl"];
        //    //Max_Cum_Royalty_KLcl = (double)Agreement_QA_Dt.Rows[0]["Max_Cum_Royalty_KLcl"];



        //    //// Loop
        //    //// -----------------------------------
        //    //for (int RowI = 0; RowI <= Royalty_QA_Dt.Rows.Count - 1; RowI++)
        //    //{
        //    //    // Dati iniziali 
        //    //    // -----------------------------------
        //    //    Condition = "";
        //    //    ExchangeRate = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["ExchangeRate"]), 4);
        //    //    if (ExchangeRate == 0) { ExchangeRate = 1; }

        //    //    RevLcl = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Net_Revenue_KLcl"]), 4);
        //    //    RevLclH = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Cum_Net_Revenue_KLcl"]), 4);
        //    //    RevLclL = RevLclH - RevLcl;
        //    //    Qty = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Net_qty_Kpcs"]), 3);
        //    //    QtyH = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Cum_Net_qty_Kpcs"]), 3);
        //    //    QtyL = QtyH - Qty;
        //    //    RoyLcl = 0;
        //    //    RoyUSD = 0;
        //    //    RoyPaidLcl = 0;
        //    //    RoyPaidUSD = 0;
        //    //    Rate_Lcl_per_pcs = 0;
        //    //    Rate_USD_per_pcs = 0;
        //    //    Rate_Rev_percent = 0;

        //    //    if (RowI == 0)
        //    //    {
        //    //        RoyLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_Royalty_KLcl"]), 4);
        //    //        RoyUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_Royalty_KUSD"]), 4);
        //    //        RoyPaidLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_RoyaltyPaid_KLcl"]), 4);
        //    //        RoyPaidUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_RoyaltyPaid_KUSD"]), 4);
        //    //    }
        //    //    else
        //    //    {
        //    //        RoyLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_Royalty_KLcl"]), 4);
        //    //        RoyUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_Royalty_KUSD"]), 4);
        //    //        RoyPaidLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_RoyaltyPaid_KLcl"]), 4);
        //    //        RoyPaidUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_RoyaltyPaid_KUSD"]), 4);
        //    //    }

        //    //    // Condition
        //    //    // -----------------------------------
        //    //    if (RevLclL < Limit1) { ConditionL = Condition1; }
        //    //    else if (RevLclL >= Limit1 && RevLclL < Limit2) { ConditionL = Condition2; }
        //    //    else if (RevLclL >= Limit2 && RevLclL < Limit3) { ConditionL = Condition3; }
        //    //    else if (RevLclL >= Limit3 && RevLclL < Limit4) { ConditionL = Condition4; }
        //    //    else if (RevLclL >= Limit4 && RevLclL < Limit5) { ConditionL = Condition5; }
        //    //    else if (RevLclL >= Limit5 && RevLclL < Limit6) { ConditionL = Condition6; }
        //    //    else if (RevLclL >= Limit6) { ConditionL = "Over"; }
        //    //    else { ConditionL = "ERR"; }

        //    //    if (RevLclH < Limit1) { ConditionH = Condition1; }
        //    //    else if (RevLclH >= Limit1 && RevLclH < Limit2) { ConditionH = Condition2; }
        //    //    else if (RevLclH >= Limit2 && RevLclH < Limit3) { ConditionH = Condition3; }
        //    //    else if (RevLclH >= Limit3 && RevLclH < Limit4) { ConditionH = Condition4; }
        //    //    else if (RevLclH >= Limit4 && RevLclH < Limit5) { ConditionH = Condition5; }
        //    //    else if (RevLclH >= Limit5 && RevLclH < Limit6) { ConditionH = Condition6; }
        //    //    else if (RevLclH >= Limit6) { ConditionL = "Over"; }
        //    //    else { ConditionL = "ERR"; }

        //    //    if (string.Equals(ConditionL, ConditionH))
        //    //    {
        //    //        Condition = ConditionL;
        //    //    }
        //    //    else
        //    //    {
        //    //        Condition = ConditionL + " -> " + ConditionH;
        //    //    }

        //    //    // Revenue
        //    //    // -----------------------------------
        //    //    RevLcl1 = 0;
        //    //    RevLcl2 = 0;
        //    //    RevLcl3 = 0;
        //    //    RevLcl4 = 0;
        //    //    RevLcl5 = 0;
        //    //    RevLcl6 = 0;
        //    //    RevLclOver = 0;

        //    //    if (RevLcl >= 0)
        //    //    {
        //    //        if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition1)) { RevLcl1 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition2)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = RevLclH - Limit1; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition3)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = RevLclH - Limit2; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition4)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = Limit3 - Limit2; RevLcl4 = RevLclH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition5)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = RevLclH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition6)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, "Over")) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition2)) { RevLcl2 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition3)) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = RevLclH - Limit2; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition4)) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = Limit3 - Limit2; RevLcl4 = RevLclH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition5)) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = RevLclH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition6)) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, "Over")) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition3)) { RevLcl3 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition4)) { RevLcl3 = Limit3 - RevLclL; RevLcl4 = RevLclH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition5)) { RevLcl3 = Limit3 - RevLclL; RevLcl4 = Limit4 - Limit3; RevLcl5 = RevLclH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition6)) { RevLcl3 = Limit3 - RevLclL; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, "Over")) { RevLcl3 = Limit3 - RevLclL; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition4)) { RevLcl4 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition5)) { RevLcl4 = Limit4 - RevLclL; RevLcl5 = RevLclH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition6)) { RevLcl4 = Limit4 - RevLclL; RevLcl5 = Limit5 - Limit4; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, "Over")) { RevLcl4 = Limit4 - RevLclL; RevLcl5 = Limit5 - Limit4; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, Condition5)) { RevLcl5 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, Condition6)) { RevLcl5 = Limit5 - RevLclL; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, "Over")) { RevLcl5 = Limit5 - RevLclL; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition6) && string.Equals(ConditionH, Condition6)) { RevLcl6 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition6) && string.Equals(ConditionH, "Over")) { RevLcl6 = Limit6 - RevLclL; RevLclOver = RevLclH - Limit6; }

        //    //        else { RevLclOver = RevLclH - RevLclL; }

        //    //    }
        //    //    else
        //    //    {
        //    //        if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition1)) { RevLcl1 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition2)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(RevLclL - Limit1); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition3)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(RevLclL - Limit2); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition4)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(RevLclL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition5)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(RevLclL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition6)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, "Over")) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition2)) { RevLcl2 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition3)) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(RevLclL - Limit2); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition4)) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(RevLclL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition5)) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(RevLclL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition6)) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, "Over")) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition3)) { RevLcl3 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition4)) { RevLcl3 = -(Limit3 - RevLclH); RevLcl4 = -(RevLclL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition5)) { RevLcl3 = -(Limit3 - RevLclH); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(RevLclL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition6)) { RevLcl3 = -(Limit3 - RevLclH); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, "Over")) { RevLcl3 = -(Limit3 - RevLclH); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition4)) { RevLcl4 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition5)) { RevLcl4 = -(Limit4 - RevLclH); RevLcl5 = -(RevLclL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition6)) { RevLcl4 = -(Limit4 - RevLclH); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, "Over")) { RevLcl4 = -(Limit4 - RevLclH); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, Condition5)) { RevLcl5 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, Condition6)) { RevLcl5 = -(Limit5 - RevLclH); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, "Over")) { RevLcl5 = -(Limit5 - RevLclH); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition6) && string.Equals(ConditionL, Condition6)) { RevLcl6 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition6) && string.Equals(ConditionL, "Over")) { RevLcl6 = -(Limit6 - RevLclH); RevLclOver = -(RevLclL - Limit6); }

        //    //        else { RevLclOver = RevLclH - RevLclL; }

        //    //    }

        //    //    // Quantity
        //    //    // -----------------------------------
        //    //    if (RevLcl != 0 && Qty != 0)
        //    //    {
        //    //        Qty1 = Qty * RevLcl1 / RevLcl;
        //    //        Qty2 = Qty * RevLcl2 / RevLcl;
        //    //        Qty3 = Qty * RevLcl3 / RevLcl;
        //    //        Qty4 = Qty * RevLcl4 / RevLcl;
        //    //        Qty5 = Qty * RevLcl5 / RevLcl;
        //    //        Qty6 = Qty * RevLcl6 / RevLcl;
        //    //        QtyOver = Qty * RevLclOver / RevLcl;
        //    //    }
        //    //    else if (RevLcl != 0 && Qty == 0)
        //    //    {
        //    //        Qty1 = 0;
        //    //        Qty2 = 0;
        //    //        Qty3 = 0;
        //    //        Qty4 = 0;
        //    //        Qty5 = 0;
        //    //        Qty6 = 0;
        //    //        QtyOver = 0;
        //    //    }
        //    //    else if (RevLcl == 0 && Qty != 0)
        //    //    {
        //    //        Qty1 = 0;
        //    //        Qty2 = 0;
        //    //        Qty3 = 0;
        //    //        Qty4 = 0;
        //    //        Qty5 = 0;
        //    //        Qty6 = 0;
        //    //        QtyOver = 0;

        //    //        if (string.Equals(Condition, Condition1)) { Qty1 = Qty; }
        //    //        else if (string.Equals(Condition, Condition2)) { Qty2 = Qty; }
        //    //        else if (string.Equals(Condition, Condition3)) { Qty3 = Qty; }
        //    //        else if (string.Equals(Condition, Condition4)) { Qty4 = Qty; }
        //    //        else if (string.Equals(Condition, Condition5)) { Qty5 = Qty; }
        //    //        else if (string.Equals(Condition, Condition6)) { Qty6 = Qty; }
        //    //        else { QtyOver = Qty; }
        //    //    }
        //    //    else
        //    //    {
        //    //        Qty1 = 0;
        //    //        Qty2 = 0;
        //    //        Qty3 = 0;
        //    //        Qty4 = 0;
        //    //        Qty5 = 0;
        //    //        Qty6 = 0;
        //    //        QtyOver = 0;
        //    //    }


        //    //    // ASP Tot
        //    //    // -----------------------------------
        //    //    RevLclTot = Math.Round((double)Royalty_QA_Dt.Compute("Sum(Net_Revenue_KLcl)", ""), 4);
        //    //    QtyTot = Math.Round((double)Royalty_QA_Dt.Compute("Sum(Net_qty_Kpcs)", ""), 3);
        //    //    if (QtyTot != 0) { ASPLclTot = RevLclTot / QtyTot; } else { ASPLclTot = 0; }


        //    //    // RateOnRev
        //    //    // -----------------------------------
        //    //    RateOnRev1 = Rate1;
        //    //    RateOnRev2 = Rate2;
        //    //    RateOnRev3 = Rate3;
        //    //    RateOnRev4 = Rate4;
        //    //    RateOnRev5 = Rate5;
        //    //    RateOnRev6 = Rate6;
        //    //    RateOnRevOver = RateOver;


        //    //    // RateOnPcs
        //    //    // -----------------------------------
        //    //    RateOnPcs1 = ASPLclTot * RateOnRev1;
        //    //    RateOnPcs2 = ASPLclTot * RateOnRev2;
        //    //    RateOnPcs3 = ASPLclTot * RateOnRev3;
        //    //    RateOnPcs4 = ASPLclTot * RateOnRev4;
        //    //    RateOnPcs5 = ASPLclTot * RateOnRev5;
        //    //    RateOnPcs6 = ASPLclTot * RateOnRev6;
        //    //    RateOnPcsOver = ASPLclTot * RateOnRevOver;

        //    //    // Check Min/Max
        //    //    // -----------------------------------
        //    //    if (RateOnPcs1 < Min1) { RateOnPcs1 = Min1; } else if (RateOnPcs1 > Max1) { RateOnPcs1 = Max1; }
        //    //    if (RateOnPcs2 < Min2) { RateOnPcs2 = Min2; } else if (RateOnPcs2 > Max2) { RateOnPcs2 = Max2; }
        //    //    if (RateOnPcs3 < Min3) { RateOnPcs3 = Min3; } else if (RateOnPcs3 > Max3) { RateOnPcs3 = Max3; }
        //    //    if (RateOnPcs4 < Min4) { RateOnPcs4 = Min4; } else if (RateOnPcs4 > Max4) { RateOnPcs4 = Max4; }
        //    //    if (RateOnPcs5 < Min5) { RateOnPcs5 = Min5; } else if (RateOnPcs5 > Max5) { RateOnPcs5 = Max5; }
        //    //    if (RateOnPcs6 < Min6) { RateOnPcs6 = Min6; } else if (RateOnPcs6 > Max6) { RateOnPcs6 = Max6; }
        //    //    if (RateOnPcsOver < MinOver) { RateOnPcsOver = MinOver; } else if (RateOnPcsOver > MaxOver) { RateOnPcsOver = MaxOver; }

        //    //    // Roy finale
        //    //    // -----------------------------------
        //    //    // Roy1
        //    //    RoyLcl1 = RateOnPcs1 * Qty1;
        //    //    RoyLcl2 = RateOnPcs2 * Qty2;
        //    //    RoyLcl3 = RateOnPcs3 * Qty3;
        //    //    RoyLcl4 = RateOnPcs4 * Qty4;
        //    //    RoyLcl5 = RateOnPcs5 * Qty5;
        //    //    RoyLcl6 = RateOnPcs6 * Qty6;
        //    //    RoyLclOver = RateOnPcsOver * QtyOver;


        //    //    RoyLcl = RoyLcl1 + RoyLcl2 + RoyLcl3 + RoyLcl4 + RoyLcl5 + RoyLcl6 + RoyLclOver;
        //    //    RoyLclH = RoyLclL + RoyLcl;
        //    //    RoyUSD = RoyLcl * ExchangeRate;
        //    //    RoyUSDH = RoyUSDL + RoyUSD;


        //    //    // Roy Paid
        //    //    // -----------------------------------
        //    //    if (RoyLcl >= 0)
        //    //    {
        //    //        if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH < Min_Cum_Royalty_KLcl) { RoyPaidLcl = 0; }
        //    //        else if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLclH - Min_Cum_Royalty_KLcl; }
        //    //        else if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = Max_Cum_Royalty_KLcl - Min_Cum_Royalty_KLcl; }
        //    //        else if (RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl && RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLcl; }
        //    //        else if (RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl && RoyLclH >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = Max_Cum_Royalty_KLcl - RoyLclL; }
        //    //        else { RoyPaidLcl = 0; }
        //    //    }
        //    //    else
        //    //    {
        //    //        if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL < Min_Cum_Royalty_KLcl) { RoyPaidLcl = 0; }
        //    //        else if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(RoyLclL - Min_Cum_Royalty_KLcl); }
        //    //        else if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(Max_Cum_Royalty_KLcl - Min_Cum_Royalty_KLcl); }
        //    //        else if (RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl && RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLcl; }
        //    //        else if (RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl && RoyLclL >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(Max_Cum_Royalty_KLcl - RoyLclL); }
        //    //        else { RoyPaidLcl = 0; }
        //    //    }
        //    //    RoyPaidLclH = RoyPaidLclL + RoyPaidLcl;
        //    //    RoyPaidUSD = RoyPaidLcl * ExchangeRate;
        //    //    RoyPaidUSDH = RoyPaidUSDL + RoyPaidUSD;

        //    //    // Rate
        //    //    // -----------------------------------
        //    //    if (Qty != 0) { Rate_Lcl_per_pcs = RoyLcl / Qty; } else { Rate_Lcl_per_pcs = 0; }
        //    //    if (Qty != 0) { Rate_USD_per_pcs = RoyUSD / Qty; } else { Rate_USD_per_pcs = 0; }
        //    //    if (RevLcl != 0) { Rate_Rev_percent = RoyLcl / RevLcl; } else { Rate_Rev_percent = 0; }

        //    //    // Salva i dati i RoyaltyQ
        //    //    // -----------------------------------
        //    //    Royalty_QA_Dt.Rows[RowI]["Condition"] = Condition;
        //    //    Royalty_QA_Dt.Rows[RowI]["Royalty_KLcl"] = Math.Round(RoyLcl, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_Royalty_KLcl"] = Math.Round(RoyLclH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Royalty_KUSD"] = Math.Round(RoyUSD, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_Royalty_KUSD"] = Math.Round(RoyUSDH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["RoyaltyPaid_KLcl"] = Math.Round(RoyPaidLcl, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_RoyaltyPaid_KLcl"] = Math.Round(RoyPaidLclH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["RoyaltyPaid_KUSD"] = Math.Round(RoyPaidUSD, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_RoyaltyPaid_KUSD"] = Math.Round(RoyPaidUSDH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_Lcl_per_pcs"] = Rate_Lcl_per_pcs;
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_USD_per_pcs"] = Rate_USD_per_pcs;
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_Rev_percent"] = Rate_Rev_percent;

        //    //}

        //}




        //public void M05_SLOTrev_RATEqty_MINMAXrev(ref DataTable RuleOne_Dt, ref DataTable Royalty_OneRule_OneQuarter_Dt)
        //{
        //    // ****************************************************
        //    // MODELLO 05
        //    // SLOT: su Revenue
        //    // RATE: su Quantitye
        //    // MIN/MAX RATE: su Revenue
        //    //
        //    // ESEMPIO: 
        //    //


        //    // Variabili interne
        //    // -----------------------------------
        //    string AGREEMENT_ID = "";
        //    string AGREEMENT = "";
        //    string VERSION_DATE = "";
        //    string VERSION_DESCR = "";
        //    string MODEL_ACTIVE = "";
        //    string MODEL_INITIAL_MONTH = "";
        //    string MODEL_FINAL_MONTH = "";
        //    string MODEL_TYPE = "";
        //    string MODEL_CURRENCY = "";
        //    double MODEL_NB_SLOT = 0;
        //    double MODEL_MIN_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MIN_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MIN_EACH_QUARTER_ROYALTY = 0;
        //    double MODEL_MAX_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MAX_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MAX_EACH_QUARTER_ROYALTY = 0;
        //    string SELECTION_PL_LIST = "";
        //    string SELECTION_CP_LIST = "";
        //    string SELECTION_CP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = "";
        //    string SLOT01_MESSAGE = "";
        //    double SLOT01_START = 0;
        //    double SLOT01_END = 0;
        //    double SLOT01_RATE = 0;
        //    double SLOT01_MIN = 0;
        //    double SLOT01_MAX = 0;
        //    string SLOT01_A = "";
        //    string SLOT01_B = "";
        //    string SLOT01_C = "";
        //    string SLOT01_D = "";
        //    string SLOT01_E = "";
        //    string SLOT01_F = "";
        //    string SLOT01_G = "";
        //    string SLOT01_H = "";
        //    string SLOT02_MESSAGE = "";
        //    double SLOT02_START = 0;
        //    double SLOT02_END = 0;
        //    double SLOT02_RATE = 0;
        //    double SLOT02_MIN = 0;
        //    double SLOT02_MAX = 0;
        //    string SLOT02_A = "";
        //    string SLOT02_B = "";
        //    string SLOT02_C = "";
        //    string SLOT02_D = "";
        //    string SLOT02_E = "";
        //    string SLOT02_F = "";
        //    string SLOT02_G = "";
        //    string SLOT02_H = "";
        //    string SLOT03_MESSAGE = "";
        //    double SLOT03_START = 0;
        //    double SLOT03_END = 0;
        //    double SLOT03_RATE = 0;
        //    double SLOT03_MIN = 0;
        //    double SLOT03_MAX = 0;
        //    string SLOT03_A = "";
        //    string SLOT03_B = "";
        //    string SLOT03_C = "";
        //    string SLOT03_D = "";
        //    string SLOT03_E = "";
        //    string SLOT03_F = "";
        //    string SLOT03_G = "";
        //    string SLOT03_H = "";
        //    string SLOT04_MESSAGE = "";
        //    double SLOT04_START = 0;
        //    double SLOT04_END = 0;
        //    double SLOT04_RATE = 0;
        //    double SLOT04_MIN = 0;
        //    double SLOT04_MAX = 0;
        //    string SLOT04_A = "";
        //    string SLOT04_B = "";
        //    string SLOT04_C = "";
        //    string SLOT04_D = "";
        //    string SLOT04_E = "";
        //    string SLOT04_F = "";
        //    string SLOT04_G = "";
        //    string SLOT04_H = "";
        //    string SLOT05_MESSAGE = "";
        //    double SLOT05_START = 0;
        //    double SLOT05_END = 0;
        //    double SLOT05_RATE = 0;
        //    double SLOT05_MIN = 0;
        //    double SLOT05_MAX = 0;
        //    string SLOT05_A = "";
        //    string SLOT05_B = "";
        //    string SLOT05_C = "";
        //    string SLOT05_D = "";
        //    string SLOT05_E = "";
        //    string SLOT05_F = "";
        //    string SLOT05_G = "";
        //    string SLOT05_H = "";
        //    string SLOT06_MESSAGE = "";
        //    double SLOT06_START = 0;
        //    double SLOT06_END = 0;
        //    double SLOT06_RATE = 0;
        //    double SLOT06_MIN = 0;
        //    double SLOT06_MAX = 0;
        //    string SLOT06_A = "";
        //    string SLOT06_B = "";
        //    string SLOT06_C = "";
        //    string SLOT06_D = "";
        //    string SLOT06_E = "";
        //    string SLOT06_F = "";
        //    string SLOT06_G = "";
        //    string SLOT06_H = "";
        //    string SLOT07_MESSAGE = "";
        //    double SLOT07_START = 0;
        //    double SLOT07_END = 0;
        //    double SLOT07_RATE = 0;
        //    double SLOT07_MIN = 0;
        //    double SLOT07_MAX = 0;
        //    string SLOT07_A = "";
        //    string SLOT07_B = "";
        //    string SLOT07_C = "";
        //    string SLOT07_D = "";
        //    string SLOT07_E = "";
        //    string SLOT07_F = "";
        //    string SLOT07_G = "";
        //    string SLOT07_H = "";
        //    string SLOT08_MESSAGE = "";
        //    double SLOT08_START = 0;
        //    double SLOT08_END = 0;
        //    double SLOT08_RATE = 0;
        //    double SLOT08_MIN = 0;
        //    double SLOT08_MAX = 0;
        //    string SLOT08_A = "";
        //    string SLOT08_B = "";
        //    string SLOT08_C = "";
        //    string SLOT08_D = "";
        //    string SLOT08_E = "";
        //    string SLOT08_F = "";
        //    string SLOT08_G = "";
        //    string SLOT08_H = "";
        //    string SLOT09_MESSAGE = "";
        //    double SLOT09_START = 0;
        //    double SLOT09_END = 0;
        //    double SLOT09_RATE = 0;
        //    double SLOT09_MIN = 0;
        //    double SLOT09_MAX = 0;
        //    string SLOT09_A = "";
        //    string SLOT09_B = "";
        //    string SLOT09_C = "";
        //    string SLOT09_D = "";
        //    string SLOT09_E = "";
        //    string SLOT09_F = "";
        //    string SLOT09_G = "";
        //    string SLOT09_H = "";
        //    string SLOT10_MESSAGE = "";
        //    double SLOT10_START = 0;
        //    double SLOT10_END = 0;
        //    double SLOT10_RATE = 0;
        //    double SLOT10_MIN = 0;
        //    double SLOT10_MAX = 0;
        //    string SLOT10_A = "";
        //    string SLOT10_B = "";
        //    string SLOT10_C = "";
        //    string SLOT10_D = "";
        //    string SLOT10_E = "";
        //    string SLOT10_F = "";
        //    string SLOT10_G = "";
        //    string SLOT10_H = "";

        //    double NET_QTY_PCS = 0;
        //    double CUM_NET_QTY_PCS = 0;
        //    double NET_REVENUE_LCL = 0;
        //    double CUM_NET_REVENUE_LCL = 0;
        //    double NET_QTY_TOT_PCS = 0;
        //    double NET_REVENUE_TOT_LCL = 0;
        //    double ASPLcl_TOT = 0;

        //    double Qty = 0;
        //    double Qty_Start = 0;
        //    double Qty_End = 0;
        //    double Qty_01 = 0;
        //    double Qty_02 = 0;
        //    double Qty_03 = 0;
        //    double Qty_04 = 0;
        //    double Qty_05 = 0;
        //    double Qty_06 = 0;
        //    double Qty_07 = 0;
        //    double Qty_08 = 0;
        //    double Qty_09 = 0;
        //    double Qty_10 = 0;

        //    double RevLcl = 0;
        //    double RevLcl_Start = 0;
        //    double RevLcl_End = 0;
        //    double RevLcl_01 = 0;
        //    double RevLcl_02 = 0;
        //    double RevLcl_03 = 0;
        //    double RevLcl_04 = 0;
        //    double RevLcl_05 = 0;
        //    double RevLcl_06 = 0;
        //    double RevLcl_07 = 0;
        //    double RevLcl_08 = 0;
        //    double RevLcl_09 = 0;
        //    double RevLcl_10 = 0;

        //    string Slot_Start = "";
        //    string Slot_End = "";

        //    string Condition_Start = "";
        //    string Condition_End = "";
        //    string Condition = "";


        //    // Estrae i dati della Rule
        //    // -----------------------------------
        //    AGREEMENT_ID = (string)RuleOne_Dt.Rows[0]["AGREEMENT_ID"];
        //    AGREEMENT = (string)RuleOne_Dt.Rows[0]["AGREEMENT"];
        //    VERSION_DATE = (string)RuleOne_Dt.Rows[0]["VERSION_DATE"];
        //    VERSION_DESCR = (string)RuleOne_Dt.Rows[0]["VERSION_DESCR"];
        //    MODEL_ACTIVE = (string)RuleOne_Dt.Rows[0]["MODEL_ACTIVE"];
        //    MODEL_INITIAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_INITIAL_MONTH"];
        //    MODEL_FINAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_FINAL_MONTH"];
        //    MODEL_TYPE = (string)RuleOne_Dt.Rows[0]["MODEL_TYPE"];
        //    MODEL_CURRENCY = (string)RuleOne_Dt.Rows[0]["MODEL_CURRENCY"];
        //    MODEL_NB_SLOT = (double)RuleOne_Dt.Rows[0]["MODEL_NB_SLOT"];
        //    MODEL_MIN_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_ACCUMULATED_ROYALTY"];
        //    MODEL_MIN_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_YEAR_ROYALTY"];
        //    MODEL_MIN_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_QUARTER_ROYALTY"];
        //    MODEL_MAX_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_ACCUMULATED_ROYALTY"];
        //    MODEL_MAX_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_YEAR_ROYALTY"];
        //    MODEL_MAX_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_QUARTER_ROYALTY"];
        //    SELECTION_PL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_PL_LIST"];
        //    SELECTION_CP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_LIST"];
        //    SELECTION_CP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_LIST"];
        //    SELECTION_CUSTOMER_FINAL_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_LIST"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_LIST"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_LIST"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION"];
        //    SLOT01_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT01_MESSAGE"];
        //    SLOT01_START = (double)RuleOne_Dt.Rows[0]["SLOT01_START"];
        //    SLOT01_END = (double)RuleOne_Dt.Rows[0]["SLOT01_END"];
        //    SLOT01_RATE = (double)RuleOne_Dt.Rows[0]["SLOT01_RATE"];
        //    SLOT01_MIN = (double)RuleOne_Dt.Rows[0]["SLOT01_MIN"];
        //    SLOT01_MAX = (double)RuleOne_Dt.Rows[0]["SLOT01_MAX"];
        //    SLOT01_A = (string)RuleOne_Dt.Rows[0]["SLOT01_A"];
        //    SLOT01_B = (string)RuleOne_Dt.Rows[0]["SLOT01_B"];
        //    SLOT01_C = (string)RuleOne_Dt.Rows[0]["SLOT01_C"];
        //    SLOT01_D = (string)RuleOne_Dt.Rows[0]["SLOT01_D"];
        //    SLOT01_E = (string)RuleOne_Dt.Rows[0]["SLOT01_E"];
        //    SLOT01_F = (string)RuleOne_Dt.Rows[0]["SLOT01_F"];
        //    SLOT01_G = (string)RuleOne_Dt.Rows[0]["SLOT01_G"];
        //    SLOT01_H = (string)RuleOne_Dt.Rows[0]["SLOT01_H"];
        //    SLOT02_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT02_MESSAGE"];
        //    SLOT02_START = (double)RuleOne_Dt.Rows[0]["SLOT02_START"];
        //    SLOT02_END = (double)RuleOne_Dt.Rows[0]["SLOT02_END"];
        //    SLOT02_RATE = (double)RuleOne_Dt.Rows[0]["SLOT02_RATE"];
        //    SLOT02_MIN = (double)RuleOne_Dt.Rows[0]["SLOT02_MIN"];
        //    SLOT02_MAX = (double)RuleOne_Dt.Rows[0]["SLOT02_MAX"];
        //    SLOT02_A = (string)RuleOne_Dt.Rows[0]["SLOT02_A"];
        //    SLOT02_B = (string)RuleOne_Dt.Rows[0]["SLOT02_B"];
        //    SLOT02_C = (string)RuleOne_Dt.Rows[0]["SLOT02_C"];
        //    SLOT02_D = (string)RuleOne_Dt.Rows[0]["SLOT02_D"];
        //    SLOT02_E = (string)RuleOne_Dt.Rows[0]["SLOT02_E"];
        //    SLOT02_F = (string)RuleOne_Dt.Rows[0]["SLOT02_F"];
        //    SLOT02_G = (string)RuleOne_Dt.Rows[0]["SLOT02_G"];
        //    SLOT02_H = (string)RuleOne_Dt.Rows[0]["SLOT02_H"];
        //    SLOT03_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT03_MESSAGE"];
        //    SLOT03_START = (double)RuleOne_Dt.Rows[0]["SLOT03_START"];
        //    SLOT03_END = (double)RuleOne_Dt.Rows[0]["SLOT03_END"];
        //    SLOT03_RATE = (double)RuleOne_Dt.Rows[0]["SLOT03_RATE"];
        //    SLOT03_MIN = (double)RuleOne_Dt.Rows[0]["SLOT03_MIN"];
        //    SLOT03_MAX = (double)RuleOne_Dt.Rows[0]["SLOT03_MAX"];
        //    SLOT03_A = (string)RuleOne_Dt.Rows[0]["SLOT03_A"];
        //    SLOT03_B = (string)RuleOne_Dt.Rows[0]["SLOT03_B"];
        //    SLOT03_C = (string)RuleOne_Dt.Rows[0]["SLOT03_C"];
        //    SLOT03_D = (string)RuleOne_Dt.Rows[0]["SLOT03_D"];
        //    SLOT03_E = (string)RuleOne_Dt.Rows[0]["SLOT03_E"];
        //    SLOT03_F = (string)RuleOne_Dt.Rows[0]["SLOT03_F"];
        //    SLOT03_G = (string)RuleOne_Dt.Rows[0]["SLOT03_G"];
        //    SLOT03_H = (string)RuleOne_Dt.Rows[0]["SLOT03_H"];
        //    SLOT04_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT04_MESSAGE"];
        //    SLOT04_START = (double)RuleOne_Dt.Rows[0]["SLOT04_START"];
        //    SLOT04_END = (double)RuleOne_Dt.Rows[0]["SLOT04_END"];
        //    SLOT04_RATE = (double)RuleOne_Dt.Rows[0]["SLOT04_RATE"];
        //    SLOT04_MIN = (double)RuleOne_Dt.Rows[0]["SLOT04_MIN"];
        //    SLOT04_MAX = (double)RuleOne_Dt.Rows[0]["SLOT04_MAX"];
        //    SLOT04_A = (string)RuleOne_Dt.Rows[0]["SLOT04_A"];
        //    SLOT04_B = (string)RuleOne_Dt.Rows[0]["SLOT04_B"];
        //    SLOT04_C = (string)RuleOne_Dt.Rows[0]["SLOT04_C"];
        //    SLOT04_D = (string)RuleOne_Dt.Rows[0]["SLOT04_D"];
        //    SLOT04_E = (string)RuleOne_Dt.Rows[0]["SLOT04_E"];
        //    SLOT04_F = (string)RuleOne_Dt.Rows[0]["SLOT04_F"];
        //    SLOT04_G = (string)RuleOne_Dt.Rows[0]["SLOT04_G"];
        //    SLOT04_H = (string)RuleOne_Dt.Rows[0]["SLOT04_H"];
        //    SLOT05_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT05_MESSAGE"];
        //    SLOT05_START = (double)RuleOne_Dt.Rows[0]["SLOT05_START"];
        //    SLOT05_END = (double)RuleOne_Dt.Rows[0]["SLOT05_END"];
        //    SLOT05_RATE = (double)RuleOne_Dt.Rows[0]["SLOT05_RATE"];
        //    SLOT05_MIN = (double)RuleOne_Dt.Rows[0]["SLOT05_MIN"];
        //    SLOT05_MAX = (double)RuleOne_Dt.Rows[0]["SLOT05_MAX"];
        //    SLOT05_A = (string)RuleOne_Dt.Rows[0]["SLOT05_A"];
        //    SLOT05_B = (string)RuleOne_Dt.Rows[0]["SLOT05_B"];
        //    SLOT05_C = (string)RuleOne_Dt.Rows[0]["SLOT05_C"];
        //    SLOT05_D = (string)RuleOne_Dt.Rows[0]["SLOT05_D"];
        //    SLOT05_E = (string)RuleOne_Dt.Rows[0]["SLOT05_E"];
        //    SLOT05_F = (string)RuleOne_Dt.Rows[0]["SLOT05_F"];
        //    SLOT05_G = (string)RuleOne_Dt.Rows[0]["SLOT05_G"];
        //    SLOT05_H = (string)RuleOne_Dt.Rows[0]["SLOT05_H"];
        //    SLOT06_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT06_MESSAGE"];
        //    SLOT06_START = (double)RuleOne_Dt.Rows[0]["SLOT06_START"];
        //    SLOT06_END = (double)RuleOne_Dt.Rows[0]["SLOT06_END"];
        //    SLOT06_RATE = (double)RuleOne_Dt.Rows[0]["SLOT06_RATE"];
        //    SLOT06_MIN = (double)RuleOne_Dt.Rows[0]["SLOT06_MIN"];
        //    SLOT06_MAX = (double)RuleOne_Dt.Rows[0]["SLOT06_MAX"];
        //    SLOT06_A = (string)RuleOne_Dt.Rows[0]["SLOT06_A"];
        //    SLOT06_B = (string)RuleOne_Dt.Rows[0]["SLOT06_B"];
        //    SLOT06_C = (string)RuleOne_Dt.Rows[0]["SLOT06_C"];
        //    SLOT06_D = (string)RuleOne_Dt.Rows[0]["SLOT06_D"];
        //    SLOT06_E = (string)RuleOne_Dt.Rows[0]["SLOT06_E"];
        //    SLOT06_F = (string)RuleOne_Dt.Rows[0]["SLOT06_F"];
        //    SLOT06_G = (string)RuleOne_Dt.Rows[0]["SLOT06_G"];
        //    SLOT06_H = (string)RuleOne_Dt.Rows[0]["SLOT06_H"];
        //    SLOT07_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT07_MESSAGE"];
        //    SLOT07_START = (double)RuleOne_Dt.Rows[0]["SLOT07_START"];
        //    SLOT07_END = (double)RuleOne_Dt.Rows[0]["SLOT07_END"];
        //    SLOT07_RATE = (double)RuleOne_Dt.Rows[0]["SLOT07_RATE"];
        //    SLOT07_MIN = (double)RuleOne_Dt.Rows[0]["SLOT07_MIN"];
        //    SLOT07_MAX = (double)RuleOne_Dt.Rows[0]["SLOT07_MAX"];
        //    SLOT07_A = (string)RuleOne_Dt.Rows[0]["SLOT07_A"];
        //    SLOT07_B = (string)RuleOne_Dt.Rows[0]["SLOT07_B"];
        //    SLOT07_C = (string)RuleOne_Dt.Rows[0]["SLOT07_C"];
        //    SLOT07_D = (string)RuleOne_Dt.Rows[0]["SLOT07_D"];
        //    SLOT07_E = (string)RuleOne_Dt.Rows[0]["SLOT07_E"];
        //    SLOT07_F = (string)RuleOne_Dt.Rows[0]["SLOT07_F"];
        //    SLOT07_G = (string)RuleOne_Dt.Rows[0]["SLOT07_G"];
        //    SLOT07_H = (string)RuleOne_Dt.Rows[0]["SLOT07_H"];
        //    SLOT08_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT08_MESSAGE"];
        //    SLOT08_START = (double)RuleOne_Dt.Rows[0]["SLOT08_START"];
        //    SLOT08_END = (double)RuleOne_Dt.Rows[0]["SLOT08_END"];
        //    SLOT08_RATE = (double)RuleOne_Dt.Rows[0]["SLOT08_RATE"];
        //    SLOT08_MIN = (double)RuleOne_Dt.Rows[0]["SLOT08_MIN"];
        //    SLOT08_MAX = (double)RuleOne_Dt.Rows[0]["SLOT08_MAX"];
        //    SLOT08_A = (string)RuleOne_Dt.Rows[0]["SLOT08_A"];
        //    SLOT08_B = (string)RuleOne_Dt.Rows[0]["SLOT08_B"];
        //    SLOT08_C = (string)RuleOne_Dt.Rows[0]["SLOT08_C"];
        //    SLOT08_D = (string)RuleOne_Dt.Rows[0]["SLOT08_D"];
        //    SLOT08_E = (string)RuleOne_Dt.Rows[0]["SLOT08_E"];
        //    SLOT08_F = (string)RuleOne_Dt.Rows[0]["SLOT08_F"];
        //    SLOT08_G = (string)RuleOne_Dt.Rows[0]["SLOT08_G"];
        //    SLOT08_H = (string)RuleOne_Dt.Rows[0]["SLOT08_H"];
        //    SLOT09_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT09_MESSAGE"];
        //    SLOT09_START = (double)RuleOne_Dt.Rows[0]["SLOT09_START"];
        //    SLOT09_END = (double)RuleOne_Dt.Rows[0]["SLOT09_END"];
        //    SLOT09_RATE = (double)RuleOne_Dt.Rows[0]["SLOT09_RATE"];
        //    SLOT09_MIN = (double)RuleOne_Dt.Rows[0]["SLOT09_MIN"];
        //    SLOT09_MAX = (double)RuleOne_Dt.Rows[0]["SLOT09_MAX"];
        //    SLOT09_A = (string)RuleOne_Dt.Rows[0]["SLOT09_A"];
        //    SLOT09_B = (string)RuleOne_Dt.Rows[0]["SLOT09_B"];
        //    SLOT09_C = (string)RuleOne_Dt.Rows[0]["SLOT09_C"];
        //    SLOT09_D = (string)RuleOne_Dt.Rows[0]["SLOT09_D"];
        //    SLOT09_E = (string)RuleOne_Dt.Rows[0]["SLOT09_E"];
        //    SLOT09_F = (string)RuleOne_Dt.Rows[0]["SLOT09_F"];
        //    SLOT09_G = (string)RuleOne_Dt.Rows[0]["SLOT09_G"];
        //    SLOT09_H = (string)RuleOne_Dt.Rows[0]["SLOT09_H"];
        //    SLOT10_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT10_MESSAGE"];
        //    SLOT10_START = (double)RuleOne_Dt.Rows[0]["SLOT10_START"];
        //    SLOT10_END = (double)RuleOne_Dt.Rows[0]["SLOT10_END"];
        //    SLOT10_RATE = (double)RuleOne_Dt.Rows[0]["SLOT10_RATE"];
        //    SLOT10_MIN = (double)RuleOne_Dt.Rows[0]["SLOT10_MIN"];
        //    SLOT10_MAX = (double)RuleOne_Dt.Rows[0]["SLOT10_MAX"];
        //    SLOT10_A = (string)RuleOne_Dt.Rows[0]["SLOT10_A"];
        //    SLOT10_B = (string)RuleOne_Dt.Rows[0]["SLOT10_B"];
        //    SLOT10_C = (string)RuleOne_Dt.Rows[0]["SLOT10_C"];
        //    SLOT10_D = (string)RuleOne_Dt.Rows[0]["SLOT10_D"];
        //    SLOT10_E = (string)RuleOne_Dt.Rows[0]["SLOT10_E"];
        //    SLOT10_F = (string)RuleOne_Dt.Rows[0]["SLOT10_F"];
        //    SLOT10_G = (string)RuleOne_Dt.Rows[0]["SLOT10_G"];
        //    SLOT10_H = (string)RuleOne_Dt.Rows[0]["SLOT10_H"];



        //    // Loop
        //    // -----------------------------------
        //    for (int i = 0; i < Royalty_OneRule_OneQuarter_Dt.Rows.Count; i++)
        //    {

        //        // Dati iniziali
        //        NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_QTY_PCS"]), 0);
        //        CUM_NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_QTY_PCS"]), 0);
        //        NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_REVENUE_LCL"]), 2);
        //        CUM_NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_REVENUE_LCL"]), 2);
        //        NET_QTY_TOT_PCS = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_QTY_PCS)", ""), 0);
        //        NET_REVENUE_TOT_LCL = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_REVENUE_LCL)", ""), 2);

        //        Qty = NET_QTY_PCS;
        //        Qty_End = CUM_NET_QTY_PCS;
        //        Qty_Start = Qty_End - Qty;

        //        RevLcl = NET_REVENUE_LCL;
        //        RevLcl_End = CUM_NET_REVENUE_LCL;
        //        RevLcl_Start = RevLcl_End - RevLcl;

        //        if (NET_QTY_TOT_PCS != 0)
        //        {
        //            ASPLcl_TOT = NET_REVENUE_TOT_LCL / NET_QTY_TOT_PCS;
        //        }
        //        else
        //        {
        //            ASPLcl_TOT = 0;
        //        }


        //        // Condition
        //        Condition_By_Rev(
        //            in RevLcl_Start,
        //            in RevLcl_End,
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT01_MESSAGE,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT02_MESSAGE,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT03_MESSAGE,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT04_MESSAGE,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT05_MESSAGE,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT06_MESSAGE,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT07_MESSAGE,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT08_MESSAGE,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT09_MESSAGE,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in SLOT10_MESSAGE,
        //            ref Condition_Start,
        //            ref Condition_End,
        //            ref Condition
        //            );


        //        // Quantity, Revenue
        //        Quantity_And_Revenue_By_Rev(
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in Qty,
        //            in Qty_Start,
        //            in Qty_End,
        //            ref Qty_01,
        //            ref Qty_02,
        //            ref Qty_03,
        //            ref Qty_04,
        //            ref Qty_05,
        //            ref Qty_06,
        //            ref Qty_07,
        //            ref Qty_08,
        //            ref Qty_09,
        //            ref Qty_10,
        //            ref RevLcl,
        //            ref RevLcl_End,
        //            ref RevLcl_Start,
        //            ref RevLcl_01,
        //            ref RevLcl_02,
        //            ref RevLcl_03,
        //            ref RevLcl_04,
        //            ref RevLcl_05,
        //            ref RevLcl_06,
        //            ref RevLcl_07,
        //            ref RevLcl_08,
        //            ref RevLcl_09,
        //            ref RevLcl_10);



        //    }








        //    //// Variabili interne
        //    //// -----------------------------------
        //    //double Id_Agreement = 0;
        //    //string Agreement = "";
        //    //string Model = "";
        //    //double Slot = 0;
        //    //string Agreement_Date_Start = "";
        //    //string Agreement_Date_End = "";
        //    //string PL_String = "";
        //    //string PL_Cond = "";
        //    //string CP_String = "";
        //    //string CP_Cond = "";
        //    //string Customer_String = "";
        //    //string Customer_Cond = "";
        //    //string Condition1 = "";
        //    //double Limit1 = 0;
        //    //double Rate1 = 0;
        //    //double Min1 = 0;
        //    //double Max1 = 0;
        //    //double Extra1A = 0;
        //    //double Extra1B = 0;
        //    //double Extra1C = 0;
        //    //double Extra1D = 0;
        //    //double Extra1E = 0;
        //    //double Extra1F = 0;
        //    //string Condition2 = "";
        //    //double Limit2 = 0;
        //    //double Rate2 = 0;
        //    //double Min2 = 0;
        //    //double Max2 = 0;
        //    //double Extra2A = 0;
        //    //double Extra2B = 0;
        //    //double Extra2C = 0;
        //    //double Extra2D = 0;
        //    //double Extra2E = 0;
        //    //double Extra2F = 0;
        //    //string Condition3 = "";
        //    //double Limit3 = 0;
        //    //double Rate3 = 0;
        //    //double Min3 = 0;
        //    //double Max3 = 0;
        //    //double Extra3A = 0;
        //    //double Extra3B = 0;
        //    //double Extra3C = 0;
        //    //double Extra3D = 0;
        //    //double Extra3E = 0;
        //    //double Extra3F = 0;
        //    //string Condition4 = "";
        //    //double Limit4 = 0;
        //    //double Rate4 = 0;
        //    //double Min4 = 0;
        //    //double Max4 = 0;
        //    //double Extra4A = 0;
        //    //double Extra4B = 0;
        //    //double Extra4C = 0;
        //    //double Extra4D = 0;
        //    //double Extra4E = 0;
        //    //double Extra4F = 0;
        //    //string Condition5 = "";
        //    //double Limit5 = 0;
        //    //double Rate5 = 0;
        //    //double Min5 = 0;
        //    //double Max5 = 0;
        //    //double Extra5A = 0;
        //    //double Extra5B = 0;
        //    //double Extra5C = 0;
        //    //double Extra5D = 0;
        //    //double Extra5E = 0;
        //    //double Extra5F = 0;
        //    //string Condition6 = "";
        //    //double Limit6 = 0;
        //    //double Rate6 = 0;
        //    //double Min6 = 0;
        //    //double Max6 = 0;
        //    //double Extra6A = 0;
        //    //double Extra6B = 0;
        //    //double Extra6C = 0;
        //    //double Extra6D = 0;
        //    //double Extra6E = 0;
        //    //double Extra6F = 0;
        //    //double RateOver = 0;
        //    //double MinOver = 0;
        //    //double MaxOver = 0;
        //    //double ExtraOverA = 0;
        //    //double ExtraOverB = 0;
        //    //double ExtraOverC = 0;
        //    //double ExtraOverD = 0;
        //    //double ExtraOverE = 0;
        //    //double ExtraOverF = 0;
        //    //string LclCurrency = "";
        //    //double Min_Cum_Royalty_KLcl = 0;
        //    //double Max_Cum_Royalty_KLcl = 0;

        //    //double QtyL = 0;
        //    //double QtyH = 0;
        //    //double Qty = 0;
        //    //double Qty1 = 0;
        //    //double Qty2 = 0;
        //    //double Qty3 = 0;
        //    //double Qty4 = 0;
        //    //double Qty5 = 0;
        //    //double Qty6 = 0;
        //    //double QtyOver = 0;

        //    //string ConditionL = "";
        //    //string ConditionH = "";
        //    //string Condition = "";

        //    //double RevLclL = 0;
        //    //double RevLclH = 0;
        //    //double RevLcl = 0;
        //    //double RevLcl1 = 0;
        //    //double RevLcl2 = 0;
        //    //double RevLcl3 = 0;
        //    //double RevLcl4 = 0;
        //    //double RevLcl5 = 0;
        //    //double RevLcl6 = 0;
        //    //double RevLclOver = 0;

        //    //double RateOnPcs1 = 0;
        //    //double RateOnPcs2 = 0;
        //    //double RateOnPcs3 = 0;
        //    //double RateOnPcs4 = 0;
        //    //double RateOnPcs5 = 0;
        //    //double RateOnPcs6 = 0;
        //    //double RateOnPcsOver = 0;

        //    //double RateOnRev1 = 0;
        //    //double RateOnRev2 = 0;
        //    //double RateOnRev3 = 0;
        //    //double RateOnRev4 = 0;
        //    //double RateOnRev5 = 0;
        //    //double RateOnRev6 = 0;
        //    //double RateOnRevOver = 0;

        //    //double RoyLclL = 0;
        //    //double RoyLclH = 0;
        //    //double RoyLcl = 0;
        //    //double RoyLcl1 = 0;
        //    //double RoyLcl2 = 0;
        //    //double RoyLcl3 = 0;
        //    //double RoyLcl4 = 0;
        //    //double RoyLcl5 = 0;
        //    //double RoyLcl6 = 0;
        //    //double RoyLclOver = 0;

        //    //double RoyUSDL = 0;
        //    //double RoyUSDH = 0;
        //    //double RoyUSD = 0;

        //    //double RoyPaidLcl = 0;
        //    //double RoyPaidLclL = 0;
        //    //double RoyPaidLclH = 0;

        //    //double RoyPaidUSD = 0;
        //    //double RoyPaidUSDL = 0;
        //    //double RoyPaidUSDH = 0;

        //    //double Rate_Lcl_per_pcs = 0;
        //    //double Rate_USD_per_pcs = 0;
        //    //double Rate_Rev_percent = 0;

        //    //double ExchangeRate = 0;

        //    //double ASPLclTot = 0;
        //    //double RevLclTot = 0;
        //    //double QtyTot = 0;


        //    //// Estrae i dati dell'Agreement
        //    //// -----------------------------------
        //    //Id_Agreement = (double)Agreement_QA_Dt.Rows[0]["Id_Agreement"];
        //    //Agreement = Agreement_QA_Dt.Rows[0]["Agreement"].ToString();
        //    //Model = Agreement_QA_Dt.Rows[0]["Model"].ToString();
        //    //Slot = (double)Agreement_QA_Dt.Rows[0]["Slot"];
        //    //Agreement_Date_Start = Agreement_QA_Dt.Rows[0]["Agreement_Date_Start"].ToString();
        //    //Agreement_Date_End = Agreement_QA_Dt.Rows[0]["Agreement_Date_End"].ToString();
        //    //PL_String = Agreement_QA_Dt.Rows[0]["PL_String"].ToString();
        //    //PL_Cond = Agreement_QA_Dt.Rows[0]["PL_Cond"].ToString();
        //    //CP_String = Agreement_QA_Dt.Rows[0]["CP_String"].ToString();
        //    //CP_Cond = Agreement_QA_Dt.Rows[0]["CP_Cond"].ToString();
        //    //Customer_String = Agreement_QA_Dt.Rows[0]["Customer_String"].ToString();
        //    //Customer_Cond = Agreement_QA_Dt.Rows[0]["Customer_Cond"].ToString();
        //    //Condition1 = Agreement_QA_Dt.Rows[0]["Condition1"].ToString();
        //    //Limit1 = (double)Agreement_QA_Dt.Rows[0]["Limit1"];
        //    //Rate1 = (double)Agreement_QA_Dt.Rows[0]["Rate1"];
        //    //Min1 = (double)Agreement_QA_Dt.Rows[0]["Min1"];
        //    //Max1 = (double)Agreement_QA_Dt.Rows[0]["Max1"];
        //    //Extra1A = (double)Agreement_QA_Dt.Rows[0]["Extra1A"];
        //    //Extra1B = (double)Agreement_QA_Dt.Rows[0]["Extra1B"];
        //    //Extra1C = (double)Agreement_QA_Dt.Rows[0]["Extra1C"];
        //    //Extra1D = (double)Agreement_QA_Dt.Rows[0]["Extra1D"];
        //    //Extra1E = (double)Agreement_QA_Dt.Rows[0]["Extra1E"];
        //    //Extra1F = (double)Agreement_QA_Dt.Rows[0]["Extra1F"];
        //    //Condition2 = Agreement_QA_Dt.Rows[0]["Condition2"].ToString();
        //    //Limit2 = (double)Agreement_QA_Dt.Rows[0]["Limit2"];
        //    //Rate2 = (double)Agreement_QA_Dt.Rows[0]["Rate2"];
        //    //Min2 = (double)Agreement_QA_Dt.Rows[0]["Min2"];
        //    //Max2 = (double)Agreement_QA_Dt.Rows[0]["Max2"];
        //    //Extra2A = (double)Agreement_QA_Dt.Rows[0]["Extra2A"];
        //    //Extra2B = (double)Agreement_QA_Dt.Rows[0]["Extra2B"];
        //    //Extra2C = (double)Agreement_QA_Dt.Rows[0]["Extra2C"];
        //    //Extra2D = (double)Agreement_QA_Dt.Rows[0]["Extra2D"];
        //    //Extra2E = (double)Agreement_QA_Dt.Rows[0]["Extra2E"];
        //    //Extra2F = (double)Agreement_QA_Dt.Rows[0]["Extra2F"];
        //    //Condition3 = Agreement_QA_Dt.Rows[0]["Condition3"].ToString();
        //    //Limit3 = (double)Agreement_QA_Dt.Rows[0]["Limit3"];
        //    //Rate3 = (double)Agreement_QA_Dt.Rows[0]["Rate3"];
        //    //Min3 = (double)Agreement_QA_Dt.Rows[0]["Min3"];
        //    //Max3 = (double)Agreement_QA_Dt.Rows[0]["Max3"];
        //    //Extra3A = (double)Agreement_QA_Dt.Rows[0]["Extra3A"];
        //    //Extra3B = (double)Agreement_QA_Dt.Rows[0]["Extra3B"];
        //    //Extra3C = (double)Agreement_QA_Dt.Rows[0]["Extra3C"];
        //    //Extra3D = (double)Agreement_QA_Dt.Rows[0]["Extra3D"];
        //    //Extra3E = (double)Agreement_QA_Dt.Rows[0]["Extra3E"];
        //    //Extra3F = (double)Agreement_QA_Dt.Rows[0]["Extra3F"];
        //    //Condition4 = Agreement_QA_Dt.Rows[0]["Condition4"].ToString();
        //    //Limit4 = (double)Agreement_QA_Dt.Rows[0]["Limit4"];
        //    //Rate4 = (double)Agreement_QA_Dt.Rows[0]["Rate4"];
        //    //Min4 = (double)Agreement_QA_Dt.Rows[0]["Min4"];
        //    //Max4 = (double)Agreement_QA_Dt.Rows[0]["Max4"];
        //    //Extra4A = (double)Agreement_QA_Dt.Rows[0]["Extra4A"];
        //    //Extra4B = (double)Agreement_QA_Dt.Rows[0]["Extra4B"];
        //    //Extra4C = (double)Agreement_QA_Dt.Rows[0]["Extra4C"];
        //    //Extra4D = (double)Agreement_QA_Dt.Rows[0]["Extra4D"];
        //    //Extra4E = (double)Agreement_QA_Dt.Rows[0]["Extra4E"];
        //    //Extra4F = (double)Agreement_QA_Dt.Rows[0]["Extra4F"];
        //    //Condition5 = Agreement_QA_Dt.Rows[0]["Condition5"].ToString();
        //    //Limit5 = (double)Agreement_QA_Dt.Rows[0]["Limit5"];
        //    //Rate5 = (double)Agreement_QA_Dt.Rows[0]["Rate5"];
        //    //Min5 = (double)Agreement_QA_Dt.Rows[0]["Min5"];
        //    //Max5 = (double)Agreement_QA_Dt.Rows[0]["Max5"];
        //    //Extra5A = (double)Agreement_QA_Dt.Rows[0]["Extra5A"];
        //    //Extra5B = (double)Agreement_QA_Dt.Rows[0]["Extra5B"];
        //    //Extra5C = (double)Agreement_QA_Dt.Rows[0]["Extra5C"];
        //    //Extra5D = (double)Agreement_QA_Dt.Rows[0]["Extra5D"];
        //    //Extra5E = (double)Agreement_QA_Dt.Rows[0]["Extra5E"];
        //    //Extra5F = (double)Agreement_QA_Dt.Rows[0]["Extra5F"];
        //    //Condition6 = Agreement_QA_Dt.Rows[0]["Condition6"].ToString();
        //    //Limit6 = (double)Agreement_QA_Dt.Rows[0]["Limit6"];
        //    //Rate6 = (double)Agreement_QA_Dt.Rows[0]["Rate6"];
        //    //Min6 = (double)Agreement_QA_Dt.Rows[0]["Min6"];
        //    //Max6 = (double)Agreement_QA_Dt.Rows[0]["Max6"];
        //    //Extra6A = (double)Agreement_QA_Dt.Rows[0]["Extra6A"];
        //    //Extra6B = (double)Agreement_QA_Dt.Rows[0]["Extra6B"];
        //    //Extra6C = (double)Agreement_QA_Dt.Rows[0]["Extra6C"];
        //    //Extra6D = (double)Agreement_QA_Dt.Rows[0]["Extra6D"];
        //    //Extra6E = (double)Agreement_QA_Dt.Rows[0]["Extra6E"];
        //    //Extra6F = (double)Agreement_QA_Dt.Rows[0]["Extra6F"];
        //    //RateOver = (double)Agreement_QA_Dt.Rows[0]["RateOver"];
        //    //MinOver = (double)Agreement_QA_Dt.Rows[0]["MinOver"];
        //    //MaxOver = (double)Agreement_QA_Dt.Rows[0]["MaxOver"];
        //    //ExtraOverA = (double)Agreement_QA_Dt.Rows[0]["ExtraOverA"];
        //    //ExtraOverB = (double)Agreement_QA_Dt.Rows[0]["ExtraOverB"];
        //    //ExtraOverC = (double)Agreement_QA_Dt.Rows[0]["ExtraOverC"];
        //    //ExtraOverD = (double)Agreement_QA_Dt.Rows[0]["ExtraOverD"];
        //    //ExtraOverE = (double)Agreement_QA_Dt.Rows[0]["ExtraOverE"];
        //    //ExtraOverF = (double)Agreement_QA_Dt.Rows[0]["ExtraOverF"];
        //    //LclCurrency = Agreement_QA_Dt.Rows[0]["LclCurrency"].ToString();
        //    //Min_Cum_Royalty_KLcl = (double)Agreement_QA_Dt.Rows[0]["Min_Cum_Royalty_KLcl"];
        //    //Max_Cum_Royalty_KLcl = (double)Agreement_QA_Dt.Rows[0]["Max_Cum_Royalty_KLcl"];


        //    //// Loop
        //    //// -----------------------------------
        //    //for (int RowI = 0; RowI <= Royalty_QA_Dt.Rows.Count - 1; RowI++)
        //    //{
        //    //    // Dati iniziali 
        //    //    // -----------------------------------
        //    //    Condition = "";
        //    //    ExchangeRate = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["ExchangeRate"]), 4);
        //    //    if (ExchangeRate == 0) { ExchangeRate = 1; }

        //    //    RevLcl = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Net_Revenue_KLcl"]), 4);
        //    //    RevLclH = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Cum_Net_Revenue_KLcl"]), 4);
        //    //    RevLclL = RevLclH - RevLcl;
        //    //    Qty = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Net_qty_Kpcs"]), 3);
        //    //    QtyH = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Cum_Net_qty_Kpcs"]), 3);
        //    //    QtyL = QtyH - Qty;
        //    //    RoyLcl = 0;
        //    //    RoyUSD = 0;
        //    //    RoyPaidLcl = 0;
        //    //    RoyPaidUSD = 0;
        //    //    Rate_Lcl_per_pcs = 0;
        //    //    Rate_USD_per_pcs = 0;
        //    //    Rate_Rev_percent = 0;

        //    //    if (RowI == 0)
        //    //    {
        //    //        RoyLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_Royalty_KLcl"]), 4);
        //    //        RoyUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_Royalty_KUSD"]), 4);
        //    //        RoyPaidLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_RoyaltyPaid_KLcl"]), 4);
        //    //        RoyPaidUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_RoyaltyPaid_KUSD"]), 4);
        //    //    }
        //    //    else
        //    //    {
        //    //        RoyLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_Royalty_KLcl"]), 4);
        //    //        RoyUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_Royalty_KUSD"]), 4);
        //    //        RoyPaidLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_RoyaltyPaid_KLcl"]), 4);
        //    //        RoyPaidUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_RoyaltyPaid_KUSD"]), 4);
        //    //    }

        //    //    // Condition
        //    //    // -----------------------------------
        //    //    if (RevLclL < Limit1) { ConditionL = Condition1; }
        //    //    else if (RevLclL >= Limit1 && RevLclL < Limit2) { ConditionL = Condition2; }
        //    //    else if (RevLclL >= Limit2 && RevLclL < Limit3) { ConditionL = Condition3; }
        //    //    else if (RevLclL >= Limit3 && RevLclL < Limit4) { ConditionL = Condition4; }
        //    //    else if (RevLclL >= Limit4 && RevLclL < Limit5) { ConditionL = Condition5; }
        //    //    else if (RevLclL >= Limit5 && RevLclL < Limit6) { ConditionL = Condition6; }
        //    //    else if (RevLclL >= Limit6) { ConditionL = "Over"; }
        //    //    else { ConditionL = "ERR"; }

        //    //    if (RevLclH < Limit1) { ConditionH = Condition1; }
        //    //    else if (RevLclH >= Limit1 && RevLclH < Limit2) { ConditionH = Condition2; }
        //    //    else if (RevLclH >= Limit2 && RevLclH < Limit3) { ConditionH = Condition3; }
        //    //    else if (RevLclH >= Limit3 && RevLclH < Limit4) { ConditionH = Condition4; }
        //    //    else if (RevLclH >= Limit4 && RevLclH < Limit5) { ConditionH = Condition5; }
        //    //    else if (RevLclH >= Limit5 && RevLclH < Limit6) { ConditionH = Condition6; }
        //    //    else if (RevLclH >= Limit6) { ConditionL = "Over"; }
        //    //    else { ConditionL = "ERR"; }

        //    //    if (string.Equals(ConditionL, ConditionH))
        //    //    {
        //    //        Condition = ConditionL;
        //    //    }
        //    //    else
        //    //    {
        //    //        Condition = ConditionL + " -> " + ConditionH;
        //    //    }

        //    //    // Revenue
        //    //    // -----------------------------------
        //    //    RevLcl1 = 0;
        //    //    RevLcl2 = 0;
        //    //    RevLcl3 = 0;
        //    //    RevLcl4 = 0;
        //    //    RevLcl5 = 0;
        //    //    RevLcl6 = 0;
        //    //    RevLclOver = 0;

        //    //    if (RevLcl >= 0)
        //    //    {
        //    //        if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition1)) { RevLcl1 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition2)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = RevLclH - Limit1; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition3)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = RevLclH - Limit2; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition4)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = Limit3 - Limit2; RevLcl4 = RevLclH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition5)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = RevLclH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition6)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, "Over")) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition2)) { RevLcl2 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition3)) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = RevLclH - Limit2; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition4)) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = Limit3 - Limit2; RevLcl4 = RevLclH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition5)) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = RevLclH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition6)) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, "Over")) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition3)) { RevLcl3 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition4)) { RevLcl3 = Limit3 - RevLclL; RevLcl4 = RevLclH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition5)) { RevLcl3 = Limit3 - RevLclL; RevLcl4 = Limit4 - Limit3; RevLcl5 = RevLclH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition6)) { RevLcl3 = Limit3 - RevLclL; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, "Over")) { RevLcl3 = Limit3 - RevLclL; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition4)) { RevLcl4 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition5)) { RevLcl4 = Limit4 - RevLclL; RevLcl5 = RevLclH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition6)) { RevLcl4 = Limit4 - RevLclL; RevLcl5 = Limit5 - Limit4; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, "Over")) { RevLcl4 = Limit4 - RevLclL; RevLcl5 = Limit5 - Limit4; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, Condition5)) { RevLcl5 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, Condition6)) { RevLcl5 = Limit5 - RevLclL; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, "Over")) { RevLcl5 = Limit5 - RevLclL; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition6) && string.Equals(ConditionH, Condition6)) { RevLcl6 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition6) && string.Equals(ConditionH, "Over")) { RevLcl6 = Limit6 - RevLclL; RevLclOver = RevLclH - Limit6; }

        //    //        else { RevLclOver = RevLclH - RevLclL; }

        //    //    }
        //    //    else
        //    //    {
        //    //        if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition1)) { RevLcl1 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition2)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(RevLclL - Limit1); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition3)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(RevLclL - Limit2); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition4)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(RevLclL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition5)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(RevLclL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition6)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, "Over")) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition2)) { RevLcl2 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition3)) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(RevLclL - Limit2); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition4)) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(RevLclL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition5)) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(RevLclL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition6)) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, "Over")) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition3)) { RevLcl3 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition4)) { RevLcl3 = -(Limit3 - RevLclH); RevLcl4 = -(RevLclL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition5)) { RevLcl3 = -(Limit3 - RevLclH); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(RevLclL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition6)) { RevLcl3 = -(Limit3 - RevLclH); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, "Over")) { RevLcl3 = -(Limit3 - RevLclH); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition4)) { RevLcl4 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition5)) { RevLcl4 = -(Limit4 - RevLclH); RevLcl5 = -(RevLclL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition6)) { RevLcl4 = -(Limit4 - RevLclH); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, "Over")) { RevLcl4 = -(Limit4 - RevLclH); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, Condition5)) { RevLcl5 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, Condition6)) { RevLcl5 = -(Limit5 - RevLclH); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, "Over")) { RevLcl5 = -(Limit5 - RevLclH); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition6) && string.Equals(ConditionL, Condition6)) { RevLcl6 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition6) && string.Equals(ConditionL, "Over")) { RevLcl6 = -(Limit6 - RevLclH); RevLclOver = -(RevLclL - Limit6); }

        //    //        else { RevLclOver = RevLclH - RevLclL; }

        //    //    }

        //    //    // Quantity
        //    //    // -----------------------------------
        //    //    if (RevLcl != 0 && Qty != 0)
        //    //    {
        //    //        Qty1 = Qty * RevLcl1 / RevLcl;
        //    //        Qty2 = Qty * RevLcl2 / RevLcl;
        //    //        Qty3 = Qty * RevLcl3 / RevLcl;
        //    //        Qty4 = Qty * RevLcl4 / RevLcl;
        //    //        Qty5 = Qty * RevLcl5 / RevLcl;
        //    //        Qty6 = Qty * RevLcl6 / RevLcl;
        //    //        QtyOver = Qty * RevLclOver / RevLcl;
        //    //    }
        //    //    else if (RevLcl != 0 && Qty == 0)
        //    //    {
        //    //        Qty1 = 0;
        //    //        Qty2 = 0;
        //    //        Qty3 = 0;
        //    //        Qty4 = 0;
        //    //        Qty5 = 0;
        //    //        Qty6 = 0;
        //    //        QtyOver = 0;
        //    //    }
        //    //    else if (RevLcl == 0 && Qty != 0)
        //    //    {
        //    //        Qty1 = 0;
        //    //        Qty2 = 0;
        //    //        Qty3 = 0;
        //    //        Qty4 = 0;
        //    //        Qty5 = 0;
        //    //        Qty6 = 0;
        //    //        QtyOver = 0;

        //    //        if (string.Equals(Condition, Condition1)) { Qty1 = Qty; }
        //    //        else if (string.Equals(Condition, Condition2)) { Qty2 = Qty; }
        //    //        else if (string.Equals(Condition, Condition3)) { Qty3 = Qty; }
        //    //        else if (string.Equals(Condition, Condition4)) { Qty4 = Qty; }
        //    //        else if (string.Equals(Condition, Condition5)) { Qty5 = Qty; }
        //    //        else if (string.Equals(Condition, Condition6)) { Qty6 = Qty; }
        //    //        else { QtyOver = Qty; }
        //    //    }
        //    //    else
        //    //    {
        //    //        Qty1 = 0;
        //    //        Qty2 = 0;
        //    //        Qty3 = 0;
        //    //        Qty4 = 0;
        //    //        Qty5 = 0;
        //    //        Qty6 = 0;
        //    //        QtyOver = 0;
        //    //    }




        //    //    // ASP Tot
        //    //    // -----------------------------------
        //    //    RevLclTot = Math.Round((double)Royalty_QA_Dt.Compute("Sum(Net_Revenue_KLcl)", ""), 4);
        //    //    QtyTot = Math.Round((double)Royalty_QA_Dt.Compute("Sum(Net_qty_Kpcs)", ""), 3);
        //    //    if (QtyTot != 0) { ASPLclTot = RevLclTot / QtyTot; } else { ASPLclTot = 0; }


        //    //    // RateOnPcs
        //    //    // -----------------------------------
        //    //    RateOnPcs1 = Rate1;
        //    //    RateOnPcs2 = Rate2;
        //    //    RateOnPcs3 = Rate3;
        //    //    RateOnPcs4 = Rate4;
        //    //    RateOnPcs5 = Rate5;
        //    //    RateOnPcs6 = Rate6;
        //    //    RateOnPcsOver = RateOver;

        //    //    // Roy prima del check min/max
        //    //    // -----------------------------------
        //    //    RoyLcl1 = RateOnPcs1 * Qty1;
        //    //    RoyLcl2 = RateOnPcs2 * Qty2;
        //    //    RoyLcl3 = RateOnPcs3 * Qty3;
        //    //    RoyLcl4 = RateOnPcs4 * Qty4;
        //    //    RoyLcl5 = RateOnPcs5 * Qty5;
        //    //    RoyLcl6 = RateOnPcs6 * Qty6;
        //    //    RoyLclOver = RateOnPcsOver * QtyOver;
        //    //    RoyLcl = RoyLcl1 + RoyLcl2 + RoyLcl3 + RoyLcl4 + RoyLcl5 + RoyLcl6 + RoyLclOver;

        //    //    // RateOnRev
        //    //    // -----------------------------------
        //    //    if (RevLcl1 != 0) { RateOnRev1 = RoyLcl1 / RevLcl1; } else { RateOnRev1 = 0; }
        //    //    if (RevLcl2 != 0) { RateOnRev2 = RoyLcl2 / RevLcl2; } else { RateOnRev2 = 0; }
        //    //    if (RevLcl3 != 0) { RateOnRev3 = RoyLcl3 / RevLcl3; } else { RateOnRev3 = 0; }
        //    //    if (RevLcl4 != 0) { RateOnRev4 = RoyLcl4 / RevLcl4; } else { RateOnRev4 = 0; }
        //    //    if (RevLcl5 != 0) { RateOnRev5 = RoyLcl5 / RevLcl5; } else { RateOnRev5 = 0; }
        //    //    if (RevLcl6 != 0) { RateOnRev6 = RoyLcl6 / RevLcl6; } else { RateOnRev6 = 0; }
        //    //    if (RevLclOver != 0) { RateOnRevOver = RoyLclOver / RevLclOver; } else { RateOnRevOver = 0; }

        //    //    // Check Min/Max
        //    //    // -----------------------------------
        //    //    if (RateOnRev1 < Min1) { RateOnRev1 = Min1; } else if (RateOnRev1 > Max1) { RateOnRev1 = Max1; }
        //    //    if (RateOnRev2 < Min2) { RateOnRev2 = Min2; } else if (RateOnRev2 > Max2) { RateOnRev2 = Max2; }
        //    //    if (RateOnRev3 < Min3) { RateOnRev3 = Min3; } else if (RateOnRev3 > Max3) { RateOnRev3 = Max3; }
        //    //    if (RateOnRev4 < Min4) { RateOnRev4 = Min4; } else if (RateOnRev4 > Max4) { RateOnRev4 = Max4; }
        //    //    if (RateOnRev5 < Min5) { RateOnRev5 = Min5; } else if (RateOnRev5 > Max5) { RateOnRev5 = Max5; }
        //    //    if (RateOnRev6 < Min6) { RateOnRev6 = Min6; } else if (RateOnRev6 > Max6) { RateOnRev6 = Max6; }
        //    //    if (RateOnRevOver < MinOver) { RateOnRevOver = MinOver; } else if (RateOnRevOver > MaxOver) { RateOnRevOver = MaxOver; }

        //    //    // Roy finale
        //    //    // -----------------------------------
        //    //    if (RateOnRev1 != 0) { RoyLcl1 = RateOnRev1 * RevLcl1; }
        //    //    if (RateOnRev2 != 0) { RoyLcl2 = RateOnRev2 * RevLcl2; }
        //    //    if (RateOnRev3 != 0) { RoyLcl3 = RateOnRev3 * RevLcl3; }
        //    //    if (RateOnRev4 != 0) { RoyLcl4 = RateOnRev4 * RevLcl4; }
        //    //    if (RateOnRev5 != 0) { RoyLcl5 = RateOnRev5 * RevLcl5; }
        //    //    if (RateOnRev6 != 0) { RoyLcl6 = RateOnRev6 * RevLcl6; }
        //    //    if (RateOnRevOver != 0) { RoyLclOver = RateOnRevOver * RevLclOver; }
        //    //    RoyLcl = RoyLcl1 + RoyLcl2 + RoyLcl3 + RoyLcl4 + RoyLcl5 + RoyLcl6 + RoyLclOver;
        //    //    RoyLclH = RoyLclL + RoyLcl;
        //    //    RoyUSD = RoyLcl * ExchangeRate;
        //    //    RoyUSDH = RoyUSDL + RoyUSD;


        //    //    // Roy Paid
        //    //    // -----------------------------------
        //    //    if (RoyLcl >= 0)
        //    //    {
        //    //        if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH < Min_Cum_Royalty_KLcl) { RoyPaidLcl = 0; }
        //    //        else if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLclH - Min_Cum_Royalty_KLcl; }
        //    //        else if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = Max_Cum_Royalty_KLcl - Min_Cum_Royalty_KLcl; }
        //    //        else if (RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl && RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLcl; }
        //    //        else if (RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl && RoyLclH >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = Max_Cum_Royalty_KLcl - RoyLclL; }
        //    //        else { RoyPaidLcl = 0; }
        //    //    }
        //    //    else
        //    //    {
        //    //        if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL < Min_Cum_Royalty_KLcl) { RoyPaidLcl = 0; }
        //    //        else if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(RoyLclL - Min_Cum_Royalty_KLcl); }
        //    //        else if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(Max_Cum_Royalty_KLcl - Min_Cum_Royalty_KLcl); }
        //    //        else if (RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl && RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLcl; }
        //    //        else if (RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl && RoyLclL >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(Max_Cum_Royalty_KLcl - RoyLclL); }
        //    //        else { RoyPaidLcl = 0; }
        //    //    }
        //    //    RoyPaidLclH = RoyPaidLclL + RoyPaidLcl;
        //    //    RoyPaidUSD = RoyPaidLcl * ExchangeRate;
        //    //    RoyPaidUSDH = RoyPaidUSDL + RoyPaidUSD;

        //    //    // Rate
        //    //    // -----------------------------------
        //    //    if (Qty != 0) { Rate_Lcl_per_pcs = RoyLcl / Qty; } else { Rate_Lcl_per_pcs = 0; }
        //    //    if (Qty != 0) { Rate_USD_per_pcs = RoyUSD / Qty; } else { Rate_USD_per_pcs = 0; }
        //    //    if (RevLcl != 0) { Rate_Rev_percent = RoyLcl / RevLcl; } else { Rate_Rev_percent = 0; }

        //    //    // Salva i dati i RoyaltyQ
        //    //    // -----------------------------------
        //    //    Royalty_QA_Dt.Rows[RowI]["Condition"] = Condition;
        //    //    Royalty_QA_Dt.Rows[RowI]["Royalty_KLcl"] = Math.Round(RoyLcl, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_Royalty_KLcl"] = Math.Round(RoyLclH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Royalty_KUSD"] = Math.Round(RoyUSD, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_Royalty_KUSD"] = Math.Round(RoyUSDH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["RoyaltyPaid_KLcl"] = Math.Round(RoyPaidLcl, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_RoyaltyPaid_KLcl"] = Math.Round(RoyPaidLclH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["RoyaltyPaid_KUSD"] = Math.Round(RoyPaidUSD, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_RoyaltyPaid_KUSD"] = Math.Round(RoyPaidUSDH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_Lcl_per_pcs"] = Rate_Lcl_per_pcs;
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_USD_per_pcs"] = Rate_USD_per_pcs;
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_Rev_percent"] = Rate_Rev_percent;

        //    //}


        //}




        //public void M06_SLOTasp_RATErev_MINMAXno(ref DataTable RuleOne_Dt, ref DataTable Royalty_OneRule_OneQuarter_Dt)
        //{
        //    // ****************************************************
        //    // MODELLO 06
        //    // SLOT: su ASP'
        //    // RATE: su Revenue
        //    // MIN/MAX RATE: NO
        //    //
        //    // ESEMPIO: 
        //    //


        //    // Variabili interne
        //    // -----------------------------------
        //    string AGREEMENT_ID = "";
        //    string AGREEMENT = "";
        //    string VERSION_DATE = "";
        //    string VERSION_DESCR = "";
        //    string MODEL_ACTIVE = "";
        //    string MODEL_INITIAL_MONTH = "";
        //    string MODEL_FINAL_MONTH = "";
        //    string MODEL_TYPE = "";
        //    string MODEL_CURRENCY = "";
        //    double MODEL_NB_SLOT = 0;
        //    double MODEL_MIN_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MIN_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MIN_EACH_QUARTER_ROYALTY = 0;
        //    double MODEL_MAX_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MAX_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MAX_EACH_QUARTER_ROYALTY = 0;
        //    string SELECTION_PL_LIST = "";
        //    string SELECTION_CP_LIST = "";
        //    string SELECTION_CP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = "";
        //    string SLOT01_MESSAGE = "";
        //    double SLOT01_START = 0;
        //    double SLOT01_END = 0;
        //    double SLOT01_RATE = 0;
        //    double SLOT01_MIN = 0;
        //    double SLOT01_MAX = 0;
        //    string SLOT01_A = "";
        //    string SLOT01_B = "";
        //    string SLOT01_C = "";
        //    string SLOT01_D = "";
        //    string SLOT01_E = "";
        //    string SLOT01_F = "";
        //    string SLOT01_G = "";
        //    string SLOT01_H = "";
        //    string SLOT02_MESSAGE = "";
        //    double SLOT02_START = 0;
        //    double SLOT02_END = 0;
        //    double SLOT02_RATE = 0;
        //    double SLOT02_MIN = 0;
        //    double SLOT02_MAX = 0;
        //    string SLOT02_A = "";
        //    string SLOT02_B = "";
        //    string SLOT02_C = "";
        //    string SLOT02_D = "";
        //    string SLOT02_E = "";
        //    string SLOT02_F = "";
        //    string SLOT02_G = "";
        //    string SLOT02_H = "";
        //    string SLOT03_MESSAGE = "";
        //    double SLOT03_START = 0;
        //    double SLOT03_END = 0;
        //    double SLOT03_RATE = 0;
        //    double SLOT03_MIN = 0;
        //    double SLOT03_MAX = 0;
        //    string SLOT03_A = "";
        //    string SLOT03_B = "";
        //    string SLOT03_C = "";
        //    string SLOT03_D = "";
        //    string SLOT03_E = "";
        //    string SLOT03_F = "";
        //    string SLOT03_G = "";
        //    string SLOT03_H = "";
        //    string SLOT04_MESSAGE = "";
        //    double SLOT04_START = 0;
        //    double SLOT04_END = 0;
        //    double SLOT04_RATE = 0;
        //    double SLOT04_MIN = 0;
        //    double SLOT04_MAX = 0;
        //    string SLOT04_A = "";
        //    string SLOT04_B = "";
        //    string SLOT04_C = "";
        //    string SLOT04_D = "";
        //    string SLOT04_E = "";
        //    string SLOT04_F = "";
        //    string SLOT04_G = "";
        //    string SLOT04_H = "";
        //    string SLOT05_MESSAGE = "";
        //    double SLOT05_START = 0;
        //    double SLOT05_END = 0;
        //    double SLOT05_RATE = 0;
        //    double SLOT05_MIN = 0;
        //    double SLOT05_MAX = 0;
        //    string SLOT05_A = "";
        //    string SLOT05_B = "";
        //    string SLOT05_C = "";
        //    string SLOT05_D = "";
        //    string SLOT05_E = "";
        //    string SLOT05_F = "";
        //    string SLOT05_G = "";
        //    string SLOT05_H = "";
        //    string SLOT06_MESSAGE = "";
        //    double SLOT06_START = 0;
        //    double SLOT06_END = 0;
        //    double SLOT06_RATE = 0;
        //    double SLOT06_MIN = 0;
        //    double SLOT06_MAX = 0;
        //    string SLOT06_A = "";
        //    string SLOT06_B = "";
        //    string SLOT06_C = "";
        //    string SLOT06_D = "";
        //    string SLOT06_E = "";
        //    string SLOT06_F = "";
        //    string SLOT06_G = "";
        //    string SLOT06_H = "";
        //    string SLOT07_MESSAGE = "";
        //    double SLOT07_START = 0;
        //    double SLOT07_END = 0;
        //    double SLOT07_RATE = 0;
        //    double SLOT07_MIN = 0;
        //    double SLOT07_MAX = 0;
        //    string SLOT07_A = "";
        //    string SLOT07_B = "";
        //    string SLOT07_C = "";
        //    string SLOT07_D = "";
        //    string SLOT07_E = "";
        //    string SLOT07_F = "";
        //    string SLOT07_G = "";
        //    string SLOT07_H = "";
        //    string SLOT08_MESSAGE = "";
        //    double SLOT08_START = 0;
        //    double SLOT08_END = 0;
        //    double SLOT08_RATE = 0;
        //    double SLOT08_MIN = 0;
        //    double SLOT08_MAX = 0;
        //    string SLOT08_A = "";
        //    string SLOT08_B = "";
        //    string SLOT08_C = "";
        //    string SLOT08_D = "";
        //    string SLOT08_E = "";
        //    string SLOT08_F = "";
        //    string SLOT08_G = "";
        //    string SLOT08_H = "";
        //    string SLOT09_MESSAGE = "";
        //    double SLOT09_START = 0;
        //    double SLOT09_END = 0;
        //    double SLOT09_RATE = 0;
        //    double SLOT09_MIN = 0;
        //    double SLOT09_MAX = 0;
        //    string SLOT09_A = "";
        //    string SLOT09_B = "";
        //    string SLOT09_C = "";
        //    string SLOT09_D = "";
        //    string SLOT09_E = "";
        //    string SLOT09_F = "";
        //    string SLOT09_G = "";
        //    string SLOT09_H = "";
        //    string SLOT10_MESSAGE = "";
        //    double SLOT10_START = 0;
        //    double SLOT10_END = 0;
        //    double SLOT10_RATE = 0;
        //    double SLOT10_MIN = 0;
        //    double SLOT10_MAX = 0;
        //    string SLOT10_A = "";
        //    string SLOT10_B = "";
        //    string SLOT10_C = "";
        //    string SLOT10_D = "";
        //    string SLOT10_E = "";
        //    string SLOT10_F = "";
        //    string SLOT10_G = "";
        //    string SLOT10_H = "";

        //    double NET_QTY_PCS = 0;
        //    double CUM_NET_QTY_PCS = 0;
        //    double NET_REVENUE_LCL = 0;
        //    double CUM_NET_REVENUE_LCL = 0;
        //    double NET_QTY_TOT_PCS = 0;
        //    double NET_REVENUE_TOT_LCL = 0;
        //    double ASPLcl_TOT = 0;

        //    double Qty = 0;
        //    double Qty_Start = 0;
        //    double Qty_End = 0;
        //    double Qty_01 = 0;
        //    double Qty_02 = 0;
        //    double Qty_03 = 0;
        //    double Qty_04 = 0;
        //    double Qty_05 = 0;
        //    double Qty_06 = 0;
        //    double Qty_07 = 0;
        //    double Qty_08 = 0;
        //    double Qty_09 = 0;
        //    double Qty_10 = 0;

        //    double RevLcl = 0;
        //    double RevLcl_Start = 0;
        //    double RevLcl_End = 0;
        //    double RevLcl_01 = 0;
        //    double RevLcl_02 = 0;
        //    double RevLcl_03 = 0;
        //    double RevLcl_04 = 0;
        //    double RevLcl_05 = 0;
        //    double RevLcl_06 = 0;
        //    double RevLcl_07 = 0;
        //    double RevLcl_08 = 0;
        //    double RevLcl_09 = 0;
        //    double RevLcl_10 = 0;

        //    string Slot_Start = "";
        //    string Slot_End = "";

        //    string Condition_Start = "";
        //    string Condition_End = "";
        //    string Condition = "";


        //    // Estrae i dati della Rule
        //    // -----------------------------------
        //    AGREEMENT_ID = (string)RuleOne_Dt.Rows[0]["AGREEMENT_ID"];
        //    AGREEMENT = (string)RuleOne_Dt.Rows[0]["AGREEMENT"];
        //    VERSION_DATE = (string)RuleOne_Dt.Rows[0]["VERSION_DATE"];
        //    VERSION_DESCR = (string)RuleOne_Dt.Rows[0]["VERSION_DESCR"];
        //    MODEL_ACTIVE = (string)RuleOne_Dt.Rows[0]["MODEL_ACTIVE"];
        //    MODEL_INITIAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_INITIAL_MONTH"];
        //    MODEL_FINAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_FINAL_MONTH"];
        //    MODEL_TYPE = (string)RuleOne_Dt.Rows[0]["MODEL_TYPE"];
        //    MODEL_CURRENCY = (string)RuleOne_Dt.Rows[0]["MODEL_CURRENCY"];
        //    MODEL_NB_SLOT = (double)RuleOne_Dt.Rows[0]["MODEL_NB_SLOT"];
        //    MODEL_MIN_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_ACCUMULATED_ROYALTY"];
        //    MODEL_MIN_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_YEAR_ROYALTY"];
        //    MODEL_MIN_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_QUARTER_ROYALTY"];
        //    MODEL_MAX_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_ACCUMULATED_ROYALTY"];
        //    MODEL_MAX_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_YEAR_ROYALTY"];
        //    MODEL_MAX_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_QUARTER_ROYALTY"];
        //    SELECTION_PL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_PL_LIST"];
        //    SELECTION_CP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_LIST"];
        //    SELECTION_CP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_LIST"];
        //    SELECTION_CUSTOMER_FINAL_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_LIST"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_LIST"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_LIST"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION"];
        //    SLOT01_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT01_MESSAGE"];
        //    SLOT01_START = (double)RuleOne_Dt.Rows[0]["SLOT01_START"];
        //    SLOT01_END = (double)RuleOne_Dt.Rows[0]["SLOT01_END"];
        //    SLOT01_RATE = (double)RuleOne_Dt.Rows[0]["SLOT01_RATE"];
        //    SLOT01_MIN = (double)RuleOne_Dt.Rows[0]["SLOT01_MIN"];
        //    SLOT01_MAX = (double)RuleOne_Dt.Rows[0]["SLOT01_MAX"];
        //    SLOT01_A = (string)RuleOne_Dt.Rows[0]["SLOT01_A"];
        //    SLOT01_B = (string)RuleOne_Dt.Rows[0]["SLOT01_B"];
        //    SLOT01_C = (string)RuleOne_Dt.Rows[0]["SLOT01_C"];
        //    SLOT01_D = (string)RuleOne_Dt.Rows[0]["SLOT01_D"];
        //    SLOT01_E = (string)RuleOne_Dt.Rows[0]["SLOT01_E"];
        //    SLOT01_F = (string)RuleOne_Dt.Rows[0]["SLOT01_F"];
        //    SLOT01_G = (string)RuleOne_Dt.Rows[0]["SLOT01_G"];
        //    SLOT01_H = (string)RuleOne_Dt.Rows[0]["SLOT01_H"];
        //    SLOT02_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT02_MESSAGE"];
        //    SLOT02_START = (double)RuleOne_Dt.Rows[0]["SLOT02_START"];
        //    SLOT02_END = (double)RuleOne_Dt.Rows[0]["SLOT02_END"];
        //    SLOT02_RATE = (double)RuleOne_Dt.Rows[0]["SLOT02_RATE"];
        //    SLOT02_MIN = (double)RuleOne_Dt.Rows[0]["SLOT02_MIN"];
        //    SLOT02_MAX = (double)RuleOne_Dt.Rows[0]["SLOT02_MAX"];
        //    SLOT02_A = (string)RuleOne_Dt.Rows[0]["SLOT02_A"];
        //    SLOT02_B = (string)RuleOne_Dt.Rows[0]["SLOT02_B"];
        //    SLOT02_C = (string)RuleOne_Dt.Rows[0]["SLOT02_C"];
        //    SLOT02_D = (string)RuleOne_Dt.Rows[0]["SLOT02_D"];
        //    SLOT02_E = (string)RuleOne_Dt.Rows[0]["SLOT02_E"];
        //    SLOT02_F = (string)RuleOne_Dt.Rows[0]["SLOT02_F"];
        //    SLOT02_G = (string)RuleOne_Dt.Rows[0]["SLOT02_G"];
        //    SLOT02_H = (string)RuleOne_Dt.Rows[0]["SLOT02_H"];
        //    SLOT03_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT03_MESSAGE"];
        //    SLOT03_START = (double)RuleOne_Dt.Rows[0]["SLOT03_START"];
        //    SLOT03_END = (double)RuleOne_Dt.Rows[0]["SLOT03_END"];
        //    SLOT03_RATE = (double)RuleOne_Dt.Rows[0]["SLOT03_RATE"];
        //    SLOT03_MIN = (double)RuleOne_Dt.Rows[0]["SLOT03_MIN"];
        //    SLOT03_MAX = (double)RuleOne_Dt.Rows[0]["SLOT03_MAX"];
        //    SLOT03_A = (string)RuleOne_Dt.Rows[0]["SLOT03_A"];
        //    SLOT03_B = (string)RuleOne_Dt.Rows[0]["SLOT03_B"];
        //    SLOT03_C = (string)RuleOne_Dt.Rows[0]["SLOT03_C"];
        //    SLOT03_D = (string)RuleOne_Dt.Rows[0]["SLOT03_D"];
        //    SLOT03_E = (string)RuleOne_Dt.Rows[0]["SLOT03_E"];
        //    SLOT03_F = (string)RuleOne_Dt.Rows[0]["SLOT03_F"];
        //    SLOT03_G = (string)RuleOne_Dt.Rows[0]["SLOT03_G"];
        //    SLOT03_H = (string)RuleOne_Dt.Rows[0]["SLOT03_H"];
        //    SLOT04_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT04_MESSAGE"];
        //    SLOT04_START = (double)RuleOne_Dt.Rows[0]["SLOT04_START"];
        //    SLOT04_END = (double)RuleOne_Dt.Rows[0]["SLOT04_END"];
        //    SLOT04_RATE = (double)RuleOne_Dt.Rows[0]["SLOT04_RATE"];
        //    SLOT04_MIN = (double)RuleOne_Dt.Rows[0]["SLOT04_MIN"];
        //    SLOT04_MAX = (double)RuleOne_Dt.Rows[0]["SLOT04_MAX"];
        //    SLOT04_A = (string)RuleOne_Dt.Rows[0]["SLOT04_A"];
        //    SLOT04_B = (string)RuleOne_Dt.Rows[0]["SLOT04_B"];
        //    SLOT04_C = (string)RuleOne_Dt.Rows[0]["SLOT04_C"];
        //    SLOT04_D = (string)RuleOne_Dt.Rows[0]["SLOT04_D"];
        //    SLOT04_E = (string)RuleOne_Dt.Rows[0]["SLOT04_E"];
        //    SLOT04_F = (string)RuleOne_Dt.Rows[0]["SLOT04_F"];
        //    SLOT04_G = (string)RuleOne_Dt.Rows[0]["SLOT04_G"];
        //    SLOT04_H = (string)RuleOne_Dt.Rows[0]["SLOT04_H"];
        //    SLOT05_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT05_MESSAGE"];
        //    SLOT05_START = (double)RuleOne_Dt.Rows[0]["SLOT05_START"];
        //    SLOT05_END = (double)RuleOne_Dt.Rows[0]["SLOT05_END"];
        //    SLOT05_RATE = (double)RuleOne_Dt.Rows[0]["SLOT05_RATE"];
        //    SLOT05_MIN = (double)RuleOne_Dt.Rows[0]["SLOT05_MIN"];
        //    SLOT05_MAX = (double)RuleOne_Dt.Rows[0]["SLOT05_MAX"];
        //    SLOT05_A = (string)RuleOne_Dt.Rows[0]["SLOT05_A"];
        //    SLOT05_B = (string)RuleOne_Dt.Rows[0]["SLOT05_B"];
        //    SLOT05_C = (string)RuleOne_Dt.Rows[0]["SLOT05_C"];
        //    SLOT05_D = (string)RuleOne_Dt.Rows[0]["SLOT05_D"];
        //    SLOT05_E = (string)RuleOne_Dt.Rows[0]["SLOT05_E"];
        //    SLOT05_F = (string)RuleOne_Dt.Rows[0]["SLOT05_F"];
        //    SLOT05_G = (string)RuleOne_Dt.Rows[0]["SLOT05_G"];
        //    SLOT05_H = (string)RuleOne_Dt.Rows[0]["SLOT05_H"];
        //    SLOT06_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT06_MESSAGE"];
        //    SLOT06_START = (double)RuleOne_Dt.Rows[0]["SLOT06_START"];
        //    SLOT06_END = (double)RuleOne_Dt.Rows[0]["SLOT06_END"];
        //    SLOT06_RATE = (double)RuleOne_Dt.Rows[0]["SLOT06_RATE"];
        //    SLOT06_MIN = (double)RuleOne_Dt.Rows[0]["SLOT06_MIN"];
        //    SLOT06_MAX = (double)RuleOne_Dt.Rows[0]["SLOT06_MAX"];
        //    SLOT06_A = (string)RuleOne_Dt.Rows[0]["SLOT06_A"];
        //    SLOT06_B = (string)RuleOne_Dt.Rows[0]["SLOT06_B"];
        //    SLOT06_C = (string)RuleOne_Dt.Rows[0]["SLOT06_C"];
        //    SLOT06_D = (string)RuleOne_Dt.Rows[0]["SLOT06_D"];
        //    SLOT06_E = (string)RuleOne_Dt.Rows[0]["SLOT06_E"];
        //    SLOT06_F = (string)RuleOne_Dt.Rows[0]["SLOT06_F"];
        //    SLOT06_G = (string)RuleOne_Dt.Rows[0]["SLOT06_G"];
        //    SLOT06_H = (string)RuleOne_Dt.Rows[0]["SLOT06_H"];
        //    SLOT07_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT07_MESSAGE"];
        //    SLOT07_START = (double)RuleOne_Dt.Rows[0]["SLOT07_START"];
        //    SLOT07_END = (double)RuleOne_Dt.Rows[0]["SLOT07_END"];
        //    SLOT07_RATE = (double)RuleOne_Dt.Rows[0]["SLOT07_RATE"];
        //    SLOT07_MIN = (double)RuleOne_Dt.Rows[0]["SLOT07_MIN"];
        //    SLOT07_MAX = (double)RuleOne_Dt.Rows[0]["SLOT07_MAX"];
        //    SLOT07_A = (string)RuleOne_Dt.Rows[0]["SLOT07_A"];
        //    SLOT07_B = (string)RuleOne_Dt.Rows[0]["SLOT07_B"];
        //    SLOT07_C = (string)RuleOne_Dt.Rows[0]["SLOT07_C"];
        //    SLOT07_D = (string)RuleOne_Dt.Rows[0]["SLOT07_D"];
        //    SLOT07_E = (string)RuleOne_Dt.Rows[0]["SLOT07_E"];
        //    SLOT07_F = (string)RuleOne_Dt.Rows[0]["SLOT07_F"];
        //    SLOT07_G = (string)RuleOne_Dt.Rows[0]["SLOT07_G"];
        //    SLOT07_H = (string)RuleOne_Dt.Rows[0]["SLOT07_H"];
        //    SLOT08_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT08_MESSAGE"];
        //    SLOT08_START = (double)RuleOne_Dt.Rows[0]["SLOT08_START"];
        //    SLOT08_END = (double)RuleOne_Dt.Rows[0]["SLOT08_END"];
        //    SLOT08_RATE = (double)RuleOne_Dt.Rows[0]["SLOT08_RATE"];
        //    SLOT08_MIN = (double)RuleOne_Dt.Rows[0]["SLOT08_MIN"];
        //    SLOT08_MAX = (double)RuleOne_Dt.Rows[0]["SLOT08_MAX"];
        //    SLOT08_A = (string)RuleOne_Dt.Rows[0]["SLOT08_A"];
        //    SLOT08_B = (string)RuleOne_Dt.Rows[0]["SLOT08_B"];
        //    SLOT08_C = (string)RuleOne_Dt.Rows[0]["SLOT08_C"];
        //    SLOT08_D = (string)RuleOne_Dt.Rows[0]["SLOT08_D"];
        //    SLOT08_E = (string)RuleOne_Dt.Rows[0]["SLOT08_E"];
        //    SLOT08_F = (string)RuleOne_Dt.Rows[0]["SLOT08_F"];
        //    SLOT08_G = (string)RuleOne_Dt.Rows[0]["SLOT08_G"];
        //    SLOT08_H = (string)RuleOne_Dt.Rows[0]["SLOT08_H"];
        //    SLOT09_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT09_MESSAGE"];
        //    SLOT09_START = (double)RuleOne_Dt.Rows[0]["SLOT09_START"];
        //    SLOT09_END = (double)RuleOne_Dt.Rows[0]["SLOT09_END"];
        //    SLOT09_RATE = (double)RuleOne_Dt.Rows[0]["SLOT09_RATE"];
        //    SLOT09_MIN = (double)RuleOne_Dt.Rows[0]["SLOT09_MIN"];
        //    SLOT09_MAX = (double)RuleOne_Dt.Rows[0]["SLOT09_MAX"];
        //    SLOT09_A = (string)RuleOne_Dt.Rows[0]["SLOT09_A"];
        //    SLOT09_B = (string)RuleOne_Dt.Rows[0]["SLOT09_B"];
        //    SLOT09_C = (string)RuleOne_Dt.Rows[0]["SLOT09_C"];
        //    SLOT09_D = (string)RuleOne_Dt.Rows[0]["SLOT09_D"];
        //    SLOT09_E = (string)RuleOne_Dt.Rows[0]["SLOT09_E"];
        //    SLOT09_F = (string)RuleOne_Dt.Rows[0]["SLOT09_F"];
        //    SLOT09_G = (string)RuleOne_Dt.Rows[0]["SLOT09_G"];
        //    SLOT09_H = (string)RuleOne_Dt.Rows[0]["SLOT09_H"];
        //    SLOT10_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT10_MESSAGE"];
        //    SLOT10_START = (double)RuleOne_Dt.Rows[0]["SLOT10_START"];
        //    SLOT10_END = (double)RuleOne_Dt.Rows[0]["SLOT10_END"];
        //    SLOT10_RATE = (double)RuleOne_Dt.Rows[0]["SLOT10_RATE"];
        //    SLOT10_MIN = (double)RuleOne_Dt.Rows[0]["SLOT10_MIN"];
        //    SLOT10_MAX = (double)RuleOne_Dt.Rows[0]["SLOT10_MAX"];
        //    SLOT10_A = (string)RuleOne_Dt.Rows[0]["SLOT10_A"];
        //    SLOT10_B = (string)RuleOne_Dt.Rows[0]["SLOT10_B"];
        //    SLOT10_C = (string)RuleOne_Dt.Rows[0]["SLOT10_C"];
        //    SLOT10_D = (string)RuleOne_Dt.Rows[0]["SLOT10_D"];
        //    SLOT10_E = (string)RuleOne_Dt.Rows[0]["SLOT10_E"];
        //    SLOT10_F = (string)RuleOne_Dt.Rows[0]["SLOT10_F"];
        //    SLOT10_G = (string)RuleOne_Dt.Rows[0]["SLOT10_G"];
        //    SLOT10_H = (string)RuleOne_Dt.Rows[0]["SLOT10_H"];




        //    // Loop
        //    // -----------------------------------
        //    for (int i = 0; i < Royalty_OneRule_OneQuarter_Dt.Rows.Count; i++)
        //    {

        //        // Dati iniziali
        //        NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_QTY_PCS"]), 0);
        //        CUM_NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_QTY_PCS"]), 0);
        //        NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_REVENUE_LCL"]), 2);
        //        CUM_NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_REVENUE_LCL"]), 2);
        //        NET_QTY_TOT_PCS = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_QTY_PCS)", ""), 0);
        //        NET_REVENUE_TOT_LCL = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_REVENUE_LCL)", ""), 2);

        //        Qty = NET_QTY_PCS;
        //        Qty_End = CUM_NET_QTY_PCS;
        //        Qty_Start = Qty_End - Qty;

        //        RevLcl = NET_REVENUE_LCL;
        //        RevLcl_End = CUM_NET_REVENUE_LCL;
        //        RevLcl_Start = RevLcl_End - RevLcl;

        //        if (NET_QTY_TOT_PCS != 0)
        //        {
        //            ASPLcl_TOT = NET_REVENUE_TOT_LCL / NET_QTY_TOT_PCS;
        //        }
        //        else
        //        {
        //            ASPLcl_TOT = 0;
        //        }


        //        // Condition
        //        Condition_By_ASP(
        //            in ASPLcl_TOT,
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT01_MESSAGE,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT02_MESSAGE,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT03_MESSAGE,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT04_MESSAGE,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT05_MESSAGE,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT06_MESSAGE,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT07_MESSAGE,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT08_MESSAGE,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT09_MESSAGE,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in SLOT10_MESSAGE,
        //            ref Condition
        //            );


        //        // Quantity, Revenue
        //        Quantity_And_Revenue_By_ASP(
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in Qty,
        //            in Qty_Start,
        //            in Qty_End,
        //            ref Qty_01,
        //            ref Qty_02,
        //            ref Qty_03,
        //            ref Qty_04,
        //            ref Qty_05,
        //            ref Qty_06,
        //            ref Qty_07,
        //            ref Qty_08,
        //            ref Qty_09,
        //            ref Qty_10,
        //            ref RevLcl,
        //            ref RevLcl_End,
        //            ref RevLcl_Start,
        //            ref RevLcl_01,
        //            ref RevLcl_02,
        //            ref RevLcl_03,
        //            ref RevLcl_04,
        //            ref RevLcl_05,
        //            ref RevLcl_06,
        //            ref RevLcl_07,
        //            ref RevLcl_08,
        //            ref RevLcl_09,
        //            ref RevLcl_10);



        //    }






        //    //// Variabili interne
        //    //// -----------------------------------
        //    //double Id_Agreement = 0;
        //    //string Agreement = "";
        //    //string Model = "";
        //    //double Slot = 0;
        //    //string Agreement_Date_Start = "";
        //    //string Agreement_Date_End = "";
        //    //string PL_String = "";
        //    //string PL_Cond = "";
        //    //string CP_String = "";
        //    //string CP_Cond = "";
        //    //string Customer_String = "";
        //    //string Customer_Cond = "";
        //    //string Condition1 = "";
        //    //double Limit1 = 0;
        //    //double Rate1 = 0;
        //    //double Min1 = 0;
        //    //double Max1 = 0;
        //    //double Extra1A = 0;
        //    //double Extra1B = 0;
        //    //double Extra1C = 0;
        //    //double Extra1D = 0;
        //    //double Extra1E = 0;
        //    //double Extra1F = 0;
        //    //string Condition2 = "";
        //    //double Limit2 = 0;
        //    //double Rate2 = 0;
        //    //double Min2 = 0;
        //    //double Max2 = 0;
        //    //double Extra2A = 0;
        //    //double Extra2B = 0;
        //    //double Extra2C = 0;
        //    //double Extra2D = 0;
        //    //double Extra2E = 0;
        //    //double Extra2F = 0;
        //    //string Condition3 = "";
        //    //double Limit3 = 0;
        //    //double Rate3 = 0;
        //    //double Min3 = 0;
        //    //double Max3 = 0;
        //    //double Extra3A = 0;
        //    //double Extra3B = 0;
        //    //double Extra3C = 0;
        //    //double Extra3D = 0;
        //    //double Extra3E = 0;
        //    //double Extra3F = 0;
        //    //string Condition4 = "";
        //    //double Limit4 = 0;
        //    //double Rate4 = 0;
        //    //double Min4 = 0;
        //    //double Max4 = 0;
        //    //double Extra4A = 0;
        //    //double Extra4B = 0;
        //    //double Extra4C = 0;
        //    //double Extra4D = 0;
        //    //double Extra4E = 0;
        //    //double Extra4F = 0;
        //    //string Condition5 = "";
        //    //double Limit5 = 0;
        //    //double Rate5 = 0;
        //    //double Min5 = 0;
        //    //double Max5 = 0;
        //    //double Extra5A = 0;
        //    //double Extra5B = 0;
        //    //double Extra5C = 0;
        //    //double Extra5D = 0;
        //    //double Extra5E = 0;
        //    //double Extra5F = 0;
        //    //string Condition6 = "";
        //    //double Limit6 = 0;
        //    //double Rate6 = 0;
        //    //double Min6 = 0;
        //    //double Max6 = 0;
        //    //double Extra6A = 0;
        //    //double Extra6B = 0;
        //    //double Extra6C = 0;
        //    //double Extra6D = 0;
        //    //double Extra6E = 0;
        //    //double Extra6F = 0;
        //    //double RateOver = 0;
        //    //double MinOver = 0;
        //    //double MaxOver = 0;
        //    //double ExtraOverA = 0;
        //    //double ExtraOverB = 0;
        //    //double ExtraOverC = 0;
        //    //double ExtraOverD = 0;
        //    //double ExtraOverE = 0;
        //    //double ExtraOverF = 0;
        //    //string LclCurrency = "";
        //    //double Min_Cum_Royalty_KLcl = 0;
        //    //double Max_Cum_Royalty_KLcl = 0;

        //    //double QtyL = 0;
        //    //double QtyH = 0;
        //    //double Qty = 0;
        //    //double Qty1 = 0;
        //    //double Qty2 = 0;
        //    //double Qty3 = 0;
        //    //double Qty4 = 0;
        //    //double Qty5 = 0;
        //    //double Qty6 = 0;
        //    //double QtyOver = 0;

        //    //string ConditionL = "";
        //    //string ConditionH = "";
        //    //string Condition = "";

        //    //double RevLclL = 0;
        //    //double RevLclH = 0;
        //    //double RevLcl = 0;
        //    //double RevLcl1 = 0;
        //    //double RevLcl2 = 0;
        //    //double RevLcl3 = 0;
        //    //double RevLcl4 = 0;
        //    //double RevLcl5 = 0;
        //    //double RevLcl6 = 0;
        //    //double RevLclOver = 0;

        //    //double RateOnPcs1 = 0;
        //    //double RateOnPcs2 = 0;
        //    //double RateOnPcs3 = 0;
        //    //double RateOnPcs4 = 0;
        //    //double RateOnPcs5 = 0;
        //    //double RateOnPcs6 = 0;
        //    //double RateOnPcsOver = 0;

        //    //double RateOnRev1 = 0;
        //    //double RateOnRev2 = 0;
        //    //double RateOnRev3 = 0;
        //    //double RateOnRev4 = 0;
        //    //double RateOnRev5 = 0;
        //    //double RateOnRev6 = 0;
        //    //double RateOnRevOver = 0;

        //    //double RoyLclL = 0;
        //    //double RoyLclH = 0;
        //    //double RoyLcl = 0;
        //    //double RoyLcl1 = 0;
        //    //double RoyLcl2 = 0;
        //    //double RoyLcl3 = 0;
        //    //double RoyLcl4 = 0;
        //    //double RoyLcl5 = 0;
        //    //double RoyLcl6 = 0;
        //    //double RoyLclOver = 0;

        //    //double RoyUSDL = 0;
        //    //double RoyUSDH = 0;
        //    //double RoyUSD = 0;

        //    //double RoyPaidLcl = 0;
        //    //double RoyPaidLclL = 0;
        //    //double RoyPaidLclH = 0;

        //    //double RoyPaidUSD = 0;
        //    //double RoyPaidUSDL = 0;
        //    //double RoyPaidUSDH = 0;

        //    //double Rate_Lcl_per_pcs = 0;
        //    //double Rate_USD_per_pcs = 0;
        //    //double Rate_Rev_percent = 0;

        //    //double ExchangeRate = 0;

        //    //double ASPLclTot = 0;
        //    //double RevLclTot = 0;
        //    //double QtyTot = 0;


        //    //// Estrae i dati dell'Agreement
        //    //// -----------------------------------
        //    //Id_Agreement = (double)Agreement_QA_Dt.Rows[0]["Id_Agreement"];
        //    //Agreement = Agreement_QA_Dt.Rows[0]["Agreement"].ToString();
        //    //Model = Agreement_QA_Dt.Rows[0]["Model"].ToString();
        //    //Slot = (double)Agreement_QA_Dt.Rows[0]["Slot"];
        //    //Agreement_Date_Start = Agreement_QA_Dt.Rows[0]["Agreement_Date_Start"].ToString();
        //    //Agreement_Date_End = Agreement_QA_Dt.Rows[0]["Agreement_Date_End"].ToString();
        //    //PL_String = Agreement_QA_Dt.Rows[0]["PL_String"].ToString();
        //    //PL_Cond = Agreement_QA_Dt.Rows[0]["PL_Cond"].ToString();
        //    //CP_String = Agreement_QA_Dt.Rows[0]["CP_String"].ToString();
        //    //CP_Cond = Agreement_QA_Dt.Rows[0]["CP_Cond"].ToString();
        //    //Customer_String = Agreement_QA_Dt.Rows[0]["Customer_String"].ToString();
        //    //Customer_Cond = Agreement_QA_Dt.Rows[0]["Customer_Cond"].ToString();
        //    //Condition1 = Agreement_QA_Dt.Rows[0]["Condition1"].ToString();
        //    //Limit1 = (double)Agreement_QA_Dt.Rows[0]["Limit1"];
        //    //Rate1 = (double)Agreement_QA_Dt.Rows[0]["Rate1"];
        //    //Min1 = (double)Agreement_QA_Dt.Rows[0]["Min1"];
        //    //Max1 = (double)Agreement_QA_Dt.Rows[0]["Max1"];
        //    //Extra1A = (double)Agreement_QA_Dt.Rows[0]["Extra1A"];
        //    //Extra1B = (double)Agreement_QA_Dt.Rows[0]["Extra1B"];
        //    //Extra1C = (double)Agreement_QA_Dt.Rows[0]["Extra1C"];
        //    //Extra1D = (double)Agreement_QA_Dt.Rows[0]["Extra1D"];
        //    //Extra1E = (double)Agreement_QA_Dt.Rows[0]["Extra1E"];
        //    //Extra1F = (double)Agreement_QA_Dt.Rows[0]["Extra1F"];
        //    //Condition2 = Agreement_QA_Dt.Rows[0]["Condition2"].ToString();
        //    //Limit2 = (double)Agreement_QA_Dt.Rows[0]["Limit2"];
        //    //Rate2 = (double)Agreement_QA_Dt.Rows[0]["Rate2"];
        //    //Min2 = (double)Agreement_QA_Dt.Rows[0]["Min2"];
        //    //Max2 = (double)Agreement_QA_Dt.Rows[0]["Max2"];
        //    //Extra2A = (double)Agreement_QA_Dt.Rows[0]["Extra2A"];
        //    //Extra2B = (double)Agreement_QA_Dt.Rows[0]["Extra2B"];
        //    //Extra2C = (double)Agreement_QA_Dt.Rows[0]["Extra2C"];
        //    //Extra2D = (double)Agreement_QA_Dt.Rows[0]["Extra2D"];
        //    //Extra2E = (double)Agreement_QA_Dt.Rows[0]["Extra2E"];
        //    //Extra2F = (double)Agreement_QA_Dt.Rows[0]["Extra2F"];
        //    //Condition3 = Agreement_QA_Dt.Rows[0]["Condition3"].ToString();
        //    //Limit3 = (double)Agreement_QA_Dt.Rows[0]["Limit3"];
        //    //Rate3 = (double)Agreement_QA_Dt.Rows[0]["Rate3"];
        //    //Min3 = (double)Agreement_QA_Dt.Rows[0]["Min3"];
        //    //Max3 = (double)Agreement_QA_Dt.Rows[0]["Max3"];
        //    //Extra3A = (double)Agreement_QA_Dt.Rows[0]["Extra3A"];
        //    //Extra3B = (double)Agreement_QA_Dt.Rows[0]["Extra3B"];
        //    //Extra3C = (double)Agreement_QA_Dt.Rows[0]["Extra3C"];
        //    //Extra3D = (double)Agreement_QA_Dt.Rows[0]["Extra3D"];
        //    //Extra3E = (double)Agreement_QA_Dt.Rows[0]["Extra3E"];
        //    //Extra3F = (double)Agreement_QA_Dt.Rows[0]["Extra3F"];
        //    //Condition4 = Agreement_QA_Dt.Rows[0]["Condition4"].ToString();
        //    //Limit4 = (double)Agreement_QA_Dt.Rows[0]["Limit4"];
        //    //Rate4 = (double)Agreement_QA_Dt.Rows[0]["Rate4"];
        //    //Min4 = (double)Agreement_QA_Dt.Rows[0]["Min4"];
        //    //Max4 = (double)Agreement_QA_Dt.Rows[0]["Max4"];
        //    //Extra4A = (double)Agreement_QA_Dt.Rows[0]["Extra4A"];
        //    //Extra4B = (double)Agreement_QA_Dt.Rows[0]["Extra4B"];
        //    //Extra4C = (double)Agreement_QA_Dt.Rows[0]["Extra4C"];
        //    //Extra4D = (double)Agreement_QA_Dt.Rows[0]["Extra4D"];
        //    //Extra4E = (double)Agreement_QA_Dt.Rows[0]["Extra4E"];
        //    //Extra4F = (double)Agreement_QA_Dt.Rows[0]["Extra4F"];
        //    //Condition5 = Agreement_QA_Dt.Rows[0]["Condition5"].ToString();
        //    //Limit5 = (double)Agreement_QA_Dt.Rows[0]["Limit5"];
        //    //Rate5 = (double)Agreement_QA_Dt.Rows[0]["Rate5"];
        //    //Min5 = (double)Agreement_QA_Dt.Rows[0]["Min5"];
        //    //Max5 = (double)Agreement_QA_Dt.Rows[0]["Max5"];
        //    //Extra5A = (double)Agreement_QA_Dt.Rows[0]["Extra5A"];
        //    //Extra5B = (double)Agreement_QA_Dt.Rows[0]["Extra5B"];
        //    //Extra5C = (double)Agreement_QA_Dt.Rows[0]["Extra5C"];
        //    //Extra5D = (double)Agreement_QA_Dt.Rows[0]["Extra5D"];
        //    //Extra5E = (double)Agreement_QA_Dt.Rows[0]["Extra5E"];
        //    //Extra5F = (double)Agreement_QA_Dt.Rows[0]["Extra5F"];
        //    //Condition6 = Agreement_QA_Dt.Rows[0]["Condition6"].ToString();
        //    //Limit6 = (double)Agreement_QA_Dt.Rows[0]["Limit6"];
        //    //Rate6 = (double)Agreement_QA_Dt.Rows[0]["Rate6"];
        //    //Min6 = (double)Agreement_QA_Dt.Rows[0]["Min6"];
        //    //Max6 = (double)Agreement_QA_Dt.Rows[0]["Max6"];
        //    //Extra6A = (double)Agreement_QA_Dt.Rows[0]["Extra6A"];
        //    //Extra6B = (double)Agreement_QA_Dt.Rows[0]["Extra6B"];
        //    //Extra6C = (double)Agreement_QA_Dt.Rows[0]["Extra6C"];
        //    //Extra6D = (double)Agreement_QA_Dt.Rows[0]["Extra6D"];
        //    //Extra6E = (double)Agreement_QA_Dt.Rows[0]["Extra6E"];
        //    //Extra6F = (double)Agreement_QA_Dt.Rows[0]["Extra6F"];
        //    //RateOver = (double)Agreement_QA_Dt.Rows[0]["RateOver"];
        //    //MinOver = (double)Agreement_QA_Dt.Rows[0]["MinOver"];
        //    //MaxOver = (double)Agreement_QA_Dt.Rows[0]["MaxOver"];
        //    //ExtraOverA = (double)Agreement_QA_Dt.Rows[0]["ExtraOverA"];
        //    //ExtraOverB = (double)Agreement_QA_Dt.Rows[0]["ExtraOverB"];
        //    //ExtraOverC = (double)Agreement_QA_Dt.Rows[0]["ExtraOverC"];
        //    //ExtraOverD = (double)Agreement_QA_Dt.Rows[0]["ExtraOverD"];
        //    //ExtraOverE = (double)Agreement_QA_Dt.Rows[0]["ExtraOverE"];
        //    //ExtraOverF = (double)Agreement_QA_Dt.Rows[0]["ExtraOverF"];
        //    //LclCurrency = Agreement_QA_Dt.Rows[0]["LclCurrency"].ToString();
        //    //Min_Cum_Royalty_KLcl = (double)Agreement_QA_Dt.Rows[0]["Min_Cum_Royalty_KLcl"];
        //    //Max_Cum_Royalty_KLcl = (double)Agreement_QA_Dt.Rows[0]["Max_Cum_Royalty_KLcl"];


        //    //// ASP Tot
        //    //// -----------------------------------
        //    //RevLclTot = Math.Round((double)Royalty_QA_Dt.Compute("Sum(Net_Revenue_KLcl)", ""), 4);
        //    //QtyTot = Math.Round((double)Royalty_QA_Dt.Compute("Sum(Net_qty_Kpcs)", ""), 3);
        //    //if (QtyTot != 0) { ASPLclTot = RevLclTot / QtyTot; } else { ASPLclTot = 0; }


        //    //// Condition
        //    //// -----------------------------------
        //    //if (ASPLclTot < Limit1)
        //    //{
        //    //    Condition = Condition1;
        //    //    RateOnRev1 = Rate1;
        //    //}
        //    //else if (ASPLclTot >= Limit1 && ASPLclTot < Limit2)
        //    //{
        //    //    Condition = Condition2;
        //    //    RateOnRev1 = Rate2;
        //    //}
        //    //else if (ASPLclTot >= Limit2 && ASPLclTot < Limit3)
        //    //{
        //    //    Condition = Condition3;
        //    //    RateOnRev1 = Rate3;
        //    //}
        //    //else if (ASPLclTot >= Limit3 && ASPLclTot < Limit4)
        //    //{
        //    //    Condition = Condition4;
        //    //    RateOnRev1 = Rate4;
        //    //}
        //    //else if (ASPLclTot >= Limit4 && ASPLclTot < Limit5)
        //    //{
        //    //    Condition = Condition5;
        //    //    RateOnRev1 = Rate5;
        //    //}
        //    //else if (ASPLclTot >= Limit5 && ASPLclTot < Limit6)
        //    //{
        //    //    Condition = Condition6;
        //    //    RateOnRev1 = Rate6;
        //    //}
        //    //else if (ASPLclTot >= Limit6)
        //    //{
        //    //    Condition = "Over";
        //    //    RateOnRev1 = RateOver;
        //    //}
        //    //else
        //    //{
        //    //    Condition = "ERR";
        //    //    RateOnRev1 = Rate1;
        //    //}


        //    //// Loop
        //    //// -----------------------------------
        //    //for (int RowI = 0; RowI <= Royalty_QA_Dt.Rows.Count - 1; RowI++)
        //    //{

        //    //    // Dati iniziali 
        //    //    // -----------------------------------
        //    //    ExchangeRate = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["ExchangeRate"]), 4);
        //    //    if (ExchangeRate == 0) { ExchangeRate = 1; }

        //    //    RevLcl = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Net_Revenue_KLcl"]), 4);
        //    //    Qty = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Net_qty_Kpcs"]), 3);

        //    //    RoyLcl = 0;
        //    //    RoyUSD = 0;
        //    //    RoyPaidLcl = 0;
        //    //    RoyPaidUSD = 0;
        //    //    Rate_Lcl_per_pcs = 0;
        //    //    Rate_USD_per_pcs = 0;
        //    //    Rate_Rev_percent = 0;

        //    //    if (RowI == 0)
        //    //    {
        //    //        RoyLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_Royalty_KLcl"]), 4);
        //    //        RoyUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_Royalty_KUSD"]), 4);
        //    //        RoyPaidLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_RoyaltyPaid_KLcl"]), 4);
        //    //        RoyPaidUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_RoyaltyPaid_KUSD"]), 4);
        //    //    }
        //    //    else
        //    //    {
        //    //        RoyLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_Royalty_KLcl"]), 4);
        //    //        RoyUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_Royalty_KUSD"]), 4);
        //    //        RoyPaidLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_RoyaltyPaid_KLcl"]), 4);
        //    //        RoyPaidUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_RoyaltyPaid_KUSD"]), 4);
        //    //    }


        //    //    // Roy 
        //    //    // -----------------------------------
        //    //    RoyLcl = RateOnRev1 * RevLcl;
        //    //    RoyLclH = RoyLclL + RoyLcl;
        //    //    RoyUSD = RoyLcl * ExchangeRate;
        //    //    RoyUSDH = RoyUSDL + RoyUSD;

        //    //    // Roy Paid
        //    //    // -----------------------------------
        //    //    if (RoyLcl >= 0)
        //    //    {
        //    //        if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH < Min_Cum_Royalty_KLcl) { RoyPaidLcl = 0; }
        //    //        else if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLclH - Min_Cum_Royalty_KLcl; }
        //    //        else if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = Max_Cum_Royalty_KLcl - Min_Cum_Royalty_KLcl; }
        //    //        else if (RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl && RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLcl; }
        //    //        else if (RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl && RoyLclH >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = Max_Cum_Royalty_KLcl - RoyLclL; }
        //    //        else { RoyPaidLcl = 0; }
        //    //    }
        //    //    else
        //    //    {
        //    //        if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL < Min_Cum_Royalty_KLcl) { RoyPaidLcl = 0; }
        //    //        else if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(RoyLclL - Min_Cum_Royalty_KLcl); }
        //    //        else if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(Max_Cum_Royalty_KLcl - Min_Cum_Royalty_KLcl); }
        //    //        else if (RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl && RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLcl; }
        //    //        else if (RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl && RoyLclL >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(Max_Cum_Royalty_KLcl - RoyLclL); }
        //    //        else { RoyPaidLcl = 0; }
        //    //    }
        //    //    RoyPaidLclH = RoyPaidLclL + RoyPaidLcl;
        //    //    RoyPaidUSD = RoyPaidLcl * ExchangeRate;
        //    //    RoyPaidUSDH = RoyPaidUSDL + RoyPaidUSD;

        //    //    // Rate
        //    //    // -----------------------------------
        //    //    if (Qty != 0) { Rate_Lcl_per_pcs = RoyLcl / Qty; } else { Rate_Lcl_per_pcs = 0; }
        //    //    if (Qty != 0) { Rate_USD_per_pcs = RoyUSD / Qty; } else { Rate_USD_per_pcs = 0; }
        //    //    if (RevLcl != 0) { Rate_Rev_percent = RoyLcl / RevLcl; } else { Rate_Rev_percent = 0; }

        //    //    // Salva i dati i RoyaltyQ
        //    //    // -----------------------------------
        //    //    Royalty_QA_Dt.Rows[RowI]["Condition"] = Condition;
        //    //    Royalty_QA_Dt.Rows[RowI]["Royalty_KLcl"] = Math.Round(RoyLcl, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_Royalty_KLcl"] = Math.Round(RoyLclH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Royalty_KUSD"] = Math.Round(RoyUSD, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_Royalty_KUSD"] = Math.Round(RoyUSDH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["RoyaltyPaid_KLcl"] = Math.Round(RoyPaidLcl, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_RoyaltyPaid_KLcl"] = Math.Round(RoyPaidLclH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["RoyaltyPaid_KUSD"] = Math.Round(RoyPaidUSD, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_RoyaltyPaid_KUSD"] = Math.Round(RoyPaidUSDH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_Lcl_per_pcs"] = Rate_Lcl_per_pcs;
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_USD_per_pcs"] = Rate_USD_per_pcs;
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_Rev_percent"] = Rate_Rev_percent;

        //    //}

        //}





        //public void M07_SLOTqty_RATErev_MINasp_RATEadd(ref DataTable RuleOne_Dt, ref DataTable Royalty_OneRule_OneQuarter_Dt)
        //{
        //    // ****************************************************
        //    // MODELLO 07
        //    // SLOT: su quantita'
        //    // RATE: su Revenue
        //    // MIN/MAX RATE: Min ASP e Rate add
        //    //
        //    // ESEMPIO: 
        //    //


        //    // Variabili interne
        //    // -----------------------------------
        //    string AGREEMENT_ID = "";
        //    string AGREEMENT = "";
        //    string VERSION_DATE = "";
        //    string VERSION_DESCR = "";
        //    string MODEL_ACTIVE = "";
        //    string MODEL_INITIAL_MONTH = "";
        //    string MODEL_FINAL_MONTH = "";
        //    string MODEL_TYPE = "";
        //    string MODEL_CURRENCY = "";
        //    double MODEL_NB_SLOT = 0;
        //    double MODEL_MIN_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MIN_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MIN_EACH_QUARTER_ROYALTY = 0;
        //    double MODEL_MAX_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MAX_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MAX_EACH_QUARTER_ROYALTY = 0;
        //    string SELECTION_PL_LIST = "";
        //    string SELECTION_CP_LIST = "";
        //    string SELECTION_CP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = "";
        //    string SLOT01_MESSAGE = "";
        //    double SLOT01_START = 0;
        //    double SLOT01_END = 0;
        //    double SLOT01_RATE = 0;
        //    double SLOT01_MIN = 0;
        //    double SLOT01_MAX = 0;
        //    string SLOT01_A = "";
        //    string SLOT01_B = "";
        //    string SLOT01_C = "";
        //    string SLOT01_D = "";
        //    string SLOT01_E = "";
        //    string SLOT01_F = "";
        //    string SLOT01_G = "";
        //    string SLOT01_H = "";
        //    string SLOT02_MESSAGE = "";
        //    double SLOT02_START = 0;
        //    double SLOT02_END = 0;
        //    double SLOT02_RATE = 0;
        //    double SLOT02_MIN = 0;
        //    double SLOT02_MAX = 0;
        //    string SLOT02_A = "";
        //    string SLOT02_B = "";
        //    string SLOT02_C = "";
        //    string SLOT02_D = "";
        //    string SLOT02_E = "";
        //    string SLOT02_F = "";
        //    string SLOT02_G = "";
        //    string SLOT02_H = "";
        //    string SLOT03_MESSAGE = "";
        //    double SLOT03_START = 0;
        //    double SLOT03_END = 0;
        //    double SLOT03_RATE = 0;
        //    double SLOT03_MIN = 0;
        //    double SLOT03_MAX = 0;
        //    string SLOT03_A = "";
        //    string SLOT03_B = "";
        //    string SLOT03_C = "";
        //    string SLOT03_D = "";
        //    string SLOT03_E = "";
        //    string SLOT03_F = "";
        //    string SLOT03_G = "";
        //    string SLOT03_H = "";
        //    string SLOT04_MESSAGE = "";
        //    double SLOT04_START = 0;
        //    double SLOT04_END = 0;
        //    double SLOT04_RATE = 0;
        //    double SLOT04_MIN = 0;
        //    double SLOT04_MAX = 0;
        //    string SLOT04_A = "";
        //    string SLOT04_B = "";
        //    string SLOT04_C = "";
        //    string SLOT04_D = "";
        //    string SLOT04_E = "";
        //    string SLOT04_F = "";
        //    string SLOT04_G = "";
        //    string SLOT04_H = "";
        //    string SLOT05_MESSAGE = "";
        //    double SLOT05_START = 0;
        //    double SLOT05_END = 0;
        //    double SLOT05_RATE = 0;
        //    double SLOT05_MIN = 0;
        //    double SLOT05_MAX = 0;
        //    string SLOT05_A = "";
        //    string SLOT05_B = "";
        //    string SLOT05_C = "";
        //    string SLOT05_D = "";
        //    string SLOT05_E = "";
        //    string SLOT05_F = "";
        //    string SLOT05_G = "";
        //    string SLOT05_H = "";
        //    string SLOT06_MESSAGE = "";
        //    double SLOT06_START = 0;
        //    double SLOT06_END = 0;
        //    double SLOT06_RATE = 0;
        //    double SLOT06_MIN = 0;
        //    double SLOT06_MAX = 0;
        //    string SLOT06_A = "";
        //    string SLOT06_B = "";
        //    string SLOT06_C = "";
        //    string SLOT06_D = "";
        //    string SLOT06_E = "";
        //    string SLOT06_F = "";
        //    string SLOT06_G = "";
        //    string SLOT06_H = "";
        //    string SLOT07_MESSAGE = "";
        //    double SLOT07_START = 0;
        //    double SLOT07_END = 0;
        //    double SLOT07_RATE = 0;
        //    double SLOT07_MIN = 0;
        //    double SLOT07_MAX = 0;
        //    string SLOT07_A = "";
        //    string SLOT07_B = "";
        //    string SLOT07_C = "";
        //    string SLOT07_D = "";
        //    string SLOT07_E = "";
        //    string SLOT07_F = "";
        //    string SLOT07_G = "";
        //    string SLOT07_H = "";
        //    string SLOT08_MESSAGE = "";
        //    double SLOT08_START = 0;
        //    double SLOT08_END = 0;
        //    double SLOT08_RATE = 0;
        //    double SLOT08_MIN = 0;
        //    double SLOT08_MAX = 0;
        //    string SLOT08_A = "";
        //    string SLOT08_B = "";
        //    string SLOT08_C = "";
        //    string SLOT08_D = "";
        //    string SLOT08_E = "";
        //    string SLOT08_F = "";
        //    string SLOT08_G = "";
        //    string SLOT08_H = "";
        //    string SLOT09_MESSAGE = "";
        //    double SLOT09_START = 0;
        //    double SLOT09_END = 0;
        //    double SLOT09_RATE = 0;
        //    double SLOT09_MIN = 0;
        //    double SLOT09_MAX = 0;
        //    string SLOT09_A = "";
        //    string SLOT09_B = "";
        //    string SLOT09_C = "";
        //    string SLOT09_D = "";
        //    string SLOT09_E = "";
        //    string SLOT09_F = "";
        //    string SLOT09_G = "";
        //    string SLOT09_H = "";
        //    string SLOT10_MESSAGE = "";
        //    double SLOT10_START = 0;
        //    double SLOT10_END = 0;
        //    double SLOT10_RATE = 0;
        //    double SLOT10_MIN = 0;
        //    double SLOT10_MAX = 0;
        //    string SLOT10_A = "";
        //    string SLOT10_B = "";
        //    string SLOT10_C = "";
        //    string SLOT10_D = "";
        //    string SLOT10_E = "";
        //    string SLOT10_F = "";
        //    string SLOT10_G = "";
        //    string SLOT10_H = "";

        //    double NET_QTY_PCS = 0;
        //    double CUM_NET_QTY_PCS = 0;
        //    double NET_REVENUE_LCL = 0;
        //    double CUM_NET_REVENUE_LCL = 0;
        //    double NET_QTY_TOT_PCS = 0;
        //    double NET_REVENUE_TOT_LCL = 0;
        //    double ASPLcl_TOT = 0;

        //    double Qty = 0;
        //    double Qty_Start = 0;
        //    double Qty_End = 0;
        //    double Qty_01 = 0;
        //    double Qty_02 = 0;
        //    double Qty_03 = 0;
        //    double Qty_04 = 0;
        //    double Qty_05 = 0;
        //    double Qty_06 = 0;
        //    double Qty_07 = 0;
        //    double Qty_08 = 0;
        //    double Qty_09 = 0;
        //    double Qty_10 = 0;

        //    double RevLcl = 0;
        //    double RevLcl_Start = 0;
        //    double RevLcl_End = 0;
        //    double RevLcl_01 = 0;
        //    double RevLcl_02 = 0;
        //    double RevLcl_03 = 0;
        //    double RevLcl_04 = 0;
        //    double RevLcl_05 = 0;
        //    double RevLcl_06 = 0;
        //    double RevLcl_07 = 0;
        //    double RevLcl_08 = 0;
        //    double RevLcl_09 = 0;
        //    double RevLcl_10 = 0;

        //    string Slot_Start = "";
        //    string Slot_End = "";

        //    string Condition_Start = "";
        //    string Condition_End = "";
        //    string Condition = "";


        //    // Estrae i dati della Rule
        //    // -----------------------------------
        //    AGREEMENT_ID = (string)RuleOne_Dt.Rows[0]["AGREEMENT_ID"];
        //    AGREEMENT = (string)RuleOne_Dt.Rows[0]["AGREEMENT"];
        //    VERSION_DATE = (string)RuleOne_Dt.Rows[0]["VERSION_DATE"];
        //    VERSION_DESCR = (string)RuleOne_Dt.Rows[0]["VERSION_DESCR"];
        //    MODEL_ACTIVE = (string)RuleOne_Dt.Rows[0]["MODEL_ACTIVE"];
        //    MODEL_INITIAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_INITIAL_MONTH"];
        //    MODEL_FINAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_FINAL_MONTH"];
        //    MODEL_TYPE = (string)RuleOne_Dt.Rows[0]["MODEL_TYPE"];
        //    MODEL_CURRENCY = (string)RuleOne_Dt.Rows[0]["MODEL_CURRENCY"];
        //    MODEL_NB_SLOT = (double)RuleOne_Dt.Rows[0]["MODEL_NB_SLOT"];
        //    MODEL_MIN_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_ACCUMULATED_ROYALTY"];
        //    MODEL_MIN_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_YEAR_ROYALTY"];
        //    MODEL_MIN_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_QUARTER_ROYALTY"];
        //    MODEL_MAX_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_ACCUMULATED_ROYALTY"];
        //    MODEL_MAX_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_YEAR_ROYALTY"];
        //    MODEL_MAX_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_QUARTER_ROYALTY"];
        //    SELECTION_PL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_PL_LIST"];
        //    SELECTION_CP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_LIST"];
        //    SELECTION_CP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_LIST"];
        //    SELECTION_CUSTOMER_FINAL_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_LIST"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_LIST"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_LIST"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION"];
        //    SLOT01_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT01_MESSAGE"];
        //    SLOT01_START = (double)RuleOne_Dt.Rows[0]["SLOT01_START"];
        //    SLOT01_END = (double)RuleOne_Dt.Rows[0]["SLOT01_END"];
        //    SLOT01_RATE = (double)RuleOne_Dt.Rows[0]["SLOT01_RATE"];
        //    SLOT01_MIN = (double)RuleOne_Dt.Rows[0]["SLOT01_MIN"];
        //    SLOT01_MAX = (double)RuleOne_Dt.Rows[0]["SLOT01_MAX"];
        //    SLOT01_A = (string)RuleOne_Dt.Rows[0]["SLOT01_A"];
        //    SLOT01_B = (string)RuleOne_Dt.Rows[0]["SLOT01_B"];
        //    SLOT01_C = (string)RuleOne_Dt.Rows[0]["SLOT01_C"];
        //    SLOT01_D = (string)RuleOne_Dt.Rows[0]["SLOT01_D"];
        //    SLOT01_E = (string)RuleOne_Dt.Rows[0]["SLOT01_E"];
        //    SLOT01_F = (string)RuleOne_Dt.Rows[0]["SLOT01_F"];
        //    SLOT01_G = (string)RuleOne_Dt.Rows[0]["SLOT01_G"];
        //    SLOT01_H = (string)RuleOne_Dt.Rows[0]["SLOT01_H"];
        //    SLOT02_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT02_MESSAGE"];
        //    SLOT02_START = (double)RuleOne_Dt.Rows[0]["SLOT02_START"];
        //    SLOT02_END = (double)RuleOne_Dt.Rows[0]["SLOT02_END"];
        //    SLOT02_RATE = (double)RuleOne_Dt.Rows[0]["SLOT02_RATE"];
        //    SLOT02_MIN = (double)RuleOne_Dt.Rows[0]["SLOT02_MIN"];
        //    SLOT02_MAX = (double)RuleOne_Dt.Rows[0]["SLOT02_MAX"];
        //    SLOT02_A = (string)RuleOne_Dt.Rows[0]["SLOT02_A"];
        //    SLOT02_B = (string)RuleOne_Dt.Rows[0]["SLOT02_B"];
        //    SLOT02_C = (string)RuleOne_Dt.Rows[0]["SLOT02_C"];
        //    SLOT02_D = (string)RuleOne_Dt.Rows[0]["SLOT02_D"];
        //    SLOT02_E = (string)RuleOne_Dt.Rows[0]["SLOT02_E"];
        //    SLOT02_F = (string)RuleOne_Dt.Rows[0]["SLOT02_F"];
        //    SLOT02_G = (string)RuleOne_Dt.Rows[0]["SLOT02_G"];
        //    SLOT02_H = (string)RuleOne_Dt.Rows[0]["SLOT02_H"];
        //    SLOT03_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT03_MESSAGE"];
        //    SLOT03_START = (double)RuleOne_Dt.Rows[0]["SLOT03_START"];
        //    SLOT03_END = (double)RuleOne_Dt.Rows[0]["SLOT03_END"];
        //    SLOT03_RATE = (double)RuleOne_Dt.Rows[0]["SLOT03_RATE"];
        //    SLOT03_MIN = (double)RuleOne_Dt.Rows[0]["SLOT03_MIN"];
        //    SLOT03_MAX = (double)RuleOne_Dt.Rows[0]["SLOT03_MAX"];
        //    SLOT03_A = (string)RuleOne_Dt.Rows[0]["SLOT03_A"];
        //    SLOT03_B = (string)RuleOne_Dt.Rows[0]["SLOT03_B"];
        //    SLOT03_C = (string)RuleOne_Dt.Rows[0]["SLOT03_C"];
        //    SLOT03_D = (string)RuleOne_Dt.Rows[0]["SLOT03_D"];
        //    SLOT03_E = (string)RuleOne_Dt.Rows[0]["SLOT03_E"];
        //    SLOT03_F = (string)RuleOne_Dt.Rows[0]["SLOT03_F"];
        //    SLOT03_G = (string)RuleOne_Dt.Rows[0]["SLOT03_G"];
        //    SLOT03_H = (string)RuleOne_Dt.Rows[0]["SLOT03_H"];
        //    SLOT04_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT04_MESSAGE"];
        //    SLOT04_START = (double)RuleOne_Dt.Rows[0]["SLOT04_START"];
        //    SLOT04_END = (double)RuleOne_Dt.Rows[0]["SLOT04_END"];
        //    SLOT04_RATE = (double)RuleOne_Dt.Rows[0]["SLOT04_RATE"];
        //    SLOT04_MIN = (double)RuleOne_Dt.Rows[0]["SLOT04_MIN"];
        //    SLOT04_MAX = (double)RuleOne_Dt.Rows[0]["SLOT04_MAX"];
        //    SLOT04_A = (string)RuleOne_Dt.Rows[0]["SLOT04_A"];
        //    SLOT04_B = (string)RuleOne_Dt.Rows[0]["SLOT04_B"];
        //    SLOT04_C = (string)RuleOne_Dt.Rows[0]["SLOT04_C"];
        //    SLOT04_D = (string)RuleOne_Dt.Rows[0]["SLOT04_D"];
        //    SLOT04_E = (string)RuleOne_Dt.Rows[0]["SLOT04_E"];
        //    SLOT04_F = (string)RuleOne_Dt.Rows[0]["SLOT04_F"];
        //    SLOT04_G = (string)RuleOne_Dt.Rows[0]["SLOT04_G"];
        //    SLOT04_H = (string)RuleOne_Dt.Rows[0]["SLOT04_H"];
        //    SLOT05_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT05_MESSAGE"];
        //    SLOT05_START = (double)RuleOne_Dt.Rows[0]["SLOT05_START"];
        //    SLOT05_END = (double)RuleOne_Dt.Rows[0]["SLOT05_END"];
        //    SLOT05_RATE = (double)RuleOne_Dt.Rows[0]["SLOT05_RATE"];
        //    SLOT05_MIN = (double)RuleOne_Dt.Rows[0]["SLOT05_MIN"];
        //    SLOT05_MAX = (double)RuleOne_Dt.Rows[0]["SLOT05_MAX"];
        //    SLOT05_A = (string)RuleOne_Dt.Rows[0]["SLOT05_A"];
        //    SLOT05_B = (string)RuleOne_Dt.Rows[0]["SLOT05_B"];
        //    SLOT05_C = (string)RuleOne_Dt.Rows[0]["SLOT05_C"];
        //    SLOT05_D = (string)RuleOne_Dt.Rows[0]["SLOT05_D"];
        //    SLOT05_E = (string)RuleOne_Dt.Rows[0]["SLOT05_E"];
        //    SLOT05_F = (string)RuleOne_Dt.Rows[0]["SLOT05_F"];
        //    SLOT05_G = (string)RuleOne_Dt.Rows[0]["SLOT05_G"];
        //    SLOT05_H = (string)RuleOne_Dt.Rows[0]["SLOT05_H"];
        //    SLOT06_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT06_MESSAGE"];
        //    SLOT06_START = (double)RuleOne_Dt.Rows[0]["SLOT06_START"];
        //    SLOT06_END = (double)RuleOne_Dt.Rows[0]["SLOT06_END"];
        //    SLOT06_RATE = (double)RuleOne_Dt.Rows[0]["SLOT06_RATE"];
        //    SLOT06_MIN = (double)RuleOne_Dt.Rows[0]["SLOT06_MIN"];
        //    SLOT06_MAX = (double)RuleOne_Dt.Rows[0]["SLOT06_MAX"];
        //    SLOT06_A = (string)RuleOne_Dt.Rows[0]["SLOT06_A"];
        //    SLOT06_B = (string)RuleOne_Dt.Rows[0]["SLOT06_B"];
        //    SLOT06_C = (string)RuleOne_Dt.Rows[0]["SLOT06_C"];
        //    SLOT06_D = (string)RuleOne_Dt.Rows[0]["SLOT06_D"];
        //    SLOT06_E = (string)RuleOne_Dt.Rows[0]["SLOT06_E"];
        //    SLOT06_F = (string)RuleOne_Dt.Rows[0]["SLOT06_F"];
        //    SLOT06_G = (string)RuleOne_Dt.Rows[0]["SLOT06_G"];
        //    SLOT06_H = (string)RuleOne_Dt.Rows[0]["SLOT06_H"];
        //    SLOT07_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT07_MESSAGE"];
        //    SLOT07_START = (double)RuleOne_Dt.Rows[0]["SLOT07_START"];
        //    SLOT07_END = (double)RuleOne_Dt.Rows[0]["SLOT07_END"];
        //    SLOT07_RATE = (double)RuleOne_Dt.Rows[0]["SLOT07_RATE"];
        //    SLOT07_MIN = (double)RuleOne_Dt.Rows[0]["SLOT07_MIN"];
        //    SLOT07_MAX = (double)RuleOne_Dt.Rows[0]["SLOT07_MAX"];
        //    SLOT07_A = (string)RuleOne_Dt.Rows[0]["SLOT07_A"];
        //    SLOT07_B = (string)RuleOne_Dt.Rows[0]["SLOT07_B"];
        //    SLOT07_C = (string)RuleOne_Dt.Rows[0]["SLOT07_C"];
        //    SLOT07_D = (string)RuleOne_Dt.Rows[0]["SLOT07_D"];
        //    SLOT07_E = (string)RuleOne_Dt.Rows[0]["SLOT07_E"];
        //    SLOT07_F = (string)RuleOne_Dt.Rows[0]["SLOT07_F"];
        //    SLOT07_G = (string)RuleOne_Dt.Rows[0]["SLOT07_G"];
        //    SLOT07_H = (string)RuleOne_Dt.Rows[0]["SLOT07_H"];
        //    SLOT08_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT08_MESSAGE"];
        //    SLOT08_START = (double)RuleOne_Dt.Rows[0]["SLOT08_START"];
        //    SLOT08_END = (double)RuleOne_Dt.Rows[0]["SLOT08_END"];
        //    SLOT08_RATE = (double)RuleOne_Dt.Rows[0]["SLOT08_RATE"];
        //    SLOT08_MIN = (double)RuleOne_Dt.Rows[0]["SLOT08_MIN"];
        //    SLOT08_MAX = (double)RuleOne_Dt.Rows[0]["SLOT08_MAX"];
        //    SLOT08_A = (string)RuleOne_Dt.Rows[0]["SLOT08_A"];
        //    SLOT08_B = (string)RuleOne_Dt.Rows[0]["SLOT08_B"];
        //    SLOT08_C = (string)RuleOne_Dt.Rows[0]["SLOT08_C"];
        //    SLOT08_D = (string)RuleOne_Dt.Rows[0]["SLOT08_D"];
        //    SLOT08_E = (string)RuleOne_Dt.Rows[0]["SLOT08_E"];
        //    SLOT08_F = (string)RuleOne_Dt.Rows[0]["SLOT08_F"];
        //    SLOT08_G = (string)RuleOne_Dt.Rows[0]["SLOT08_G"];
        //    SLOT08_H = (string)RuleOne_Dt.Rows[0]["SLOT08_H"];
        //    SLOT09_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT09_MESSAGE"];
        //    SLOT09_START = (double)RuleOne_Dt.Rows[0]["SLOT09_START"];
        //    SLOT09_END = (double)RuleOne_Dt.Rows[0]["SLOT09_END"];
        //    SLOT09_RATE = (double)RuleOne_Dt.Rows[0]["SLOT09_RATE"];
        //    SLOT09_MIN = (double)RuleOne_Dt.Rows[0]["SLOT09_MIN"];
        //    SLOT09_MAX = (double)RuleOne_Dt.Rows[0]["SLOT09_MAX"];
        //    SLOT09_A = (string)RuleOne_Dt.Rows[0]["SLOT09_A"];
        //    SLOT09_B = (string)RuleOne_Dt.Rows[0]["SLOT09_B"];
        //    SLOT09_C = (string)RuleOne_Dt.Rows[0]["SLOT09_C"];
        //    SLOT09_D = (string)RuleOne_Dt.Rows[0]["SLOT09_D"];
        //    SLOT09_E = (string)RuleOne_Dt.Rows[0]["SLOT09_E"];
        //    SLOT09_F = (string)RuleOne_Dt.Rows[0]["SLOT09_F"];
        //    SLOT09_G = (string)RuleOne_Dt.Rows[0]["SLOT09_G"];
        //    SLOT09_H = (string)RuleOne_Dt.Rows[0]["SLOT09_H"];
        //    SLOT10_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT10_MESSAGE"];
        //    SLOT10_START = (double)RuleOne_Dt.Rows[0]["SLOT10_START"];
        //    SLOT10_END = (double)RuleOne_Dt.Rows[0]["SLOT10_END"];
        //    SLOT10_RATE = (double)RuleOne_Dt.Rows[0]["SLOT10_RATE"];
        //    SLOT10_MIN = (double)RuleOne_Dt.Rows[0]["SLOT10_MIN"];
        //    SLOT10_MAX = (double)RuleOne_Dt.Rows[0]["SLOT10_MAX"];
        //    SLOT10_A = (string)RuleOne_Dt.Rows[0]["SLOT10_A"];
        //    SLOT10_B = (string)RuleOne_Dt.Rows[0]["SLOT10_B"];
        //    SLOT10_C = (string)RuleOne_Dt.Rows[0]["SLOT10_C"];
        //    SLOT10_D = (string)RuleOne_Dt.Rows[0]["SLOT10_D"];
        //    SLOT10_E = (string)RuleOne_Dt.Rows[0]["SLOT10_E"];
        //    SLOT10_F = (string)RuleOne_Dt.Rows[0]["SLOT10_F"];
        //    SLOT10_G = (string)RuleOne_Dt.Rows[0]["SLOT10_G"];
        //    SLOT10_H = (string)RuleOne_Dt.Rows[0]["SLOT10_H"];




        //    // Loop
        //    // -----------------------------------
        //    for (int i = 0; i < Royalty_OneRule_OneQuarter_Dt.Rows.Count; i++)
        //    {

        //        // Dati iniziali
        //        NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_QTY_PCS"]), 0);
        //        CUM_NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_QTY_PCS"]), 0);
        //        NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_REVENUE_LCL"]), 2);
        //        CUM_NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_REVENUE_LCL"]), 2);
        //        NET_QTY_TOT_PCS = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_QTY_PCS)", ""), 0);
        //        NET_REVENUE_TOT_LCL = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_REVENUE_LCL)", ""), 2);

        //        Qty = NET_QTY_PCS;
        //        Qty_End = CUM_NET_QTY_PCS;
        //        Qty_Start = Qty_End - Qty;

        //        RevLcl = NET_REVENUE_LCL;
        //        RevLcl_End = CUM_NET_REVENUE_LCL;
        //        RevLcl_Start = RevLcl_End - RevLcl;

        //        if (NET_QTY_TOT_PCS != 0)
        //        {
        //            ASPLcl_TOT = NET_REVENUE_TOT_LCL / NET_QTY_TOT_PCS;
        //        }
        //        else
        //        {
        //            ASPLcl_TOT = 0;
        //        }


        //        // Condition
        //        Condition_By_Qty(
        //            in Qty_Start,
        //            in Qty_End,
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT01_MESSAGE,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT02_MESSAGE,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT03_MESSAGE,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT04_MESSAGE,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT05_MESSAGE,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT06_MESSAGE,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT07_MESSAGE,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT08_MESSAGE,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT09_MESSAGE,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in SLOT10_MESSAGE,
        //            ref Condition_Start,
        //            ref Condition_End,
        //            ref Condition
        //            );


        //        // Quantity, Revenue
        //        Quantity_And_Revenue_By_Qty(
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in Qty,
        //            in Qty_Start,
        //            in Qty_End,
        //            ref Qty_01,
        //            ref Qty_02,
        //            ref Qty_03,
        //            ref Qty_04,
        //            ref Qty_05,
        //            ref Qty_06,
        //            ref Qty_07,
        //            ref Qty_08,
        //            ref Qty_09,
        //            ref Qty_10,
        //            ref RevLcl,
        //            ref RevLcl_End,
        //            ref RevLcl_Start,
        //            ref RevLcl_01,
        //            ref RevLcl_02,
        //            ref RevLcl_03,
        //            ref RevLcl_04,
        //            ref RevLcl_05,
        //            ref RevLcl_06,
        //            ref RevLcl_07,
        //            ref RevLcl_08,
        //            ref RevLcl_09,
        //            ref RevLcl_10);



        //    }







        //    //// Variabili interne
        //    //// -----------------------------------
        //    //double Id_Agreement = 0;
        //    //string Agreement = "";
        //    //string Model = "";
        //    //double Slot = 0;
        //    //string Agreement_Date_Start = "";
        //    //string Agreement_Date_End = "";
        //    //string PL_String = "";
        //    //string PL_Cond = "";
        //    //string CP_String = "";
        //    //string CP_Cond = "";
        //    //string Customer_String = "";
        //    //string Customer_Cond = "";
        //    //string Condition1 = "";
        //    //double Limit1 = 0;
        //    //double Rate1 = 0;
        //    //double Min1 = 0;
        //    //double Max1 = 0;
        //    //double Extra1A = 0;
        //    //double Extra1B = 0;
        //    //double Extra1C = 0;
        //    //double Extra1D = 0;
        //    //double Extra1E = 0;
        //    //double Extra1F = 0;
        //    //string Condition2 = "";
        //    //double Limit2 = 0;
        //    //double Rate2 = 0;
        //    //double Min2 = 0;
        //    //double Max2 = 0;
        //    //double Extra2A = 0;
        //    //double Extra2B = 0;
        //    //double Extra2C = 0;
        //    //double Extra2D = 0;
        //    //double Extra2E = 0;
        //    //double Extra2F = 0;
        //    //string Condition3 = "";
        //    //double Limit3 = 0;
        //    //double Rate3 = 0;
        //    //double Min3 = 0;
        //    //double Max3 = 0;
        //    //double Extra3A = 0;
        //    //double Extra3B = 0;
        //    //double Extra3C = 0;
        //    //double Extra3D = 0;
        //    //double Extra3E = 0;
        //    //double Extra3F = 0;
        //    //string Condition4 = "";
        //    //double Limit4 = 0;
        //    //double Rate4 = 0;
        //    //double Min4 = 0;
        //    //double Max4 = 0;
        //    //double Extra4A = 0;
        //    //double Extra4B = 0;
        //    //double Extra4C = 0;
        //    //double Extra4D = 0;
        //    //double Extra4E = 0;
        //    //double Extra4F = 0;
        //    //string Condition5 = "";
        //    //double Limit5 = 0;
        //    //double Rate5 = 0;
        //    //double Min5 = 0;
        //    //double Max5 = 0;
        //    //double Extra5A = 0;
        //    //double Extra5B = 0;
        //    //double Extra5C = 0;
        //    //double Extra5D = 0;
        //    //double Extra5E = 0;
        //    //double Extra5F = 0;
        //    //string Condition6 = "";
        //    //double Limit6 = 0;
        //    //double Rate6 = 0;
        //    //double Min6 = 0;
        //    //double Max6 = 0;
        //    //double Extra6A = 0;
        //    //double Extra6B = 0;
        //    //double Extra6C = 0;
        //    //double Extra6D = 0;
        //    //double Extra6E = 0;
        //    //double Extra6F = 0;
        //    //double RateOver = 0;
        //    //double MinOver = 0;
        //    //double MaxOver = 0;
        //    //double ExtraOverA = 0;
        //    //double ExtraOverB = 0;
        //    //double ExtraOverC = 0;
        //    //double ExtraOverD = 0;
        //    //double ExtraOverE = 0;
        //    //double ExtraOverF = 0;
        //    //string LclCurrency = "";
        //    //double Min_Cum_Royalty_KLcl = 0;
        //    //double Max_Cum_Royalty_KLcl = 0;

        //    //double QtyL = 0;
        //    //double QtyH = 0;
        //    //double Qty = 0;
        //    //double Qty1 = 0;
        //    //double Qty2 = 0;
        //    //double Qty3 = 0;
        //    //double Qty4 = 0;
        //    //double Qty5 = 0;
        //    //double Qty6 = 0;
        //    //double QtyOver = 0;

        //    //string ConditionL = "";
        //    //string ConditionH = "";
        //    //string Condition = "";

        //    //double RevLclL = 0;
        //    //double RevLclH = 0;
        //    //double RevLcl = 0;
        //    //double RevLcl1 = 0;
        //    //double RevLcl2 = 0;
        //    //double RevLcl3 = 0;
        //    //double RevLcl4 = 0;
        //    //double RevLcl5 = 0;
        //    //double RevLcl6 = 0;
        //    //double RevLclOver = 0;

        //    //double RateOnPcs1 = 0;
        //    //double RateOnPcs2 = 0;
        //    //double RateOnPcs3 = 0;
        //    //double RateOnPcs4 = 0;
        //    //double RateOnPcs5 = 0;
        //    //double RateOnPcs6 = 0;
        //    //double RateOnPcsOver = 0;

        //    //double RateOnRev1 = 0;
        //    //double RateOnRev2 = 0;
        //    //double RateOnRev3 = 0;
        //    //double RateOnRev4 = 0;
        //    //double RateOnRev5 = 0;
        //    //double RateOnRev6 = 0;
        //    //double RateOnRevOver = 0;

        //    //double RoyLclL = 0;
        //    //double RoyLclH = 0;
        //    //double RoyLcl = 0;
        //    //double RoyLcl1 = 0;
        //    //double RoyLcl2 = 0;
        //    //double RoyLcl3 = 0;
        //    //double RoyLcl4 = 0;
        //    //double RoyLcl5 = 0;
        //    //double RoyLcl6 = 0;
        //    //double RoyLclOver = 0;

        //    //double RoyUSDL = 0;
        //    //double RoyUSDH = 0;
        //    //double RoyUSD = 0;

        //    //double RoyPaidLcl = 0;
        //    //double RoyPaidLclL = 0;
        //    //double RoyPaidLclH = 0;

        //    //double RoyPaidUSD = 0;
        //    //double RoyPaidUSDL = 0;
        //    //double RoyPaidUSDH = 0;

        //    //double Rate_Lcl_per_pcs = 0;
        //    //double Rate_USD_per_pcs = 0;
        //    //double Rate_Rev_percent = 0;

        //    //double ExchangeRate = 0;

        //    //double ASPLclTot = 0;
        //    //double RevLclTot = 0;
        //    //double QtyTot = 0;


        //    //// Estrae i dati dell'Agreement
        //    //// -----------------------------------
        //    //Id_Agreement = (double)Agreement_QA_Dt.Rows[0]["Id_Agreement"];
        //    //Agreement = Agreement_QA_Dt.Rows[0]["Agreement"].ToString();
        //    //Model = Agreement_QA_Dt.Rows[0]["Model"].ToString();
        //    //Slot = (double)Agreement_QA_Dt.Rows[0]["Slot"];
        //    //Agreement_Date_Start = Agreement_QA_Dt.Rows[0]["Agreement_Date_Start"].ToString();
        //    //Agreement_Date_End = Agreement_QA_Dt.Rows[0]["Agreement_Date_End"].ToString();
        //    //PL_String = Agreement_QA_Dt.Rows[0]["PL_String"].ToString();
        //    //PL_Cond = Agreement_QA_Dt.Rows[0]["PL_Cond"].ToString();
        //    //CP_String = Agreement_QA_Dt.Rows[0]["CP_String"].ToString();
        //    //CP_Cond = Agreement_QA_Dt.Rows[0]["CP_Cond"].ToString();
        //    //Customer_String = Agreement_QA_Dt.Rows[0]["Customer_String"].ToString();
        //    //Customer_Cond = Agreement_QA_Dt.Rows[0]["Customer_Cond"].ToString();
        //    //Condition1 = Agreement_QA_Dt.Rows[0]["Condition1"].ToString();
        //    //Limit1 = (double)Agreement_QA_Dt.Rows[0]["Limit1"];
        //    //Rate1 = (double)Agreement_QA_Dt.Rows[0]["Rate1"];
        //    //Min1 = (double)Agreement_QA_Dt.Rows[0]["Min1"];
        //    //Max1 = (double)Agreement_QA_Dt.Rows[0]["Max1"];
        //    //Extra1A = (double)Agreement_QA_Dt.Rows[0]["Extra1A"];
        //    //Extra1B = (double)Agreement_QA_Dt.Rows[0]["Extra1B"];
        //    //Extra1C = (double)Agreement_QA_Dt.Rows[0]["Extra1C"];
        //    //Extra1D = (double)Agreement_QA_Dt.Rows[0]["Extra1D"];
        //    //Extra1E = (double)Agreement_QA_Dt.Rows[0]["Extra1E"];
        //    //Extra1F = (double)Agreement_QA_Dt.Rows[0]["Extra1F"];
        //    //Condition2 = Agreement_QA_Dt.Rows[0]["Condition2"].ToString();
        //    //Limit2 = (double)Agreement_QA_Dt.Rows[0]["Limit2"];
        //    //Rate2 = (double)Agreement_QA_Dt.Rows[0]["Rate2"];
        //    //Min2 = (double)Agreement_QA_Dt.Rows[0]["Min2"];
        //    //Max2 = (double)Agreement_QA_Dt.Rows[0]["Max2"];
        //    //Extra2A = (double)Agreement_QA_Dt.Rows[0]["Extra2A"];
        //    //Extra2B = (double)Agreement_QA_Dt.Rows[0]["Extra2B"];
        //    //Extra2C = (double)Agreement_QA_Dt.Rows[0]["Extra2C"];
        //    //Extra2D = (double)Agreement_QA_Dt.Rows[0]["Extra2D"];
        //    //Extra2E = (double)Agreement_QA_Dt.Rows[0]["Extra2E"];
        //    //Extra2F = (double)Agreement_QA_Dt.Rows[0]["Extra2F"];
        //    //Condition3 = Agreement_QA_Dt.Rows[0]["Condition3"].ToString();
        //    //Limit3 = (double)Agreement_QA_Dt.Rows[0]["Limit3"];
        //    //Rate3 = (double)Agreement_QA_Dt.Rows[0]["Rate3"];
        //    //Min3 = (double)Agreement_QA_Dt.Rows[0]["Min3"];
        //    //Max3 = (double)Agreement_QA_Dt.Rows[0]["Max3"];
        //    //Extra3A = (double)Agreement_QA_Dt.Rows[0]["Extra3A"];
        //    //Extra3B = (double)Agreement_QA_Dt.Rows[0]["Extra3B"];
        //    //Extra3C = (double)Agreement_QA_Dt.Rows[0]["Extra3C"];
        //    //Extra3D = (double)Agreement_QA_Dt.Rows[0]["Extra3D"];
        //    //Extra3E = (double)Agreement_QA_Dt.Rows[0]["Extra3E"];
        //    //Extra3F = (double)Agreement_QA_Dt.Rows[0]["Extra3F"];
        //    //Condition4 = Agreement_QA_Dt.Rows[0]["Condition4"].ToString();
        //    //Limit4 = (double)Agreement_QA_Dt.Rows[0]["Limit4"];
        //    //Rate4 = (double)Agreement_QA_Dt.Rows[0]["Rate4"];
        //    //Min4 = (double)Agreement_QA_Dt.Rows[0]["Min4"];
        //    //Max4 = (double)Agreement_QA_Dt.Rows[0]["Max4"];
        //    //Extra4A = (double)Agreement_QA_Dt.Rows[0]["Extra4A"];
        //    //Extra4B = (double)Agreement_QA_Dt.Rows[0]["Extra4B"];
        //    //Extra4C = (double)Agreement_QA_Dt.Rows[0]["Extra4C"];
        //    //Extra4D = (double)Agreement_QA_Dt.Rows[0]["Extra4D"];
        //    //Extra4E = (double)Agreement_QA_Dt.Rows[0]["Extra4E"];
        //    //Extra4F = (double)Agreement_QA_Dt.Rows[0]["Extra4F"];
        //    //Condition5 = Agreement_QA_Dt.Rows[0]["Condition5"].ToString();
        //    //Limit5 = (double)Agreement_QA_Dt.Rows[0]["Limit5"];
        //    //Rate5 = (double)Agreement_QA_Dt.Rows[0]["Rate5"];
        //    //Min5 = (double)Agreement_QA_Dt.Rows[0]["Min5"];
        //    //Max5 = (double)Agreement_QA_Dt.Rows[0]["Max5"];
        //    //Extra5A = (double)Agreement_QA_Dt.Rows[0]["Extra5A"];
        //    //Extra5B = (double)Agreement_QA_Dt.Rows[0]["Extra5B"];
        //    //Extra5C = (double)Agreement_QA_Dt.Rows[0]["Extra5C"];
        //    //Extra5D = (double)Agreement_QA_Dt.Rows[0]["Extra5D"];
        //    //Extra5E = (double)Agreement_QA_Dt.Rows[0]["Extra5E"];
        //    //Extra5F = (double)Agreement_QA_Dt.Rows[0]["Extra5F"];
        //    //Condition6 = Agreement_QA_Dt.Rows[0]["Condition6"].ToString();
        //    //Limit6 = (double)Agreement_QA_Dt.Rows[0]["Limit6"];
        //    //Rate6 = (double)Agreement_QA_Dt.Rows[0]["Rate6"];
        //    //Min6 = (double)Agreement_QA_Dt.Rows[0]["Min6"];
        //    //Max6 = (double)Agreement_QA_Dt.Rows[0]["Max6"];
        //    //Extra6A = (double)Agreement_QA_Dt.Rows[0]["Extra6A"];
        //    //Extra6B = (double)Agreement_QA_Dt.Rows[0]["Extra6B"];
        //    //Extra6C = (double)Agreement_QA_Dt.Rows[0]["Extra6C"];
        //    //Extra6D = (double)Agreement_QA_Dt.Rows[0]["Extra6D"];
        //    //Extra6E = (double)Agreement_QA_Dt.Rows[0]["Extra6E"];
        //    //Extra6F = (double)Agreement_QA_Dt.Rows[0]["Extra6F"];
        //    //RateOver = (double)Agreement_QA_Dt.Rows[0]["RateOver"];
        //    //MinOver = (double)Agreement_QA_Dt.Rows[0]["MinOver"];
        //    //MaxOver = (double)Agreement_QA_Dt.Rows[0]["MaxOver"];
        //    //ExtraOverA = (double)Agreement_QA_Dt.Rows[0]["ExtraOverA"];
        //    //ExtraOverB = (double)Agreement_QA_Dt.Rows[0]["ExtraOverB"];
        //    //ExtraOverC = (double)Agreement_QA_Dt.Rows[0]["ExtraOverC"];
        //    //ExtraOverD = (double)Agreement_QA_Dt.Rows[0]["ExtraOverD"];
        //    //ExtraOverE = (double)Agreement_QA_Dt.Rows[0]["ExtraOverE"];
        //    //ExtraOverF = (double)Agreement_QA_Dt.Rows[0]["ExtraOverF"];
        //    //LclCurrency = Agreement_QA_Dt.Rows[0]["LclCurrency"].ToString();
        //    //Min_Cum_Royalty_KLcl = (double)Agreement_QA_Dt.Rows[0]["Min_Cum_Royalty_KLcl"];
        //    //Max_Cum_Royalty_KLcl = (double)Agreement_QA_Dt.Rows[0]["Max_Cum_Royalty_KLcl"];


        //    //// Loop
        //    //// -----------------------------------
        //    //for (int RowI = 0; RowI <= Royalty_QA_Dt.Rows.Count - 1; RowI++)
        //    //{
        //    //    // Dati iniziali 
        //    //    // -----------------------------------
        //    //    Condition = "";
        //    //    ExchangeRate = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["ExchangeRate"]), 4);
        //    //    if (ExchangeRate == 0) { ExchangeRate = 1; }

        //    //    RevLcl = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Net_Revenue_KLcl"]), 4);
        //    //    RevLclH = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Cum_Net_Revenue_KLcl"]), 4);
        //    //    RevLclL = RevLclH - RevLcl;
        //    //    Qty = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Net_qty_Kpcs"]), 3);
        //    //    QtyH = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Cum_Net_qty_Kpcs"]), 3);
        //    //    QtyL = QtyH - Qty;
        //    //    RoyLcl = 0;
        //    //    RoyUSD = 0;
        //    //    RoyPaidLcl = 0;
        //    //    RoyPaidUSD = 0;
        //    //    Rate_Lcl_per_pcs = 0;
        //    //    Rate_USD_per_pcs = 0;
        //    //    Rate_Rev_percent = 0;

        //    //    if (RowI == 0)
        //    //    {
        //    //        RoyLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_Royalty_KLcl"]), 4);
        //    //        RoyUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_Royalty_KUSD"]), 4);
        //    //        RoyPaidLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_RoyaltyPaid_KLcl"]), 4);
        //    //        RoyPaidUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_RoyaltyPaid_KUSD"]), 4);
        //    //    }
        //    //    else
        //    //    {
        //    //        RoyLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_Royalty_KLcl"]), 4);
        //    //        RoyUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_Royalty_KUSD"]), 4);
        //    //        RoyPaidLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_RoyaltyPaid_KLcl"]), 4);
        //    //        RoyPaidUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_RoyaltyPaid_KUSD"]), 4);
        //    //    }

        //    //    // Condition
        //    //    // -----------------------------------
        //    //    if (QtyL < Limit1) { ConditionL = Condition1; }
        //    //    else if (QtyL >= Limit1 && QtyL < Limit2) { ConditionL = Condition2; }
        //    //    else if (QtyL >= Limit2 && QtyL < Limit3) { ConditionL = Condition3; }
        //    //    else if (QtyL >= Limit3 && QtyL < Limit4) { ConditionL = Condition4; }
        //    //    else if (QtyL >= Limit4 && QtyL < Limit5) { ConditionL = Condition5; }
        //    //    else if (QtyL >= Limit5 && QtyL < Limit6) { ConditionL = Condition6; }
        //    //    else if (QtyL >= Limit6) { ConditionL = "Over"; }
        //    //    else { ConditionL = "ERR"; }

        //    //    if (QtyH < Limit1) { ConditionH = Condition1; }
        //    //    else if (QtyH >= Limit1 && QtyH < Limit2) { ConditionH = Condition2; }
        //    //    else if (QtyH >= Limit2 && QtyH < Limit3) { ConditionH = Condition3; }
        //    //    else if (QtyH >= Limit3 && QtyH < Limit4) { ConditionH = Condition4; }
        //    //    else if (QtyH >= Limit4 && QtyH < Limit5) { ConditionH = Condition5; }
        //    //    else if (QtyH >= Limit5 && QtyH < Limit6) { ConditionH = Condition6; }
        //    //    else if (QtyH >= Limit6) { ConditionL = "Over"; }
        //    //    else { ConditionL = "ERR"; }

        //    //    if (string.Equals(ConditionL, ConditionH))
        //    //    {
        //    //        Condition = ConditionL;
        //    //    }
        //    //    else
        //    //    {
        //    //        Condition = ConditionL + " -> " + ConditionH;
        //    //    }

        //    //    // Quantity
        //    //    // -----------------------------------
        //    //    Qty1 = 0;
        //    //    Qty2 = 0;
        //    //    Qty3 = 0;
        //    //    Qty4 = 0;
        //    //    Qty5 = 0;
        //    //    Qty6 = 0;
        //    //    QtyOver = 0;

        //    //    if (Qty >= 0)
        //    //    {
        //    //        if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition1)) { Qty1 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition2)) { Qty1 = Limit1 - QtyL; Qty2 = QtyH - Limit1; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition3)) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = QtyH - Limit2; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition4)) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = Limit3 - Limit2; Qty4 = QtyH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition5)) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = QtyH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition6)) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, "Over")) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition2)) { Qty2 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition3)) { Qty2 = Limit2 - QtyL; Qty3 = QtyH - Limit2; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition4)) { Qty2 = Limit2 - QtyL; Qty3 = Limit3 - Limit2; Qty4 = QtyH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition5)) { Qty2 = Limit2 - QtyL; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = QtyH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition6)) { Qty2 = Limit2 - QtyL; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, "Over")) { Qty2 = Limit2 - QtyL; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition3)) { Qty3 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition4)) { Qty3 = Limit3 - QtyL; Qty4 = QtyH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition5)) { Qty3 = Limit3 - QtyL; Qty4 = Limit4 - Limit3; Qty5 = QtyH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition6)) { Qty3 = Limit3 - QtyL; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, "Over")) { Qty3 = Limit3 - QtyL; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition4)) { Qty4 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition5)) { Qty4 = Limit4 - QtyL; Qty5 = QtyH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition6)) { Qty4 = Limit4 - QtyL; Qty5 = Limit5 - Limit4; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, "Over")) { Qty4 = Limit4 - QtyL; Qty5 = Limit5 - Limit4; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, Condition5)) { Qty5 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, Condition6)) { Qty5 = Limit5 - QtyL; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, "Over")) { Qty5 = Limit5 - QtyL; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition6) && string.Equals(ConditionH, Condition6)) { Qty6 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition6) && string.Equals(ConditionH, "Over")) { Qty6 = Limit6 - QtyL; QtyOver = QtyH - Limit6; }

        //    //        else { QtyOver = QtyH - QtyL; }

        //    //    }
        //    //    else
        //    //    {
        //    //        if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition1)) { Qty1 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition2)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(QtyL - Limit1); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition3)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(QtyL - Limit2); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition4)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(Limit3 - Limit2); Qty4 = -(QtyL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition5)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(QtyL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition6)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, "Over")) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition2)) { Qty2 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition3)) { Qty2 = -(Limit2 - QtyH); Qty3 = -(QtyL - Limit2); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition4)) { Qty2 = -(Limit2 - QtyH); Qty3 = -(Limit3 - Limit2); Qty4 = -(QtyL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition5)) { Qty2 = -(Limit2 - QtyH); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(QtyL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition6)) { Qty2 = -(Limit2 - QtyH); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, "Over")) { Qty2 = -(Limit2 - QtyH); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition3)) { Qty3 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition4)) { Qty3 = -(Limit3 - QtyH); Qty4 = -(QtyL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition5)) { Qty3 = -(Limit3 - QtyH); Qty4 = -(Limit4 - Limit3); Qty5 = -(QtyL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition6)) { Qty3 = -(Limit3 - QtyH); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, "Over")) { Qty3 = -(Limit3 - QtyH); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition4)) { Qty4 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition5)) { Qty4 = -(Limit4 - QtyH); Qty5 = -(QtyL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition6)) { Qty4 = -(Limit4 - QtyH); Qty5 = -(Limit5 - Limit4); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, "Over")) { Qty4 = -(Limit4 - QtyH); Qty5 = -(Limit5 - Limit4); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, Condition5)) { Qty5 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, Condition6)) { Qty5 = -(Limit5 - QtyH); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, "Over")) { Qty5 = -(Limit5 - QtyH); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition6) && string.Equals(ConditionL, Condition6)) { Qty6 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition6) && string.Equals(ConditionL, "Over")) { Qty6 = -(Limit6 - QtyH); QtyOver = -(QtyL - Limit6); }

        //    //        else { QtyOver = QtyH - QtyL; }

        //    //    }

        //    //    // Net Revenue
        //    //    // -----------------------------------
        //    //    if (Qty != 0 && RevLcl != 0)
        //    //    {
        //    //        RevLcl1 = RevLcl * Qty1 / Qty;
        //    //        RevLcl2 = RevLcl * Qty2 / Qty;
        //    //        RevLcl3 = RevLcl * Qty3 / Qty;
        //    //        RevLcl4 = RevLcl * Qty4 / Qty;
        //    //        RevLcl5 = RevLcl * Qty5 / Qty;
        //    //        RevLcl6 = RevLcl * Qty6 / Qty;
        //    //        RevLclOver = RevLcl * QtyOver / Qty;
        //    //    }
        //    //    else if (Qty != 0 && RevLcl == 0)
        //    //    {
        //    //        RevLcl1 = 0;
        //    //        RevLcl2 = 0;
        //    //        RevLcl3 = 0;
        //    //        RevLcl4 = 0;
        //    //        RevLcl5 = 0;
        //    //        RevLcl6 = 0;
        //    //        RevLclOver = 0;
        //    //    }
        //    //    else if (Qty == 0 && RevLcl != 0)
        //    //    {
        //    //        RevLcl1 = 0;
        //    //        RevLcl2 = 0;
        //    //        RevLcl3 = 0;
        //    //        RevLcl4 = 0;
        //    //        RevLcl5 = 0;
        //    //        RevLcl6 = 0;
        //    //        RevLclOver = 0;

        //    //        if (string.Equals(Condition, Condition1)) { RevLcl1 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition2)) { RevLcl2 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition3)) { RevLcl3 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition4)) { RevLcl4 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition5)) { RevLcl5 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition6)) { RevLcl6 = RevLcl; }
        //    //        else { RevLclOver = RevLcl; }
        //    //    }
        //    //    else
        //    //    {
        //    //        RevLcl1 = 0;
        //    //        RevLcl2 = 0;
        //    //        RevLcl3 = 0;
        //    //        RevLcl4 = 0;
        //    //        RevLcl5 = 0;
        //    //        RevLcl6 = 0;
        //    //        RevLclOver = 0;
        //    //    }




        //    //    // ASP Tot
        //    //    // -----------------------------------
        //    //    RevLclTot = Math.Round((double)Royalty_QA_Dt.Compute("Sum(Net_Revenue_KLcl)", ""), 4);
        //    //    QtyTot = Math.Round((double)Royalty_QA_Dt.Compute("Sum(Net_qty_Kpcs)", ""), 3);
        //    //    if (QtyTot != 0) { ASPLclTot = RevLclTot / QtyTot; } else { ASPLclTot = 0; }


        //    //    // RateOnRev
        //    //    // -----------------------------------
        //    //    RateOnRev1 = Rate1;
        //    //    RateOnRev2 = Rate2;
        //    //    RateOnRev3 = Rate3;
        //    //    RateOnRev4 = Rate4;
        //    //    RateOnRev5 = Rate5;
        //    //    RateOnRev6 = Rate6;
        //    //    RateOnRevOver = RateOver;

        //    //    // Roy prima del check min/max
        //    //    // -----------------------------------
        //    //    RoyLcl1 = RateOnRev1 * RevLcl1;
        //    //    RoyLcl2 = RateOnRev2 * RevLcl2;
        //    //    RoyLcl3 = RateOnRev3 * RevLcl3;
        //    //    RoyLcl4 = RateOnRev4 * RevLcl4;
        //    //    RoyLcl5 = RateOnRev5 * RevLcl5;
        //    //    RoyLcl6 = RateOnRev6 * RevLcl6;
        //    //    RoyLclOver = RateOnRevOver * RevLclOver;
        //    //    RoyLcl = RoyLcl1 + RoyLcl2 + RoyLcl3 + RoyLcl4 + RoyLcl5 + RoyLcl6 + RoyLclOver;

        //    //    // RateOnPcs
        //    //    // -----------------------------------
        //    //    if (Qty1 != 0) { RateOnPcs1 = RoyLcl1 / Qty1; } else { RateOnPcs1 = 0; }
        //    //    if (Qty2 != 0) { RateOnPcs2 = RoyLcl2 / Qty2; } else { RateOnPcs2 = 0; }
        //    //    if (Qty3 != 0) { RateOnPcs3 = RoyLcl3 / Qty3; } else { RateOnPcs3 = 0; }
        //    //    if (Qty4 != 0) { RateOnPcs4 = RoyLcl4 / Qty4; } else { RateOnPcs4 = 0; }
        //    //    if (Qty5 != 0) { RateOnPcs5 = RoyLcl5 / Qty5; } else { RateOnPcs5 = 0; }
        //    //    if (Qty6 != 0) { RateOnPcs6 = RoyLcl6 / Qty6; } else { RateOnPcs6 = 0; }
        //    //    if (QtyOver != 0) { RateOnPcsOver = RoyLclOver / QtyOver; } else { RateOnPcsOver = 0; }


        //    //    // RateonRev Min
        //    //    // -----------------------------------
        //    //    if (ASPLclTot < Extra1A) // if ASPLclTot < 5
        //    //    {
        //    //        Min1 = Extra1B; // RateonQtyMin = 0.08
        //    //    }
        //    //    else if (ASPLclTot >= Extra1A && ASPLclTot < Extra1C) // if 5 <= ASPLclTot < 7
        //    //    {
        //    //        Min1 = Extra1D; // RateonQtyMin = 0.10
        //    //    }
        //    //    else if (ASPLclTot >= Extra1C) // if ASPLclTot >= 7
        //    //    {
        //    //        Min1 = Extra1E; // RateonQtyMin = 0.12
        //    //    }
        //    //    else
        //    //    {
        //    //        Min1 = Extra1E;
        //    //    }

        //    //    Min2 = Min1; // Applica a tutti gli slot
        //    //    Min3 = Min1;
        //    //    Min4 = Min1;
        //    //    Min5 = Min1;
        //    //    Min6 = Min1;
        //    //    MinOver = Min1;


        //    //    // Check Min/Max
        //    //    // -----------------------------------
        //    //    if (RateOnPcs1 < Min1) { RateOnPcs1 = Min1; } else if (RateOnPcs1 > Max1) { RateOnPcs1 = Max1; }
        //    //    if (RateOnPcs2 < Min2) { RateOnPcs2 = Min2; } else if (RateOnPcs2 > Max2) { RateOnPcs2 = Max2; }
        //    //    if (RateOnPcs3 < Min3) { RateOnPcs3 = Min3; } else if (RateOnPcs3 > Max3) { RateOnPcs3 = Max3; }
        //    //    if (RateOnPcs4 < Min4) { RateOnPcs4 = Min4; } else if (RateOnPcs4 > Max4) { RateOnPcs4 = Max4; }
        //    //    if (RateOnPcs5 < Min5) { RateOnPcs5 = Min5; } else if (RateOnPcs5 > Max5) { RateOnPcs5 = Max5; }
        //    //    if (RateOnPcs6 < Min6) { RateOnPcs6 = Min6; } else if (RateOnPcs6 > Max6) { RateOnPcs6 = Max6; }
        //    //    if (RateOnPcsOver < MinOver) { RateOnPcsOver = MinOver; } else if (RateOnPcsOver > MaxOver) { RateOnPcsOver = MaxOver; }


        //    //    // Additional RateOnPcs
        //    //    // -----------------------------------
        //    //    RateOnPcs1 = RateOnPcs1 + Extra1F; // Extra1F = RateOnQtyAdd1
        //    //    RateOnPcs2 = RateOnPcs2 + Extra2F;
        //    //    RateOnPcs3 = RateOnPcs3 + Extra3F;
        //    //    RateOnPcs4 = RateOnPcs4 + Extra4F;
        //    //    RateOnPcs5 = RateOnPcs5 + Extra5F;
        //    //    RateOnPcs6 = RateOnPcs6 + Extra6F;
        //    //    RateOnPcsOver = RateOnPcsOver + ExtraOverF;

        //    //    // Roy finale
        //    //    // -----------------------------------
        //    //    if (RateOnPcs1 != 0) { RoyLcl1 = RateOnPcs1 * Qty1; }
        //    //    if (RateOnPcs2 != 0) { RoyLcl2 = RateOnPcs2 * Qty2; }
        //    //    if (RateOnPcs3 != 0) { RoyLcl3 = RateOnPcs3 * Qty3; }
        //    //    if (RateOnPcs4 != 0) { RoyLcl4 = RateOnPcs4 * Qty4; }
        //    //    if (RateOnPcs5 != 0) { RoyLcl5 = RateOnPcs5 * Qty5; }
        //    //    if (RateOnPcs6 != 0) { RoyLcl6 = RateOnPcs6 * Qty6; }
        //    //    if (RateOnPcsOver != 0) { RoyLclOver = RateOnPcsOver * QtyOver; }
        //    //    RoyLcl = RoyLcl1 + RoyLcl2 + RoyLcl3 + RoyLcl4 + RoyLcl5 + RoyLcl6 + RoyLclOver;
        //    //    RoyLclH = RoyLclL + RoyLcl;
        //    //    RoyUSD = RoyLcl * ExchangeRate;
        //    //    RoyUSDH = RoyUSDL + RoyUSD;


        //    //    // Roy Paid
        //    //    // -----------------------------------
        //    //    if (RoyLcl >= 0)
        //    //    {
        //    //        if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH < Min_Cum_Royalty_KLcl) { RoyPaidLcl = 0; }
        //    //        else if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLclH - Min_Cum_Royalty_KLcl; }
        //    //        else if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = Max_Cum_Royalty_KLcl - Min_Cum_Royalty_KLcl; }
        //    //        else if (RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl && RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLcl; }
        //    //        else if (RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl && RoyLclH >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = Max_Cum_Royalty_KLcl - RoyLclL; }
        //    //        else { RoyPaidLcl = 0; }
        //    //    }
        //    //    else
        //    //    {
        //    //        if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL < Min_Cum_Royalty_KLcl) { RoyPaidLcl = 0; }
        //    //        else if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(RoyLclL - Min_Cum_Royalty_KLcl); }
        //    //        else if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(Max_Cum_Royalty_KLcl - Min_Cum_Royalty_KLcl); }
        //    //        else if (RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl && RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLcl; }
        //    //        else if (RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl && RoyLclL >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(Max_Cum_Royalty_KLcl - RoyLclL); }
        //    //        else { RoyPaidLcl = 0; }
        //    //    }
        //    //    RoyPaidLclH = RoyPaidLclL + RoyPaidLcl;
        //    //    RoyPaidUSD = RoyPaidLcl * ExchangeRate;
        //    //    RoyPaidUSDH = RoyPaidUSDL + RoyPaidUSD;

        //    //    // Rate
        //    //    // -----------------------------------
        //    //    if (Qty != 0) { Rate_Lcl_per_pcs = RoyLcl / Qty; } else { Rate_Lcl_per_pcs = 0; }
        //    //    if (Qty != 0) { Rate_USD_per_pcs = RoyUSD / Qty; } else { Rate_USD_per_pcs = 0; }
        //    //    if (RevLcl != 0) { Rate_Rev_percent = RoyLcl / RevLcl; } else { Rate_Rev_percent = 0; }

        //    //    // Salva i dati i RoyaltyQ
        //    //    // -----------------------------------
        //    //    Royalty_QA_Dt.Rows[RowI]["Condition"] = Condition;
        //    //    Royalty_QA_Dt.Rows[RowI]["Royalty_KLcl"] = Math.Round(RoyLcl, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_Royalty_KLcl"] = Math.Round(RoyLclH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Royalty_KUSD"] = Math.Round(RoyUSD, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_Royalty_KUSD"] = Math.Round(RoyUSDH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["RoyaltyPaid_KLcl"] = Math.Round(RoyPaidLcl, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_RoyaltyPaid_KLcl"] = Math.Round(RoyPaidLclH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["RoyaltyPaid_KUSD"] = Math.Round(RoyPaidUSD, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_RoyaltyPaid_KUSD"] = Math.Round(RoyPaidUSDH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_Lcl_per_pcs"] = Rate_Lcl_per_pcs;
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_USD_per_pcs"] = Rate_USD_per_pcs;
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_Rev_percent"] = Rate_Rev_percent;

        //    //}

        //}






        //public void M08_SLOTrev_RATErev_MINMAXcp(ref DataTable RuleOne_Dt, ref DataTable Royalty_OneRule_OneQuarter_Dt)
        //{
        //    // ****************************************************
        //    // MODELLO 08
        //    // SLOT: su Revenue
        //    // RATE: su Revenue
        //    // MIN/MAX RATE: su ASP by CP
        //    //
        //    // ESEMPIO: FRAUNHOFER
        //    //
        //    // SLOT     START-END, Mpcs     RATE, %     MIN, Roy/pcs    MAX, Roy/pcs
        //    // 1        0 - 0.5             8.0%        0.35
        //    // 2        0.5 - 1             7.0%        0.35
        //    // 3        1 - 2               6.0%        0.28
        //    // 4        2 - 3               6.0%        0.25
        //    // 5        3 - 4               5.0%        0.20
        //    // 6        > 4                 5.0%        0.15
        //    //



        //    // ****************************************************
        //    //  Royalty Model: -Threshold on revenue
        //    //                 -Rate on revenue
        //    //                 -Min / Max Rate on CP
        //    // ****************************************************

        //    // Variabili interne
        //    // -----------------------------------
        //    string AGREEMENT_ID = "";
        //    string AGREEMENT = "";
        //    string VERSION_DATE = "";
        //    string VERSION_DESCR = "";
        //    string MODEL_ACTIVE = "";
        //    string MODEL_INITIAL_MONTH = "";
        //    string MODEL_FINAL_MONTH = "";
        //    string MODEL_TYPE = "";
        //    string MODEL_CURRENCY = "";
        //    double MODEL_NB_SLOT = 0;
        //    double MODEL_MIN_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MIN_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MIN_EACH_QUARTER_ROYALTY = 0;
        //    double MODEL_MAX_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MAX_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MAX_EACH_QUARTER_ROYALTY = 0;
        //    string SELECTION_PL_LIST = "";
        //    string SELECTION_CP_LIST = "";
        //    string SELECTION_CP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = "";
        //    string SLOT01_MESSAGE = "";
        //    double SLOT01_START = 0;
        //    double SLOT01_END = 0;
        //    double SLOT01_RATE = 0;
        //    double SLOT01_MIN = 0;
        //    double SLOT01_MAX = 0;
        //    string SLOT01_A = "";
        //    string SLOT01_B = "";
        //    string SLOT01_C = "";
        //    string SLOT01_D = "";
        //    string SLOT01_E = "";
        //    string SLOT01_F = "";
        //    string SLOT01_G = "";
        //    string SLOT01_H = "";
        //    string SLOT02_MESSAGE = "";
        //    double SLOT02_START = 0;
        //    double SLOT02_END = 0;
        //    double SLOT02_RATE = 0;
        //    double SLOT02_MIN = 0;
        //    double SLOT02_MAX = 0;
        //    string SLOT02_A = "";
        //    string SLOT02_B = "";
        //    string SLOT02_C = "";
        //    string SLOT02_D = "";
        //    string SLOT02_E = "";
        //    string SLOT02_F = "";
        //    string SLOT02_G = "";
        //    string SLOT02_H = "";
        //    string SLOT03_MESSAGE = "";
        //    double SLOT03_START = 0;
        //    double SLOT03_END = 0;
        //    double SLOT03_RATE = 0;
        //    double SLOT03_MIN = 0;
        //    double SLOT03_MAX = 0;
        //    string SLOT03_A = "";
        //    string SLOT03_B = "";
        //    string SLOT03_C = "";
        //    string SLOT03_D = "";
        //    string SLOT03_E = "";
        //    string SLOT03_F = "";
        //    string SLOT03_G = "";
        //    string SLOT03_H = "";
        //    string SLOT04_MESSAGE = "";
        //    double SLOT04_START = 0;
        //    double SLOT04_END = 0;
        //    double SLOT04_RATE = 0;
        //    double SLOT04_MIN = 0;
        //    double SLOT04_MAX = 0;
        //    string SLOT04_A = "";
        //    string SLOT04_B = "";
        //    string SLOT04_C = "";
        //    string SLOT04_D = "";
        //    string SLOT04_E = "";
        //    string SLOT04_F = "";
        //    string SLOT04_G = "";
        //    string SLOT04_H = "";
        //    string SLOT05_MESSAGE = "";
        //    double SLOT05_START = 0;
        //    double SLOT05_END = 0;
        //    double SLOT05_RATE = 0;
        //    double SLOT05_MIN = 0;
        //    double SLOT05_MAX = 0;
        //    string SLOT05_A = "";
        //    string SLOT05_B = "";
        //    string SLOT05_C = "";
        //    string SLOT05_D = "";
        //    string SLOT05_E = "";
        //    string SLOT05_F = "";
        //    string SLOT05_G = "";
        //    string SLOT05_H = "";
        //    string SLOT06_MESSAGE = "";
        //    double SLOT06_START = 0;
        //    double SLOT06_END = 0;
        //    double SLOT06_RATE = 0;
        //    double SLOT06_MIN = 0;
        //    double SLOT06_MAX = 0;
        //    string SLOT06_A = "";
        //    string SLOT06_B = "";
        //    string SLOT06_C = "";
        //    string SLOT06_D = "";
        //    string SLOT06_E = "";
        //    string SLOT06_F = "";
        //    string SLOT06_G = "";
        //    string SLOT06_H = "";
        //    string SLOT07_MESSAGE = "";
        //    double SLOT07_START = 0;
        //    double SLOT07_END = 0;
        //    double SLOT07_RATE = 0;
        //    double SLOT07_MIN = 0;
        //    double SLOT07_MAX = 0;
        //    string SLOT07_A = "";
        //    string SLOT07_B = "";
        //    string SLOT07_C = "";
        //    string SLOT07_D = "";
        //    string SLOT07_E = "";
        //    string SLOT07_F = "";
        //    string SLOT07_G = "";
        //    string SLOT07_H = "";
        //    string SLOT08_MESSAGE = "";
        //    double SLOT08_START = 0;
        //    double SLOT08_END = 0;
        //    double SLOT08_RATE = 0;
        //    double SLOT08_MIN = 0;
        //    double SLOT08_MAX = 0;
        //    string SLOT08_A = "";
        //    string SLOT08_B = "";
        //    string SLOT08_C = "";
        //    string SLOT08_D = "";
        //    string SLOT08_E = "";
        //    string SLOT08_F = "";
        //    string SLOT08_G = "";
        //    string SLOT08_H = "";
        //    string SLOT09_MESSAGE = "";
        //    double SLOT09_START = 0;
        //    double SLOT09_END = 0;
        //    double SLOT09_RATE = 0;
        //    double SLOT09_MIN = 0;
        //    double SLOT09_MAX = 0;
        //    string SLOT09_A = "";
        //    string SLOT09_B = "";
        //    string SLOT09_C = "";
        //    string SLOT09_D = "";
        //    string SLOT09_E = "";
        //    string SLOT09_F = "";
        //    string SLOT09_G = "";
        //    string SLOT09_H = "";
        //    string SLOT10_MESSAGE = "";
        //    double SLOT10_START = 0;
        //    double SLOT10_END = 0;
        //    double SLOT10_RATE = 0;
        //    double SLOT10_MIN = 0;
        //    double SLOT10_MAX = 0;
        //    string SLOT10_A = "";
        //    string SLOT10_B = "";
        //    string SLOT10_C = "";
        //    string SLOT10_D = "";
        //    string SLOT10_E = "";
        //    string SLOT10_F = "";
        //    string SLOT10_G = "";
        //    string SLOT10_H = "";

        //    double NET_QTY_PCS = 0;
        //    double CUM_NET_QTY_PCS = 0;
        //    double NET_REVENUE_LCL = 0;
        //    double CUM_NET_REVENUE_LCL = 0;
        //    double NET_QTY_TOT_PCS = 0;
        //    double NET_REVENUE_TOT_LCL = 0;
        //    double ASPLcl_TOT = 0;

        //    double Qty = 0;
        //    double Qty_Start = 0;
        //    double Qty_End = 0;
        //    double Qty_01 = 0;
        //    double Qty_02 = 0;
        //    double Qty_03 = 0;
        //    double Qty_04 = 0;
        //    double Qty_05 = 0;
        //    double Qty_06 = 0;
        //    double Qty_07 = 0;
        //    double Qty_08 = 0;
        //    double Qty_09 = 0;
        //    double Qty_10 = 0;

        //    double RevLcl = 0;
        //    double RevLcl_Start = 0;
        //    double RevLcl_End = 0;
        //    double RevLcl_01 = 0;
        //    double RevLcl_02 = 0;
        //    double RevLcl_03 = 0;
        //    double RevLcl_04 = 0;
        //    double RevLcl_05 = 0;
        //    double RevLcl_06 = 0;
        //    double RevLcl_07 = 0;
        //    double RevLcl_08 = 0;
        //    double RevLcl_09 = 0;
        //    double RevLcl_10 = 0;

        //    string Slot_Start = "";
        //    string Slot_End = "";

        //    string Condition_Start = "";
        //    string Condition_End = "";
        //    string Condition = "";


        //    // Estrae i dati della Rule
        //    // -----------------------------------
        //    AGREEMENT_ID = (string)RuleOne_Dt.Rows[0]["AGREEMENT_ID"];
        //    AGREEMENT = (string)RuleOne_Dt.Rows[0]["AGREEMENT"];
        //    VERSION_DATE = (string)RuleOne_Dt.Rows[0]["VERSION_DATE"];
        //    VERSION_DESCR = (string)RuleOne_Dt.Rows[0]["VERSION_DESCR"];
        //    MODEL_ACTIVE = (string)RuleOne_Dt.Rows[0]["MODEL_ACTIVE"];
        //    MODEL_INITIAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_INITIAL_MONTH"];
        //    MODEL_FINAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_FINAL_MONTH"];
        //    MODEL_TYPE = (string)RuleOne_Dt.Rows[0]["MODEL_TYPE"];
        //    MODEL_CURRENCY = (string)RuleOne_Dt.Rows[0]["MODEL_CURRENCY"];
        //    MODEL_NB_SLOT = (double)RuleOne_Dt.Rows[0]["MODEL_NB_SLOT"];
        //    MODEL_MIN_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_ACCUMULATED_ROYALTY"];
        //    MODEL_MIN_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_YEAR_ROYALTY"];
        //    MODEL_MIN_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_QUARTER_ROYALTY"];
        //    MODEL_MAX_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_ACCUMULATED_ROYALTY"];
        //    MODEL_MAX_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_YEAR_ROYALTY"];
        //    MODEL_MAX_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_QUARTER_ROYALTY"];
        //    SELECTION_PL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_PL_LIST"];
        //    SELECTION_CP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_LIST"];
        //    SELECTION_CP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_LIST"];
        //    SELECTION_CUSTOMER_FINAL_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_LIST"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_LIST"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_LIST"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION"];
        //    SLOT01_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT01_MESSAGE"];
        //    SLOT01_START = (double)RuleOne_Dt.Rows[0]["SLOT01_START"];
        //    SLOT01_END = (double)RuleOne_Dt.Rows[0]["SLOT01_END"];
        //    SLOT01_RATE = (double)RuleOne_Dt.Rows[0]["SLOT01_RATE"];
        //    SLOT01_MIN = (double)RuleOne_Dt.Rows[0]["SLOT01_MIN"];
        //    SLOT01_MAX = (double)RuleOne_Dt.Rows[0]["SLOT01_MAX"];
        //    SLOT01_A = (string)RuleOne_Dt.Rows[0]["SLOT01_A"];
        //    SLOT01_B = (string)RuleOne_Dt.Rows[0]["SLOT01_B"];
        //    SLOT01_C = (string)RuleOne_Dt.Rows[0]["SLOT01_C"];
        //    SLOT01_D = (string)RuleOne_Dt.Rows[0]["SLOT01_D"];
        //    SLOT01_E = (string)RuleOne_Dt.Rows[0]["SLOT01_E"];
        //    SLOT01_F = (string)RuleOne_Dt.Rows[0]["SLOT01_F"];
        //    SLOT01_G = (string)RuleOne_Dt.Rows[0]["SLOT01_G"];
        //    SLOT01_H = (string)RuleOne_Dt.Rows[0]["SLOT01_H"];
        //    SLOT02_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT02_MESSAGE"];
        //    SLOT02_START = (double)RuleOne_Dt.Rows[0]["SLOT02_START"];
        //    SLOT02_END = (double)RuleOne_Dt.Rows[0]["SLOT02_END"];
        //    SLOT02_RATE = (double)RuleOne_Dt.Rows[0]["SLOT02_RATE"];
        //    SLOT02_MIN = (double)RuleOne_Dt.Rows[0]["SLOT02_MIN"];
        //    SLOT02_MAX = (double)RuleOne_Dt.Rows[0]["SLOT02_MAX"];
        //    SLOT02_A = (string)RuleOne_Dt.Rows[0]["SLOT02_A"];
        //    SLOT02_B = (string)RuleOne_Dt.Rows[0]["SLOT02_B"];
        //    SLOT02_C = (string)RuleOne_Dt.Rows[0]["SLOT02_C"];
        //    SLOT02_D = (string)RuleOne_Dt.Rows[0]["SLOT02_D"];
        //    SLOT02_E = (string)RuleOne_Dt.Rows[0]["SLOT02_E"];
        //    SLOT02_F = (string)RuleOne_Dt.Rows[0]["SLOT02_F"];
        //    SLOT02_G = (string)RuleOne_Dt.Rows[0]["SLOT02_G"];
        //    SLOT02_H = (string)RuleOne_Dt.Rows[0]["SLOT02_H"];
        //    SLOT03_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT03_MESSAGE"];
        //    SLOT03_START = (double)RuleOne_Dt.Rows[0]["SLOT03_START"];
        //    SLOT03_END = (double)RuleOne_Dt.Rows[0]["SLOT03_END"];
        //    SLOT03_RATE = (double)RuleOne_Dt.Rows[0]["SLOT03_RATE"];
        //    SLOT03_MIN = (double)RuleOne_Dt.Rows[0]["SLOT03_MIN"];
        //    SLOT03_MAX = (double)RuleOne_Dt.Rows[0]["SLOT03_MAX"];
        //    SLOT03_A = (string)RuleOne_Dt.Rows[0]["SLOT03_A"];
        //    SLOT03_B = (string)RuleOne_Dt.Rows[0]["SLOT03_B"];
        //    SLOT03_C = (string)RuleOne_Dt.Rows[0]["SLOT03_C"];
        //    SLOT03_D = (string)RuleOne_Dt.Rows[0]["SLOT03_D"];
        //    SLOT03_E = (string)RuleOne_Dt.Rows[0]["SLOT03_E"];
        //    SLOT03_F = (string)RuleOne_Dt.Rows[0]["SLOT03_F"];
        //    SLOT03_G = (string)RuleOne_Dt.Rows[0]["SLOT03_G"];
        //    SLOT03_H = (string)RuleOne_Dt.Rows[0]["SLOT03_H"];
        //    SLOT04_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT04_MESSAGE"];
        //    SLOT04_START = (double)RuleOne_Dt.Rows[0]["SLOT04_START"];
        //    SLOT04_END = (double)RuleOne_Dt.Rows[0]["SLOT04_END"];
        //    SLOT04_RATE = (double)RuleOne_Dt.Rows[0]["SLOT04_RATE"];
        //    SLOT04_MIN = (double)RuleOne_Dt.Rows[0]["SLOT04_MIN"];
        //    SLOT04_MAX = (double)RuleOne_Dt.Rows[0]["SLOT04_MAX"];
        //    SLOT04_A = (string)RuleOne_Dt.Rows[0]["SLOT04_A"];
        //    SLOT04_B = (string)RuleOne_Dt.Rows[0]["SLOT04_B"];
        //    SLOT04_C = (string)RuleOne_Dt.Rows[0]["SLOT04_C"];
        //    SLOT04_D = (string)RuleOne_Dt.Rows[0]["SLOT04_D"];
        //    SLOT04_E = (string)RuleOne_Dt.Rows[0]["SLOT04_E"];
        //    SLOT04_F = (string)RuleOne_Dt.Rows[0]["SLOT04_F"];
        //    SLOT04_G = (string)RuleOne_Dt.Rows[0]["SLOT04_G"];
        //    SLOT04_H = (string)RuleOne_Dt.Rows[0]["SLOT04_H"];
        //    SLOT05_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT05_MESSAGE"];
        //    SLOT05_START = (double)RuleOne_Dt.Rows[0]["SLOT05_START"];
        //    SLOT05_END = (double)RuleOne_Dt.Rows[0]["SLOT05_END"];
        //    SLOT05_RATE = (double)RuleOne_Dt.Rows[0]["SLOT05_RATE"];
        //    SLOT05_MIN = (double)RuleOne_Dt.Rows[0]["SLOT05_MIN"];
        //    SLOT05_MAX = (double)RuleOne_Dt.Rows[0]["SLOT05_MAX"];
        //    SLOT05_A = (string)RuleOne_Dt.Rows[0]["SLOT05_A"];
        //    SLOT05_B = (string)RuleOne_Dt.Rows[0]["SLOT05_B"];
        //    SLOT05_C = (string)RuleOne_Dt.Rows[0]["SLOT05_C"];
        //    SLOT05_D = (string)RuleOne_Dt.Rows[0]["SLOT05_D"];
        //    SLOT05_E = (string)RuleOne_Dt.Rows[0]["SLOT05_E"];
        //    SLOT05_F = (string)RuleOne_Dt.Rows[0]["SLOT05_F"];
        //    SLOT05_G = (string)RuleOne_Dt.Rows[0]["SLOT05_G"];
        //    SLOT05_H = (string)RuleOne_Dt.Rows[0]["SLOT05_H"];
        //    SLOT06_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT06_MESSAGE"];
        //    SLOT06_START = (double)RuleOne_Dt.Rows[0]["SLOT06_START"];
        //    SLOT06_END = (double)RuleOne_Dt.Rows[0]["SLOT06_END"];
        //    SLOT06_RATE = (double)RuleOne_Dt.Rows[0]["SLOT06_RATE"];
        //    SLOT06_MIN = (double)RuleOne_Dt.Rows[0]["SLOT06_MIN"];
        //    SLOT06_MAX = (double)RuleOne_Dt.Rows[0]["SLOT06_MAX"];
        //    SLOT06_A = (string)RuleOne_Dt.Rows[0]["SLOT06_A"];
        //    SLOT06_B = (string)RuleOne_Dt.Rows[0]["SLOT06_B"];
        //    SLOT06_C = (string)RuleOne_Dt.Rows[0]["SLOT06_C"];
        //    SLOT06_D = (string)RuleOne_Dt.Rows[0]["SLOT06_D"];
        //    SLOT06_E = (string)RuleOne_Dt.Rows[0]["SLOT06_E"];
        //    SLOT06_F = (string)RuleOne_Dt.Rows[0]["SLOT06_F"];
        //    SLOT06_G = (string)RuleOne_Dt.Rows[0]["SLOT06_G"];
        //    SLOT06_H = (string)RuleOne_Dt.Rows[0]["SLOT06_H"];
        //    SLOT07_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT07_MESSAGE"];
        //    SLOT07_START = (double)RuleOne_Dt.Rows[0]["SLOT07_START"];
        //    SLOT07_END = (double)RuleOne_Dt.Rows[0]["SLOT07_END"];
        //    SLOT07_RATE = (double)RuleOne_Dt.Rows[0]["SLOT07_RATE"];
        //    SLOT07_MIN = (double)RuleOne_Dt.Rows[0]["SLOT07_MIN"];
        //    SLOT07_MAX = (double)RuleOne_Dt.Rows[0]["SLOT07_MAX"];
        //    SLOT07_A = (string)RuleOne_Dt.Rows[0]["SLOT07_A"];
        //    SLOT07_B = (string)RuleOne_Dt.Rows[0]["SLOT07_B"];
        //    SLOT07_C = (string)RuleOne_Dt.Rows[0]["SLOT07_C"];
        //    SLOT07_D = (string)RuleOne_Dt.Rows[0]["SLOT07_D"];
        //    SLOT07_E = (string)RuleOne_Dt.Rows[0]["SLOT07_E"];
        //    SLOT07_F = (string)RuleOne_Dt.Rows[0]["SLOT07_F"];
        //    SLOT07_G = (string)RuleOne_Dt.Rows[0]["SLOT07_G"];
        //    SLOT07_H = (string)RuleOne_Dt.Rows[0]["SLOT07_H"];
        //    SLOT08_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT08_MESSAGE"];
        //    SLOT08_START = (double)RuleOne_Dt.Rows[0]["SLOT08_START"];
        //    SLOT08_END = (double)RuleOne_Dt.Rows[0]["SLOT08_END"];
        //    SLOT08_RATE = (double)RuleOne_Dt.Rows[0]["SLOT08_RATE"];
        //    SLOT08_MIN = (double)RuleOne_Dt.Rows[0]["SLOT08_MIN"];
        //    SLOT08_MAX = (double)RuleOne_Dt.Rows[0]["SLOT08_MAX"];
        //    SLOT08_A = (string)RuleOne_Dt.Rows[0]["SLOT08_A"];
        //    SLOT08_B = (string)RuleOne_Dt.Rows[0]["SLOT08_B"];
        //    SLOT08_C = (string)RuleOne_Dt.Rows[0]["SLOT08_C"];
        //    SLOT08_D = (string)RuleOne_Dt.Rows[0]["SLOT08_D"];
        //    SLOT08_E = (string)RuleOne_Dt.Rows[0]["SLOT08_E"];
        //    SLOT08_F = (string)RuleOne_Dt.Rows[0]["SLOT08_F"];
        //    SLOT08_G = (string)RuleOne_Dt.Rows[0]["SLOT08_G"];
        //    SLOT08_H = (string)RuleOne_Dt.Rows[0]["SLOT08_H"];
        //    SLOT09_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT09_MESSAGE"];
        //    SLOT09_START = (double)RuleOne_Dt.Rows[0]["SLOT09_START"];
        //    SLOT09_END = (double)RuleOne_Dt.Rows[0]["SLOT09_END"];
        //    SLOT09_RATE = (double)RuleOne_Dt.Rows[0]["SLOT09_RATE"];
        //    SLOT09_MIN = (double)RuleOne_Dt.Rows[0]["SLOT09_MIN"];
        //    SLOT09_MAX = (double)RuleOne_Dt.Rows[0]["SLOT09_MAX"];
        //    SLOT09_A = (string)RuleOne_Dt.Rows[0]["SLOT09_A"];
        //    SLOT09_B = (string)RuleOne_Dt.Rows[0]["SLOT09_B"];
        //    SLOT09_C = (string)RuleOne_Dt.Rows[0]["SLOT09_C"];
        //    SLOT09_D = (string)RuleOne_Dt.Rows[0]["SLOT09_D"];
        //    SLOT09_E = (string)RuleOne_Dt.Rows[0]["SLOT09_E"];
        //    SLOT09_F = (string)RuleOne_Dt.Rows[0]["SLOT09_F"];
        //    SLOT09_G = (string)RuleOne_Dt.Rows[0]["SLOT09_G"];
        //    SLOT09_H = (string)RuleOne_Dt.Rows[0]["SLOT09_H"];
        //    SLOT10_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT10_MESSAGE"];
        //    SLOT10_START = (double)RuleOne_Dt.Rows[0]["SLOT10_START"];
        //    SLOT10_END = (double)RuleOne_Dt.Rows[0]["SLOT10_END"];
        //    SLOT10_RATE = (double)RuleOne_Dt.Rows[0]["SLOT10_RATE"];
        //    SLOT10_MIN = (double)RuleOne_Dt.Rows[0]["SLOT10_MIN"];
        //    SLOT10_MAX = (double)RuleOne_Dt.Rows[0]["SLOT10_MAX"];
        //    SLOT10_A = (string)RuleOne_Dt.Rows[0]["SLOT10_A"];
        //    SLOT10_B = (string)RuleOne_Dt.Rows[0]["SLOT10_B"];
        //    SLOT10_C = (string)RuleOne_Dt.Rows[0]["SLOT10_C"];
        //    SLOT10_D = (string)RuleOne_Dt.Rows[0]["SLOT10_D"];
        //    SLOT10_E = (string)RuleOne_Dt.Rows[0]["SLOT10_E"];
        //    SLOT10_F = (string)RuleOne_Dt.Rows[0]["SLOT10_F"];
        //    SLOT10_G = (string)RuleOne_Dt.Rows[0]["SLOT10_G"];
        //    SLOT10_H = (string)RuleOne_Dt.Rows[0]["SLOT10_H"];



        //    // Loop
        //    // -----------------------------------
        //    for (int i = 0; i < Royalty_OneRule_OneQuarter_Dt.Rows.Count; i++)
        //    {

        //        // Dati iniziali
        //        NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_QTY_PCS"]), 0);
        //        CUM_NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_QTY_PCS"]), 0);
        //        NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_REVENUE_LCL"]), 2);
        //        CUM_NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_REVENUE_LCL"]), 2);
        //        NET_QTY_TOT_PCS = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_QTY_PCS)", ""), 0);
        //        NET_REVENUE_TOT_LCL = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_REVENUE_LCL)", ""), 2);

        //        Qty = NET_QTY_PCS;
        //        Qty_End = CUM_NET_QTY_PCS;
        //        Qty_Start = Qty_End - Qty;

        //        RevLcl = NET_REVENUE_LCL;
        //        RevLcl_End = CUM_NET_REVENUE_LCL;
        //        RevLcl_Start = RevLcl_End - RevLcl;

        //        if (NET_QTY_TOT_PCS != 0)
        //        {
        //            ASPLcl_TOT = NET_REVENUE_TOT_LCL / NET_QTY_TOT_PCS;
        //        }
        //        else
        //        {
        //            ASPLcl_TOT = 0;
        //        }


        //        // Condition
        //        Condition_By_Rev(
        //            in RevLcl_Start,
        //            in RevLcl_End,
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT01_MESSAGE,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT02_MESSAGE,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT03_MESSAGE,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT04_MESSAGE,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT05_MESSAGE,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT06_MESSAGE,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT07_MESSAGE,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT08_MESSAGE,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT09_MESSAGE,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in SLOT10_MESSAGE,
        //            ref Condition_Start,
        //            ref Condition_End,
        //            ref Condition
        //            );


        //        // Quantity, Revenue
        //        Quantity_And_Revenue_By_Rev(
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in Qty,
        //            in Qty_Start,
        //            in Qty_End,
        //            ref Qty_01,
        //            ref Qty_02,
        //            ref Qty_03,
        //            ref Qty_04,
        //            ref Qty_05,
        //            ref Qty_06,
        //            ref Qty_07,
        //            ref Qty_08,
        //            ref Qty_09,
        //            ref Qty_10,
        //            ref RevLcl,
        //            ref RevLcl_End,
        //            ref RevLcl_Start,
        //            ref RevLcl_01,
        //            ref RevLcl_02,
        //            ref RevLcl_03,
        //            ref RevLcl_04,
        //            ref RevLcl_05,
        //            ref RevLcl_06,
        //            ref RevLcl_07,
        //            ref RevLcl_08,
        //            ref RevLcl_09,
        //            ref RevLcl_10);



        //    }









        //    //// Variabili interne
        //    //// -----------------------------------
        //    //double Id_Agreement = 0;
        //    //string Agreement = "";
        //    //string Model = "";
        //    //double Slot = 0;
        //    //string Agreement_Date_Start = "";
        //    //string Agreement_Date_End = "";
        //    //string PL_String = "";
        //    //string PL_Cond = "";
        //    //string CP_String = "";
        //    //string CP_Cond = "";
        //    //string Customer_String = "";
        //    //string Customer_Cond = "";
        //    //string Condition1 = "";
        //    //double Limit1 = 0;
        //    //double Rate1 = 0;
        //    //double Min1 = 0;
        //    //double Max1 = 0;
        //    //double Extra1A = 0;
        //    //double Extra1B = 0;
        //    //double Extra1C = 0;
        //    //double Extra1D = 0;
        //    //double Extra1E = 0;
        //    //double Extra1F = 0;
        //    //string Condition2 = "";
        //    //double Limit2 = 0;
        //    //double Rate2 = 0;
        //    //double Min2 = 0;
        //    //double Max2 = 0;
        //    //double Extra2A = 0;
        //    //double Extra2B = 0;
        //    //double Extra2C = 0;
        //    //double Extra2D = 0;
        //    //double Extra2E = 0;
        //    //double Extra2F = 0;
        //    //string Condition3 = "";
        //    //double Limit3 = 0;
        //    //double Rate3 = 0;
        //    //double Min3 = 0;
        //    //double Max3 = 0;
        //    //double Extra3A = 0;
        //    //double Extra3B = 0;
        //    //double Extra3C = 0;
        //    //double Extra3D = 0;
        //    //double Extra3E = 0;
        //    //double Extra3F = 0;
        //    //string Condition4 = "";
        //    //double Limit4 = 0;
        //    //double Rate4 = 0;
        //    //double Min4 = 0;
        //    //double Max4 = 0;
        //    //double Extra4A = 0;
        //    //double Extra4B = 0;
        //    //double Extra4C = 0;
        //    //double Extra4D = 0;
        //    //double Extra4E = 0;
        //    //double Extra4F = 0;
        //    //string Condition5 = "";
        //    //double Limit5 = 0;
        //    //double Rate5 = 0;
        //    //double Min5 = 0;
        //    //double Max5 = 0;
        //    //double Extra5A = 0;
        //    //double Extra5B = 0;
        //    //double Extra5C = 0;
        //    //double Extra5D = 0;
        //    //double Extra5E = 0;
        //    //double Extra5F = 0;
        //    //string Condition6 = "";
        //    //double Limit6 = 0;
        //    //double Rate6 = 0;
        //    //double Min6 = 0;
        //    //double Max6 = 0;
        //    //double Extra6A = 0;
        //    //double Extra6B = 0;
        //    //double Extra6C = 0;
        //    //double Extra6D = 0;
        //    //double Extra6E = 0;
        //    //double Extra6F = 0;
        //    //double RateOver = 0;
        //    //double MinOver = 0;
        //    //double MaxOver = 0;
        //    //double ExtraOverA = 0;
        //    //double ExtraOverB = 0;
        //    //double ExtraOverC = 0;
        //    //double ExtraOverD = 0;
        //    //double ExtraOverE = 0;
        //    //double ExtraOverF = 0;
        //    //string LclCurrency = "";
        //    //double Min_Cum_Royalty_KLcl = 0;
        //    //double Max_Cum_Royalty_KLcl = 0;

        //    //double QtyL = 0;
        //    //double QtyH = 0;
        //    //double Qty = 0;
        //    //double Qty1 = 0;
        //    //double Qty2 = 0;
        //    //double Qty3 = 0;
        //    //double Qty4 = 0;
        //    //double Qty5 = 0;
        //    //double Qty6 = 0;
        //    //double QtyOver = 0;

        //    //string ConditionL = "";
        //    //string ConditionH = "";
        //    //string Condition = "";

        //    //double RevLclL = 0;
        //    //double RevLclH = 0;
        //    //double RevLcl = 0;
        //    //double RevLcl1 = 0;
        //    //double RevLcl2 = 0;
        //    //double RevLcl3 = 0;
        //    //double RevLcl4 = 0;
        //    //double RevLcl5 = 0;
        //    //double RevLcl6 = 0;
        //    //double RevLclOver = 0;

        //    //double RateOnPcs1 = 0;
        //    //double RateOnPcs2 = 0;
        //    //double RateOnPcs3 = 0;
        //    //double RateOnPcs4 = 0;
        //    //double RateOnPcs5 = 0;
        //    //double RateOnPcs6 = 0;
        //    //double RateOnPcsOver = 0;

        //    //double RateOnRev1 = 0;
        //    //double RateOnRev2 = 0;
        //    //double RateOnRev3 = 0;
        //    //double RateOnRev4 = 0;
        //    //double RateOnRev5 = 0;
        //    //double RateOnRev6 = 0;
        //    //double RateOnRevOver = 0;

        //    //double RoyLclL = 0;
        //    //double RoyLclH = 0;
        //    //double RoyLcl = 0;
        //    //double RoyLcl1 = 0;
        //    //double RoyLcl2 = 0;
        //    //double RoyLcl3 = 0;
        //    //double RoyLcl4 = 0;
        //    //double RoyLcl5 = 0;
        //    //double RoyLcl6 = 0;
        //    //double RoyLclOver = 0;

        //    //double RoyUSDL = 0;
        //    //double RoyUSDH = 0;
        //    //double RoyUSD = 0;

        //    //double RoyPaidLcl = 0;
        //    //double RoyPaidLclL = 0;
        //    //double RoyPaidLclH = 0;

        //    //double RoyPaidUSD = 0;
        //    //double RoyPaidUSDL = 0;
        //    //double RoyPaidUSDH = 0;

        //    //double Rate_Lcl_per_pcs = 0;
        //    //double Rate_USD_per_pcs = 0;
        //    //double Rate_Rev_percent = 0;

        //    //double ExchangeRate = 0;

        //    //double ASPLclTot = 0;
        //    //double RevLclTot = 0;
        //    //double QtyTot = 0;

        //    //string CP = "";

        //    //// Estrae i dati dell'Agreement
        //    //// -----------------------------------
        //    //Id_Agreement = (double)Agreement_QA_Dt.Rows[0]["Id_Agreement"];
        //    //Agreement = Agreement_QA_Dt.Rows[0]["Agreement"].ToString();
        //    //Model = Agreement_QA_Dt.Rows[0]["Model"].ToString();
        //    //Slot = (double)Agreement_QA_Dt.Rows[0]["Slot"];
        //    //Agreement_Date_Start = Agreement_QA_Dt.Rows[0]["Agreement_Date_Start"].ToString();
        //    //Agreement_Date_End = Agreement_QA_Dt.Rows[0]["Agreement_Date_End"].ToString();
        //    //PL_String = Agreement_QA_Dt.Rows[0]["PL_String"].ToString();
        //    //PL_Cond = Agreement_QA_Dt.Rows[0]["PL_Cond"].ToString();
        //    //CP_String = Agreement_QA_Dt.Rows[0]["CP_String"].ToString();
        //    //CP_Cond = Agreement_QA_Dt.Rows[0]["CP_Cond"].ToString();
        //    //Customer_String = Agreement_QA_Dt.Rows[0]["Customer_String"].ToString();
        //    //Customer_Cond = Agreement_QA_Dt.Rows[0]["Customer_Cond"].ToString();
        //    //Condition1 = Agreement_QA_Dt.Rows[0]["Condition1"].ToString();
        //    //Limit1 = (double)Agreement_QA_Dt.Rows[0]["Limit1"];
        //    //Rate1 = (double)Agreement_QA_Dt.Rows[0]["Rate1"];
        //    //Min1 = (double)Agreement_QA_Dt.Rows[0]["Min1"];
        //    //Max1 = (double)Agreement_QA_Dt.Rows[0]["Max1"];
        //    //Extra1A = (double)Agreement_QA_Dt.Rows[0]["Extra1A"];
        //    //Extra1B = (double)Agreement_QA_Dt.Rows[0]["Extra1B"];
        //    //Extra1C = (double)Agreement_QA_Dt.Rows[0]["Extra1C"];
        //    //Extra1D = (double)Agreement_QA_Dt.Rows[0]["Extra1D"];
        //    //Extra1E = (double)Agreement_QA_Dt.Rows[0]["Extra1E"];
        //    //Extra1F = (double)Agreement_QA_Dt.Rows[0]["Extra1F"];
        //    //Condition2 = Agreement_QA_Dt.Rows[0]["Condition2"].ToString();
        //    //Limit2 = (double)Agreement_QA_Dt.Rows[0]["Limit2"];
        //    //Rate2 = (double)Agreement_QA_Dt.Rows[0]["Rate2"];
        //    //Min2 = (double)Agreement_QA_Dt.Rows[0]["Min2"];
        //    //Max2 = (double)Agreement_QA_Dt.Rows[0]["Max2"];
        //    //Extra2A = (double)Agreement_QA_Dt.Rows[0]["Extra2A"];
        //    //Extra2B = (double)Agreement_QA_Dt.Rows[0]["Extra2B"];
        //    //Extra2C = (double)Agreement_QA_Dt.Rows[0]["Extra2C"];
        //    //Extra2D = (double)Agreement_QA_Dt.Rows[0]["Extra2D"];
        //    //Extra2E = (double)Agreement_QA_Dt.Rows[0]["Extra2E"];
        //    //Extra2F = (double)Agreement_QA_Dt.Rows[0]["Extra2F"];
        //    //Condition3 = Agreement_QA_Dt.Rows[0]["Condition3"].ToString();
        //    //Limit3 = (double)Agreement_QA_Dt.Rows[0]["Limit3"];
        //    //Rate3 = (double)Agreement_QA_Dt.Rows[0]["Rate3"];
        //    //Min3 = (double)Agreement_QA_Dt.Rows[0]["Min3"];
        //    //Max3 = (double)Agreement_QA_Dt.Rows[0]["Max3"];
        //    //Extra3A = (double)Agreement_QA_Dt.Rows[0]["Extra3A"];
        //    //Extra3B = (double)Agreement_QA_Dt.Rows[0]["Extra3B"];
        //    //Extra3C = (double)Agreement_QA_Dt.Rows[0]["Extra3C"];
        //    //Extra3D = (double)Agreement_QA_Dt.Rows[0]["Extra3D"];
        //    //Extra3E = (double)Agreement_QA_Dt.Rows[0]["Extra3E"];
        //    //Extra3F = (double)Agreement_QA_Dt.Rows[0]["Extra3F"];
        //    //Condition4 = Agreement_QA_Dt.Rows[0]["Condition4"].ToString();
        //    //Limit4 = (double)Agreement_QA_Dt.Rows[0]["Limit4"];
        //    //Rate4 = (double)Agreement_QA_Dt.Rows[0]["Rate4"];
        //    //Min4 = (double)Agreement_QA_Dt.Rows[0]["Min4"];
        //    //Max4 = (double)Agreement_QA_Dt.Rows[0]["Max4"];
        //    //Extra4A = (double)Agreement_QA_Dt.Rows[0]["Extra4A"];
        //    //Extra4B = (double)Agreement_QA_Dt.Rows[0]["Extra4B"];
        //    //Extra4C = (double)Agreement_QA_Dt.Rows[0]["Extra4C"];
        //    //Extra4D = (double)Agreement_QA_Dt.Rows[0]["Extra4D"];
        //    //Extra4E = (double)Agreement_QA_Dt.Rows[0]["Extra4E"];
        //    //Extra4F = (double)Agreement_QA_Dt.Rows[0]["Extra4F"];
        //    //Condition5 = Agreement_QA_Dt.Rows[0]["Condition5"].ToString();
        //    //Limit5 = (double)Agreement_QA_Dt.Rows[0]["Limit5"];
        //    //Rate5 = (double)Agreement_QA_Dt.Rows[0]["Rate5"];
        //    //Min5 = (double)Agreement_QA_Dt.Rows[0]["Min5"];
        //    //Max5 = (double)Agreement_QA_Dt.Rows[0]["Max5"];
        //    //Extra5A = (double)Agreement_QA_Dt.Rows[0]["Extra5A"];
        //    //Extra5B = (double)Agreement_QA_Dt.Rows[0]["Extra5B"];
        //    //Extra5C = (double)Agreement_QA_Dt.Rows[0]["Extra5C"];
        //    //Extra5D = (double)Agreement_QA_Dt.Rows[0]["Extra5D"];
        //    //Extra5E = (double)Agreement_QA_Dt.Rows[0]["Extra5E"];
        //    //Extra5F = (double)Agreement_QA_Dt.Rows[0]["Extra5F"];
        //    //Condition6 = Agreement_QA_Dt.Rows[0]["Condition6"].ToString();
        //    //Limit6 = (double)Agreement_QA_Dt.Rows[0]["Limit6"];
        //    //Rate6 = (double)Agreement_QA_Dt.Rows[0]["Rate6"];
        //    //Min6 = (double)Agreement_QA_Dt.Rows[0]["Min6"];
        //    //Max6 = (double)Agreement_QA_Dt.Rows[0]["Max6"];
        //    //Extra6A = (double)Agreement_QA_Dt.Rows[0]["Extra6A"];
        //    //Extra6B = (double)Agreement_QA_Dt.Rows[0]["Extra6B"];
        //    //Extra6C = (double)Agreement_QA_Dt.Rows[0]["Extra6C"];
        //    //Extra6D = (double)Agreement_QA_Dt.Rows[0]["Extra6D"];
        //    //Extra6E = (double)Agreement_QA_Dt.Rows[0]["Extra6E"];
        //    //Extra6F = (double)Agreement_QA_Dt.Rows[0]["Extra6F"];
        //    //RateOver = (double)Agreement_QA_Dt.Rows[0]["RateOver"];
        //    //MinOver = (double)Agreement_QA_Dt.Rows[0]["MinOver"];
        //    //MaxOver = (double)Agreement_QA_Dt.Rows[0]["MaxOver"];
        //    //ExtraOverA = (double)Agreement_QA_Dt.Rows[0]["ExtraOverA"];
        //    //ExtraOverB = (double)Agreement_QA_Dt.Rows[0]["ExtraOverB"];
        //    //ExtraOverC = (double)Agreement_QA_Dt.Rows[0]["ExtraOverC"];
        //    //ExtraOverD = (double)Agreement_QA_Dt.Rows[0]["ExtraOverD"];
        //    //ExtraOverE = (double)Agreement_QA_Dt.Rows[0]["ExtraOverE"];
        //    //ExtraOverF = (double)Agreement_QA_Dt.Rows[0]["ExtraOverF"];
        //    //LclCurrency = Agreement_QA_Dt.Rows[0]["LclCurrency"].ToString();
        //    //Min_Cum_Royalty_KLcl = (double)Agreement_QA_Dt.Rows[0]["Min_Cum_Royalty_KLcl"];
        //    //Max_Cum_Royalty_KLcl = (double)Agreement_QA_Dt.Rows[0]["Max_Cum_Royalty_KLcl"];



        //    //// Loop
        //    //// -----------------------------------
        //    //for (int RowI = 0; RowI <= Royalty_QA_Dt.Rows.Count - 1; RowI++)
        //    //{
        //    //    // Dati iniziali 
        //    //    // -----------------------------------
        //    //    Condition = "";
        //    //    CP = Convert.ToString(Royalty_QA_Dt.Rows[RowI]["CP"]);
        //    //    ExchangeRate = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["ExchangeRate"]), 4);
        //    //    if (ExchangeRate == 0) { ExchangeRate = 1; }

        //    //    RevLcl = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Net_Revenue_KLcl"]), 4);
        //    //    RevLclH = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Cum_Net_Revenue_KLcl"]), 4);
        //    //    RevLclL = RevLclH - RevLcl;
        //    //    Qty = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Net_qty_Kpcs"]), 3);
        //    //    QtyH = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Cum_Net_qty_Kpcs"]), 3);
        //    //    QtyL = QtyH - Qty;
        //    //    RoyLcl = 0;
        //    //    RoyUSD = 0;
        //    //    RoyPaidLcl = 0;
        //    //    RoyPaidUSD = 0;
        //    //    Rate_Lcl_per_pcs = 0;
        //    //    Rate_USD_per_pcs = 0;
        //    //    Rate_Rev_percent = 0;

        //    //    if (RowI == 0)
        //    //    {
        //    //        RoyLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_Royalty_KLcl"]), 4);
        //    //        RoyUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_Royalty_KUSD"]), 4);
        //    //        RoyPaidLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_RoyaltyPaid_KLcl"]), 4);
        //    //        RoyPaidUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_RoyaltyPaid_KUSD"]), 4);
        //    //    }
        //    //    else
        //    //    {
        //    //        RoyLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_Royalty_KLcl"]), 4);
        //    //        RoyUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_Royalty_KUSD"]), 4);
        //    //        RoyPaidLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_RoyaltyPaid_KLcl"]), 4);
        //    //        RoyPaidUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_RoyaltyPaid_KUSD"]), 4);
        //    //    }

        //    //    // Condition
        //    //    // -----------------------------------
        //    //    if (RevLclL < Limit1) { ConditionL = Condition1; }
        //    //    else if (RevLclL >= Limit1 && RevLclL < Limit2) { ConditionL = Condition2; }
        //    //    else if (RevLclL >= Limit2 && RevLclL < Limit3) { ConditionL = Condition3; }
        //    //    else if (RevLclL >= Limit3 && RevLclL < Limit4) { ConditionL = Condition4; }
        //    //    else if (RevLclL >= Limit4 && RevLclL < Limit5) { ConditionL = Condition5; }
        //    //    else if (RevLclL >= Limit5 && RevLclL < Limit6) { ConditionL = Condition6; }
        //    //    else if (RevLclL >= Limit6) { ConditionL = "Over"; }
        //    //    else { ConditionL = "ERR"; }

        //    //    if (RevLclH < Limit1) { ConditionH = Condition1; }
        //    //    else if (RevLclH >= Limit1 && RevLclH < Limit2) { ConditionH = Condition2; }
        //    //    else if (RevLclH >= Limit2 && RevLclH < Limit3) { ConditionH = Condition3; }
        //    //    else if (RevLclH >= Limit3 && RevLclH < Limit4) { ConditionH = Condition4; }
        //    //    else if (RevLclH >= Limit4 && RevLclH < Limit5) { ConditionH = Condition5; }
        //    //    else if (RevLclH >= Limit5 && RevLclH < Limit6) { ConditionH = Condition6; }
        //    //    else if (RevLclH >= Limit6) { ConditionL = "Over"; }
        //    //    else { ConditionL = "ERR"; }

        //    //    if (string.Equals(ConditionL, ConditionH))
        //    //    {
        //    //        Condition = ConditionL;
        //    //    }
        //    //    else
        //    //    {
        //    //        Condition = ConditionL + " -> " + ConditionH;
        //    //    }

        //    //    // Revenue
        //    //    // -----------------------------------
        //    //    RevLcl1 = 0;
        //    //    RevLcl2 = 0;
        //    //    RevLcl3 = 0;
        //    //    RevLcl4 = 0;
        //    //    RevLcl5 = 0;
        //    //    RevLcl6 = 0;
        //    //    RevLclOver = 0;

        //    //    if (RevLcl >= 0)
        //    //    {
        //    //        if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition1)) { RevLcl1 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition2)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = RevLclH - Limit1; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition3)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = RevLclH - Limit2; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition4)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = Limit3 - Limit2; RevLcl4 = RevLclH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition5)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = RevLclH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition6)) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, "Over")) { RevLcl1 = Limit1 - RevLclL; RevLcl2 = Limit2 - Limit1; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition2)) { RevLcl2 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition3)) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = RevLclH - Limit2; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition4)) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = Limit3 - Limit2; RevLcl4 = RevLclH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition5)) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = RevLclH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition6)) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, "Over")) { RevLcl2 = Limit2 - RevLclL; RevLcl3 = Limit3 - Limit2; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition3)) { RevLcl3 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition4)) { RevLcl3 = Limit3 - RevLclL; RevLcl4 = RevLclH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition5)) { RevLcl3 = Limit3 - RevLclL; RevLcl4 = Limit4 - Limit3; RevLcl5 = RevLclH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition6)) { RevLcl3 = Limit3 - RevLclL; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, "Over")) { RevLcl3 = Limit3 - RevLclL; RevLcl4 = Limit4 - Limit3; RevLcl5 = Limit5 - Limit4; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition4)) { RevLcl4 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition5)) { RevLcl4 = Limit4 - RevLclL; RevLcl5 = RevLclH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition6)) { RevLcl4 = Limit4 - RevLclL; RevLcl5 = Limit5 - Limit4; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, "Over")) { RevLcl4 = Limit4 - RevLclL; RevLcl5 = Limit5 - Limit4; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, Condition5)) { RevLcl5 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, Condition6)) { RevLcl5 = Limit5 - RevLclL; RevLcl6 = RevLclH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, "Over")) { RevLcl5 = Limit5 - RevLclL; RevLcl6 = Limit6 - Limit5; RevLclOver = RevLclH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition6) && string.Equals(ConditionH, Condition6)) { RevLcl6 = RevLclH - RevLclL; }
        //    //        else if (string.Equals(ConditionL, Condition6) && string.Equals(ConditionH, "Over")) { RevLcl6 = Limit6 - RevLclL; RevLclOver = RevLclH - Limit6; }

        //    //        else { RevLclOver = RevLclH - RevLclL; }

        //    //    }
        //    //    else
        //    //    {
        //    //        if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition1)) { RevLcl1 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition2)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(RevLclL - Limit1); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition3)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(RevLclL - Limit2); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition4)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(RevLclL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition5)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(RevLclL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition6)) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, "Over")) { RevLcl1 = -(Limit1 - RevLclH); RevLcl2 = -(Limit2 - Limit1); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition2)) { RevLcl2 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition3)) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(RevLclL - Limit2); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition4)) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(RevLclL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition5)) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(RevLclL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition6)) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, "Over")) { RevLcl2 = -(Limit2 - RevLclH); RevLcl3 = -(Limit3 - Limit2); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition3)) { RevLcl3 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition4)) { RevLcl3 = -(Limit3 - RevLclH); RevLcl4 = -(RevLclL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition5)) { RevLcl3 = -(Limit3 - RevLclH); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(RevLclL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition6)) { RevLcl3 = -(Limit3 - RevLclH); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, "Over")) { RevLcl3 = -(Limit3 - RevLclH); RevLcl4 = -(Limit4 - Limit3); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition4)) { RevLcl4 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition5)) { RevLcl4 = -(Limit4 - RevLclH); RevLcl5 = -(RevLclL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition6)) { RevLcl4 = -(Limit4 - RevLclH); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, "Over")) { RevLcl4 = -(Limit4 - RevLclH); RevLcl5 = -(Limit5 - Limit4); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, Condition5)) { RevLcl5 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, Condition6)) { RevLcl5 = -(Limit5 - RevLclH); RevLcl6 = -(RevLclL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, "Over")) { RevLcl5 = -(Limit5 - RevLclH); RevLcl6 = -(Limit6 - Limit5); RevLclOver = -(RevLclL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition6) && string.Equals(ConditionL, Condition6)) { RevLcl6 = -(RevLclL - RevLclH); }
        //    //        else if (string.Equals(ConditionH, Condition6) && string.Equals(ConditionL, "Over")) { RevLcl6 = -(Limit6 - RevLclH); RevLclOver = -(RevLclL - Limit6); }

        //    //        else { RevLclOver = RevLclH - RevLclL; }

        //    //    }

        //    //    // Quantity
        //    //    // -----------------------------------
        //    //    if (RevLcl != 0 && Qty != 0)
        //    //    {
        //    //        Qty1 = Qty * RevLcl1 / RevLcl;
        //    //        Qty2 = Qty * RevLcl2 / RevLcl;
        //    //        Qty3 = Qty * RevLcl3 / RevLcl;
        //    //        Qty4 = Qty * RevLcl4 / RevLcl;
        //    //        Qty5 = Qty * RevLcl5 / RevLcl;
        //    //        Qty6 = Qty * RevLcl6 / RevLcl;
        //    //        QtyOver = Qty * RevLclOver / RevLcl;
        //    //    }
        //    //    else if (RevLcl != 0 && Qty == 0)
        //    //    {
        //    //        Qty1 = 0;
        //    //        Qty2 = 0;
        //    //        Qty3 = 0;
        //    //        Qty4 = 0;
        //    //        Qty5 = 0;
        //    //        Qty6 = 0;
        //    //        QtyOver = 0;
        //    //    }
        //    //    else if (RevLcl == 0 && Qty != 0)
        //    //    {
        //    //        Qty1 = 0;
        //    //        Qty2 = 0;
        //    //        Qty3 = 0;
        //    //        Qty4 = 0;
        //    //        Qty5 = 0;
        //    //        Qty6 = 0;
        //    //        QtyOver = 0;

        //    //        if (string.Equals(Condition, Condition1)) { Qty1 = Qty; }
        //    //        else if (string.Equals(Condition, Condition2)) { Qty2 = Qty; }
        //    //        else if (string.Equals(Condition, Condition3)) { Qty3 = Qty; }
        //    //        else if (string.Equals(Condition, Condition4)) { Qty4 = Qty; }
        //    //        else if (string.Equals(Condition, Condition5)) { Qty5 = Qty; }
        //    //        else if (string.Equals(Condition, Condition6)) { Qty6 = Qty; }
        //    //        else { QtyOver = Qty; }
        //    //    }
        //    //    else
        //    //    {
        //    //        Qty1 = 0;
        //    //        Qty2 = 0;
        //    //        Qty3 = 0;
        //    //        Qty4 = 0;
        //    //        Qty5 = 0;
        //    //        Qty6 = 0;
        //    //        QtyOver = 0;
        //    //    }


        //    //    // ASP Tot
        //    //    // -----------------------------------
        //    //    RevLclTot = Math.Round((double)Royalty_QA_Dt.Compute("Sum(Net_Revenue_KLcl)", "CP = '" + CP + "'"), 4);
        //    //    QtyTot = Math.Round((double)Royalty_QA_Dt.Compute("Sum(Net_qty_Kpcs)", "CP = '" + CP + "'"), 3);
        //    //    if (QtyTot != 0) { ASPLclTot = RevLclTot / QtyTot; } else { ASPLclTot = 0; }


        //    //    // RateOnRev
        //    //    // -----------------------------------
        //    //    RateOnRev1 = Rate1;
        //    //    RateOnRev2 = Rate2;
        //    //    RateOnRev3 = Rate3;
        //    //    RateOnRev4 = Rate4;
        //    //    RateOnRev5 = Rate5;
        //    //    RateOnRev6 = Rate6;
        //    //    RateOnRevOver = RateOver;


        //    //    // RateOnPcs
        //    //    // -----------------------------------
        //    //    RateOnPcs1 = ASPLclTot * RateOnRev1;
        //    //    RateOnPcs2 = ASPLclTot * RateOnRev2;
        //    //    RateOnPcs3 = ASPLclTot * RateOnRev3;
        //    //    RateOnPcs4 = ASPLclTot * RateOnRev4;
        //    //    RateOnPcs5 = ASPLclTot * RateOnRev5;
        //    //    RateOnPcs6 = ASPLclTot * RateOnRev6;
        //    //    RateOnPcsOver = ASPLclTot * RateOnRevOver;

        //    //    // Check Min/Max
        //    //    // -----------------------------------
        //    //    if (RateOnPcs1 < Min1) { RateOnPcs1 = Min1; } else if (RateOnPcs1 > Max1) { RateOnPcs1 = Max1; }
        //    //    if (RateOnPcs2 < Min2) { RateOnPcs2 = Min2; } else if (RateOnPcs2 > Max2) { RateOnPcs2 = Max2; }
        //    //    if (RateOnPcs3 < Min3) { RateOnPcs3 = Min3; } else if (RateOnPcs3 > Max3) { RateOnPcs3 = Max3; }
        //    //    if (RateOnPcs4 < Min4) { RateOnPcs4 = Min4; } else if (RateOnPcs4 > Max4) { RateOnPcs4 = Max4; }
        //    //    if (RateOnPcs5 < Min5) { RateOnPcs5 = Min5; } else if (RateOnPcs5 > Max5) { RateOnPcs5 = Max5; }
        //    //    if (RateOnPcs6 < Min6) { RateOnPcs6 = Min6; } else if (RateOnPcs6 > Max6) { RateOnPcs6 = Max6; }
        //    //    if (RateOnPcsOver < MinOver) { RateOnPcsOver = MinOver; } else if (RateOnPcsOver > MaxOver) { RateOnPcsOver = MaxOver; }

        //    //    // Roy finale
        //    //    // -----------------------------------
        //    //    // Roy1
        //    //    RoyLcl1 = RateOnPcs1 * Qty1;
        //    //    RoyLcl2 = RateOnPcs2 * Qty2;
        //    //    RoyLcl3 = RateOnPcs3 * Qty3;
        //    //    RoyLcl4 = RateOnPcs4 * Qty4;
        //    //    RoyLcl5 = RateOnPcs5 * Qty5;
        //    //    RoyLcl6 = RateOnPcs6 * Qty6;
        //    //    RoyLclOver = RateOnPcsOver * QtyOver;


        //    //    RoyLcl = RoyLcl1 + RoyLcl2 + RoyLcl3 + RoyLcl4 + RoyLcl5 + RoyLcl6 + RoyLclOver;
        //    //    RoyLclH = RoyLclL + RoyLcl;
        //    //    RoyUSD = RoyLcl * ExchangeRate;
        //    //    RoyUSDH = RoyUSDL + RoyUSD;


        //    //    // Roy Paid
        //    //    // -----------------------------------
        //    //    if (RoyLcl >= 0)
        //    //    {
        //    //        if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH < Min_Cum_Royalty_KLcl) { RoyPaidLcl = 0; }
        //    //        else if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLclH - Min_Cum_Royalty_KLcl; }
        //    //        else if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = Max_Cum_Royalty_KLcl - Min_Cum_Royalty_KLcl; }
        //    //        else if (RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl && RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLcl; }
        //    //        else if (RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl && RoyLclH >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = Max_Cum_Royalty_KLcl - RoyLclL; }
        //    //        else { RoyPaidLcl = 0; }
        //    //    }
        //    //    else
        //    //    {
        //    //        if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL < Min_Cum_Royalty_KLcl) { RoyPaidLcl = 0; }
        //    //        else if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(RoyLclL - Min_Cum_Royalty_KLcl); }
        //    //        else if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(Max_Cum_Royalty_KLcl - Min_Cum_Royalty_KLcl); }
        //    //        else if (RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl && RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLcl; }
        //    //        else if (RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl && RoyLclL >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(Max_Cum_Royalty_KLcl - RoyLclL); }
        //    //        else { RoyPaidLcl = 0; }
        //    //    }
        //    //    RoyPaidLclH = RoyPaidLclL + RoyPaidLcl;
        //    //    RoyPaidUSD = RoyPaidLcl * ExchangeRate;
        //    //    RoyPaidUSDH = RoyPaidUSDL + RoyPaidUSD;

        //    //    // Rate
        //    //    // -----------------------------------
        //    //    if (Qty != 0) { Rate_Lcl_per_pcs = RoyLcl / Qty; } else { Rate_Lcl_per_pcs = 0; }
        //    //    if (Qty != 0) { Rate_USD_per_pcs = RoyUSD / Qty; } else { Rate_USD_per_pcs = 0; }
        //    //    if (RevLcl != 0) { Rate_Rev_percent = RoyLcl / RevLcl; } else { Rate_Rev_percent = 0; }

        //    //    // Salva i dati i RoyaltyQ
        //    //    // -----------------------------------
        //    //    Royalty_QA_Dt.Rows[RowI]["Condition"] = Condition;
        //    //    Royalty_QA_Dt.Rows[RowI]["Royalty_KLcl"] = Math.Round(RoyLcl, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_Royalty_KLcl"] = Math.Round(RoyLclH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Royalty_KUSD"] = Math.Round(RoyUSD, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_Royalty_KUSD"] = Math.Round(RoyUSDH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["RoyaltyPaid_KLcl"] = Math.Round(RoyPaidLcl, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_RoyaltyPaid_KLcl"] = Math.Round(RoyPaidLclH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["RoyaltyPaid_KUSD"] = Math.Round(RoyPaidUSD, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_RoyaltyPaid_KUSD"] = Math.Round(RoyPaidUSDH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_Lcl_per_pcs"] = Rate_Lcl_per_pcs;
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_USD_per_pcs"] = Rate_USD_per_pcs;
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_Rev_percent"] = Rate_Rev_percent;

        //    //}

        //}




        //public void M09_SLOTqty_RATErev_MINMAXcp(ref DataTable RuleOne_Dt, ref DataTable Royalty_OneRule_OneQuarter_Dt)
        //{
        //    // ****************************************************
        //    // MODELLO 03
        //    // SLOT: su quantity
        //    // RATE: su Revenue
        //    // MIN/MAX RATE: su ASP by CP
        //    //
        //    // ESEMPIO: 
        //    //

        //    // Variabili interne
        //    // -----------------------------------
        //    string AGREEMENT_ID = "";
        //    string AGREEMENT = "";
        //    string VERSION_DATE = "";
        //    string VERSION_DESCR = "";
        //    string MODEL_ACTIVE = "";
        //    string MODEL_INITIAL_MONTH = "";
        //    string MODEL_FINAL_MONTH = "";
        //    string MODEL_TYPE = "";
        //    string MODEL_CURRENCY = "";
        //    double MODEL_NB_SLOT = 0;
        //    double MODEL_MIN_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MIN_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MIN_EACH_QUARTER_ROYALTY = 0;
        //    double MODEL_MAX_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MAX_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MAX_EACH_QUARTER_ROYALTY = 0;
        //    string SELECTION_PL_LIST = "";
        //    string SELECTION_CP_LIST = "";
        //    string SELECTION_CP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = "";
        //    string SLOT01_MESSAGE = "";
        //    double SLOT01_START = 0;
        //    double SLOT01_END = 0;
        //    double SLOT01_RATE = 0;
        //    double SLOT01_MIN = 0;
        //    double SLOT01_MAX = 0;
        //    string SLOT01_A = "";
        //    string SLOT01_B = "";
        //    string SLOT01_C = "";
        //    string SLOT01_D = "";
        //    string SLOT01_E = "";
        //    string SLOT01_F = "";
        //    string SLOT01_G = "";
        //    string SLOT01_H = "";
        //    string SLOT02_MESSAGE = "";
        //    double SLOT02_START = 0;
        //    double SLOT02_END = 0;
        //    double SLOT02_RATE = 0;
        //    double SLOT02_MIN = 0;
        //    double SLOT02_MAX = 0;
        //    string SLOT02_A = "";
        //    string SLOT02_B = "";
        //    string SLOT02_C = "";
        //    string SLOT02_D = "";
        //    string SLOT02_E = "";
        //    string SLOT02_F = "";
        //    string SLOT02_G = "";
        //    string SLOT02_H = "";
        //    string SLOT03_MESSAGE = "";
        //    double SLOT03_START = 0;
        //    double SLOT03_END = 0;
        //    double SLOT03_RATE = 0;
        //    double SLOT03_MIN = 0;
        //    double SLOT03_MAX = 0;
        //    string SLOT03_A = "";
        //    string SLOT03_B = "";
        //    string SLOT03_C = "";
        //    string SLOT03_D = "";
        //    string SLOT03_E = "";
        //    string SLOT03_F = "";
        //    string SLOT03_G = "";
        //    string SLOT03_H = "";
        //    string SLOT04_MESSAGE = "";
        //    double SLOT04_START = 0;
        //    double SLOT04_END = 0;
        //    double SLOT04_RATE = 0;
        //    double SLOT04_MIN = 0;
        //    double SLOT04_MAX = 0;
        //    string SLOT04_A = "";
        //    string SLOT04_B = "";
        //    string SLOT04_C = "";
        //    string SLOT04_D = "";
        //    string SLOT04_E = "";
        //    string SLOT04_F = "";
        //    string SLOT04_G = "";
        //    string SLOT04_H = "";
        //    string SLOT05_MESSAGE = "";
        //    double SLOT05_START = 0;
        //    double SLOT05_END = 0;
        //    double SLOT05_RATE = 0;
        //    double SLOT05_MIN = 0;
        //    double SLOT05_MAX = 0;
        //    string SLOT05_A = "";
        //    string SLOT05_B = "";
        //    string SLOT05_C = "";
        //    string SLOT05_D = "";
        //    string SLOT05_E = "";
        //    string SLOT05_F = "";
        //    string SLOT05_G = "";
        //    string SLOT05_H = "";
        //    string SLOT06_MESSAGE = "";
        //    double SLOT06_START = 0;
        //    double SLOT06_END = 0;
        //    double SLOT06_RATE = 0;
        //    double SLOT06_MIN = 0;
        //    double SLOT06_MAX = 0;
        //    string SLOT06_A = "";
        //    string SLOT06_B = "";
        //    string SLOT06_C = "";
        //    string SLOT06_D = "";
        //    string SLOT06_E = "";
        //    string SLOT06_F = "";
        //    string SLOT06_G = "";
        //    string SLOT06_H = "";
        //    string SLOT07_MESSAGE = "";
        //    double SLOT07_START = 0;
        //    double SLOT07_END = 0;
        //    double SLOT07_RATE = 0;
        //    double SLOT07_MIN = 0;
        //    double SLOT07_MAX = 0;
        //    string SLOT07_A = "";
        //    string SLOT07_B = "";
        //    string SLOT07_C = "";
        //    string SLOT07_D = "";
        //    string SLOT07_E = "";
        //    string SLOT07_F = "";
        //    string SLOT07_G = "";
        //    string SLOT07_H = "";
        //    string SLOT08_MESSAGE = "";
        //    double SLOT08_START = 0;
        //    double SLOT08_END = 0;
        //    double SLOT08_RATE = 0;
        //    double SLOT08_MIN = 0;
        //    double SLOT08_MAX = 0;
        //    string SLOT08_A = "";
        //    string SLOT08_B = "";
        //    string SLOT08_C = "";
        //    string SLOT08_D = "";
        //    string SLOT08_E = "";
        //    string SLOT08_F = "";
        //    string SLOT08_G = "";
        //    string SLOT08_H = "";
        //    string SLOT09_MESSAGE = "";
        //    double SLOT09_START = 0;
        //    double SLOT09_END = 0;
        //    double SLOT09_RATE = 0;
        //    double SLOT09_MIN = 0;
        //    double SLOT09_MAX = 0;
        //    string SLOT09_A = "";
        //    string SLOT09_B = "";
        //    string SLOT09_C = "";
        //    string SLOT09_D = "";
        //    string SLOT09_E = "";
        //    string SLOT09_F = "";
        //    string SLOT09_G = "";
        //    string SLOT09_H = "";
        //    string SLOT10_MESSAGE = "";
        //    double SLOT10_START = 0;
        //    double SLOT10_END = 0;
        //    double SLOT10_RATE = 0;
        //    double SLOT10_MIN = 0;
        //    double SLOT10_MAX = 0;
        //    string SLOT10_A = "";
        //    string SLOT10_B = "";
        //    string SLOT10_C = "";
        //    string SLOT10_D = "";
        //    string SLOT10_E = "";
        //    string SLOT10_F = "";
        //    string SLOT10_G = "";
        //    string SLOT10_H = "";

        //    double NET_QTY_PCS = 0;
        //    double CUM_NET_QTY_PCS = 0;
        //    double NET_REVENUE_LCL = 0;
        //    double CUM_NET_REVENUE_LCL = 0;
        //    double NET_QTY_TOT_PCS = 0;
        //    double NET_REVENUE_TOT_LCL = 0;
        //    double ASPLcl_TOT = 0;

        //    double Qty = 0;
        //    double Qty_Start = 0;
        //    double Qty_End = 0;
        //    double Qty_01 = 0;
        //    double Qty_02 = 0;
        //    double Qty_03 = 0;
        //    double Qty_04 = 0;
        //    double Qty_05 = 0;
        //    double Qty_06 = 0;
        //    double Qty_07 = 0;
        //    double Qty_08 = 0;
        //    double Qty_09 = 0;
        //    double Qty_10 = 0;

        //    double RevLcl = 0;
        //    double RevLcl_Start = 0;
        //    double RevLcl_End = 0;
        //    double RevLcl_01 = 0;
        //    double RevLcl_02 = 0;
        //    double RevLcl_03 = 0;
        //    double RevLcl_04 = 0;
        //    double RevLcl_05 = 0;
        //    double RevLcl_06 = 0;
        //    double RevLcl_07 = 0;
        //    double RevLcl_08 = 0;
        //    double RevLcl_09 = 0;
        //    double RevLcl_10 = 0;

        //    string Slot_Start = "";
        //    string Slot_End = "";

        //    string Condition_Start = "";
        //    string Condition_End = "";
        //    string Condition = "";


        //    // Estrae i dati della Rule
        //    // -----------------------------------
        //    AGREEMENT_ID = (string)RuleOne_Dt.Rows[0]["AGREEMENT_ID"];
        //    AGREEMENT = (string)RuleOne_Dt.Rows[0]["AGREEMENT"];
        //    VERSION_DATE = (string)RuleOne_Dt.Rows[0]["VERSION_DATE"];
        //    VERSION_DESCR = (string)RuleOne_Dt.Rows[0]["VERSION_DESCR"];
        //    MODEL_ACTIVE = (string)RuleOne_Dt.Rows[0]["MODEL_ACTIVE"];
        //    MODEL_INITIAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_INITIAL_MONTH"];
        //    MODEL_FINAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_FINAL_MONTH"];
        //    MODEL_TYPE = (string)RuleOne_Dt.Rows[0]["MODEL_TYPE"];
        //    MODEL_CURRENCY = (string)RuleOne_Dt.Rows[0]["MODEL_CURRENCY"];
        //    MODEL_NB_SLOT = (double)RuleOne_Dt.Rows[0]["MODEL_NB_SLOT"];
        //    MODEL_MIN_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_ACCUMULATED_ROYALTY"];
        //    MODEL_MIN_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_YEAR_ROYALTY"];
        //    MODEL_MIN_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_QUARTER_ROYALTY"];
        //    MODEL_MAX_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_ACCUMULATED_ROYALTY"];
        //    MODEL_MAX_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_YEAR_ROYALTY"];
        //    MODEL_MAX_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_QUARTER_ROYALTY"];
        //    SELECTION_PL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_PL_LIST"];
        //    SELECTION_CP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_LIST"];
        //    SELECTION_CP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_LIST"];
        //    SELECTION_CUSTOMER_FINAL_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_LIST"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_LIST"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_LIST"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION"];
        //    SLOT01_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT01_MESSAGE"];
        //    SLOT01_START = (double)RuleOne_Dt.Rows[0]["SLOT01_START"];
        //    SLOT01_END = (double)RuleOne_Dt.Rows[0]["SLOT01_END"];
        //    SLOT01_RATE = (double)RuleOne_Dt.Rows[0]["SLOT01_RATE"];
        //    SLOT01_MIN = (double)RuleOne_Dt.Rows[0]["SLOT01_MIN"];
        //    SLOT01_MAX = (double)RuleOne_Dt.Rows[0]["SLOT01_MAX"];
        //    SLOT01_A = (string)RuleOne_Dt.Rows[0]["SLOT01_A"];
        //    SLOT01_B = (string)RuleOne_Dt.Rows[0]["SLOT01_B"];
        //    SLOT01_C = (string)RuleOne_Dt.Rows[0]["SLOT01_C"];
        //    SLOT01_D = (string)RuleOne_Dt.Rows[0]["SLOT01_D"];
        //    SLOT01_E = (string)RuleOne_Dt.Rows[0]["SLOT01_E"];
        //    SLOT01_F = (string)RuleOne_Dt.Rows[0]["SLOT01_F"];
        //    SLOT01_G = (string)RuleOne_Dt.Rows[0]["SLOT01_G"];
        //    SLOT01_H = (string)RuleOne_Dt.Rows[0]["SLOT01_H"];
        //    SLOT02_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT02_MESSAGE"];
        //    SLOT02_START = (double)RuleOne_Dt.Rows[0]["SLOT02_START"];
        //    SLOT02_END = (double)RuleOne_Dt.Rows[0]["SLOT02_END"];
        //    SLOT02_RATE = (double)RuleOne_Dt.Rows[0]["SLOT02_RATE"];
        //    SLOT02_MIN = (double)RuleOne_Dt.Rows[0]["SLOT02_MIN"];
        //    SLOT02_MAX = (double)RuleOne_Dt.Rows[0]["SLOT02_MAX"];
        //    SLOT02_A = (string)RuleOne_Dt.Rows[0]["SLOT02_A"];
        //    SLOT02_B = (string)RuleOne_Dt.Rows[0]["SLOT02_B"];
        //    SLOT02_C = (string)RuleOne_Dt.Rows[0]["SLOT02_C"];
        //    SLOT02_D = (string)RuleOne_Dt.Rows[0]["SLOT02_D"];
        //    SLOT02_E = (string)RuleOne_Dt.Rows[0]["SLOT02_E"];
        //    SLOT02_F = (string)RuleOne_Dt.Rows[0]["SLOT02_F"];
        //    SLOT02_G = (string)RuleOne_Dt.Rows[0]["SLOT02_G"];
        //    SLOT02_H = (string)RuleOne_Dt.Rows[0]["SLOT02_H"];
        //    SLOT03_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT03_MESSAGE"];
        //    SLOT03_START = (double)RuleOne_Dt.Rows[0]["SLOT03_START"];
        //    SLOT03_END = (double)RuleOne_Dt.Rows[0]["SLOT03_END"];
        //    SLOT03_RATE = (double)RuleOne_Dt.Rows[0]["SLOT03_RATE"];
        //    SLOT03_MIN = (double)RuleOne_Dt.Rows[0]["SLOT03_MIN"];
        //    SLOT03_MAX = (double)RuleOne_Dt.Rows[0]["SLOT03_MAX"];
        //    SLOT03_A = (string)RuleOne_Dt.Rows[0]["SLOT03_A"];
        //    SLOT03_B = (string)RuleOne_Dt.Rows[0]["SLOT03_B"];
        //    SLOT03_C = (string)RuleOne_Dt.Rows[0]["SLOT03_C"];
        //    SLOT03_D = (string)RuleOne_Dt.Rows[0]["SLOT03_D"];
        //    SLOT03_E = (string)RuleOne_Dt.Rows[0]["SLOT03_E"];
        //    SLOT03_F = (string)RuleOne_Dt.Rows[0]["SLOT03_F"];
        //    SLOT03_G = (string)RuleOne_Dt.Rows[0]["SLOT03_G"];
        //    SLOT03_H = (string)RuleOne_Dt.Rows[0]["SLOT03_H"];
        //    SLOT04_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT04_MESSAGE"];
        //    SLOT04_START = (double)RuleOne_Dt.Rows[0]["SLOT04_START"];
        //    SLOT04_END = (double)RuleOne_Dt.Rows[0]["SLOT04_END"];
        //    SLOT04_RATE = (double)RuleOne_Dt.Rows[0]["SLOT04_RATE"];
        //    SLOT04_MIN = (double)RuleOne_Dt.Rows[0]["SLOT04_MIN"];
        //    SLOT04_MAX = (double)RuleOne_Dt.Rows[0]["SLOT04_MAX"];
        //    SLOT04_A = (string)RuleOne_Dt.Rows[0]["SLOT04_A"];
        //    SLOT04_B = (string)RuleOne_Dt.Rows[0]["SLOT04_B"];
        //    SLOT04_C = (string)RuleOne_Dt.Rows[0]["SLOT04_C"];
        //    SLOT04_D = (string)RuleOne_Dt.Rows[0]["SLOT04_D"];
        //    SLOT04_E = (string)RuleOne_Dt.Rows[0]["SLOT04_E"];
        //    SLOT04_F = (string)RuleOne_Dt.Rows[0]["SLOT04_F"];
        //    SLOT04_G = (string)RuleOne_Dt.Rows[0]["SLOT04_G"];
        //    SLOT04_H = (string)RuleOne_Dt.Rows[0]["SLOT04_H"];
        //    SLOT05_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT05_MESSAGE"];
        //    SLOT05_START = (double)RuleOne_Dt.Rows[0]["SLOT05_START"];
        //    SLOT05_END = (double)RuleOne_Dt.Rows[0]["SLOT05_END"];
        //    SLOT05_RATE = (double)RuleOne_Dt.Rows[0]["SLOT05_RATE"];
        //    SLOT05_MIN = (double)RuleOne_Dt.Rows[0]["SLOT05_MIN"];
        //    SLOT05_MAX = (double)RuleOne_Dt.Rows[0]["SLOT05_MAX"];
        //    SLOT05_A = (string)RuleOne_Dt.Rows[0]["SLOT05_A"];
        //    SLOT05_B = (string)RuleOne_Dt.Rows[0]["SLOT05_B"];
        //    SLOT05_C = (string)RuleOne_Dt.Rows[0]["SLOT05_C"];
        //    SLOT05_D = (string)RuleOne_Dt.Rows[0]["SLOT05_D"];
        //    SLOT05_E = (string)RuleOne_Dt.Rows[0]["SLOT05_E"];
        //    SLOT05_F = (string)RuleOne_Dt.Rows[0]["SLOT05_F"];
        //    SLOT05_G = (string)RuleOne_Dt.Rows[0]["SLOT05_G"];
        //    SLOT05_H = (string)RuleOne_Dt.Rows[0]["SLOT05_H"];
        //    SLOT06_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT06_MESSAGE"];
        //    SLOT06_START = (double)RuleOne_Dt.Rows[0]["SLOT06_START"];
        //    SLOT06_END = (double)RuleOne_Dt.Rows[0]["SLOT06_END"];
        //    SLOT06_RATE = (double)RuleOne_Dt.Rows[0]["SLOT06_RATE"];
        //    SLOT06_MIN = (double)RuleOne_Dt.Rows[0]["SLOT06_MIN"];
        //    SLOT06_MAX = (double)RuleOne_Dt.Rows[0]["SLOT06_MAX"];
        //    SLOT06_A = (string)RuleOne_Dt.Rows[0]["SLOT06_A"];
        //    SLOT06_B = (string)RuleOne_Dt.Rows[0]["SLOT06_B"];
        //    SLOT06_C = (string)RuleOne_Dt.Rows[0]["SLOT06_C"];
        //    SLOT06_D = (string)RuleOne_Dt.Rows[0]["SLOT06_D"];
        //    SLOT06_E = (string)RuleOne_Dt.Rows[0]["SLOT06_E"];
        //    SLOT06_F = (string)RuleOne_Dt.Rows[0]["SLOT06_F"];
        //    SLOT06_G = (string)RuleOne_Dt.Rows[0]["SLOT06_G"];
        //    SLOT06_H = (string)RuleOne_Dt.Rows[0]["SLOT06_H"];
        //    SLOT07_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT07_MESSAGE"];
        //    SLOT07_START = (double)RuleOne_Dt.Rows[0]["SLOT07_START"];
        //    SLOT07_END = (double)RuleOne_Dt.Rows[0]["SLOT07_END"];
        //    SLOT07_RATE = (double)RuleOne_Dt.Rows[0]["SLOT07_RATE"];
        //    SLOT07_MIN = (double)RuleOne_Dt.Rows[0]["SLOT07_MIN"];
        //    SLOT07_MAX = (double)RuleOne_Dt.Rows[0]["SLOT07_MAX"];
        //    SLOT07_A = (string)RuleOne_Dt.Rows[0]["SLOT07_A"];
        //    SLOT07_B = (string)RuleOne_Dt.Rows[0]["SLOT07_B"];
        //    SLOT07_C = (string)RuleOne_Dt.Rows[0]["SLOT07_C"];
        //    SLOT07_D = (string)RuleOne_Dt.Rows[0]["SLOT07_D"];
        //    SLOT07_E = (string)RuleOne_Dt.Rows[0]["SLOT07_E"];
        //    SLOT07_F = (string)RuleOne_Dt.Rows[0]["SLOT07_F"];
        //    SLOT07_G = (string)RuleOne_Dt.Rows[0]["SLOT07_G"];
        //    SLOT07_H = (string)RuleOne_Dt.Rows[0]["SLOT07_H"];
        //    SLOT08_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT08_MESSAGE"];
        //    SLOT08_START = (double)RuleOne_Dt.Rows[0]["SLOT08_START"];
        //    SLOT08_END = (double)RuleOne_Dt.Rows[0]["SLOT08_END"];
        //    SLOT08_RATE = (double)RuleOne_Dt.Rows[0]["SLOT08_RATE"];
        //    SLOT08_MIN = (double)RuleOne_Dt.Rows[0]["SLOT08_MIN"];
        //    SLOT08_MAX = (double)RuleOne_Dt.Rows[0]["SLOT08_MAX"];
        //    SLOT08_A = (string)RuleOne_Dt.Rows[0]["SLOT08_A"];
        //    SLOT08_B = (string)RuleOne_Dt.Rows[0]["SLOT08_B"];
        //    SLOT08_C = (string)RuleOne_Dt.Rows[0]["SLOT08_C"];
        //    SLOT08_D = (string)RuleOne_Dt.Rows[0]["SLOT08_D"];
        //    SLOT08_E = (string)RuleOne_Dt.Rows[0]["SLOT08_E"];
        //    SLOT08_F = (string)RuleOne_Dt.Rows[0]["SLOT08_F"];
        //    SLOT08_G = (string)RuleOne_Dt.Rows[0]["SLOT08_G"];
        //    SLOT08_H = (string)RuleOne_Dt.Rows[0]["SLOT08_H"];
        //    SLOT09_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT09_MESSAGE"];
        //    SLOT09_START = (double)RuleOne_Dt.Rows[0]["SLOT09_START"];
        //    SLOT09_END = (double)RuleOne_Dt.Rows[0]["SLOT09_END"];
        //    SLOT09_RATE = (double)RuleOne_Dt.Rows[0]["SLOT09_RATE"];
        //    SLOT09_MIN = (double)RuleOne_Dt.Rows[0]["SLOT09_MIN"];
        //    SLOT09_MAX = (double)RuleOne_Dt.Rows[0]["SLOT09_MAX"];
        //    SLOT09_A = (string)RuleOne_Dt.Rows[0]["SLOT09_A"];
        //    SLOT09_B = (string)RuleOne_Dt.Rows[0]["SLOT09_B"];
        //    SLOT09_C = (string)RuleOne_Dt.Rows[0]["SLOT09_C"];
        //    SLOT09_D = (string)RuleOne_Dt.Rows[0]["SLOT09_D"];
        //    SLOT09_E = (string)RuleOne_Dt.Rows[0]["SLOT09_E"];
        //    SLOT09_F = (string)RuleOne_Dt.Rows[0]["SLOT09_F"];
        //    SLOT09_G = (string)RuleOne_Dt.Rows[0]["SLOT09_G"];
        //    SLOT09_H = (string)RuleOne_Dt.Rows[0]["SLOT09_H"];
        //    SLOT10_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT10_MESSAGE"];
        //    SLOT10_START = (double)RuleOne_Dt.Rows[0]["SLOT10_START"];
        //    SLOT10_END = (double)RuleOne_Dt.Rows[0]["SLOT10_END"];
        //    SLOT10_RATE = (double)RuleOne_Dt.Rows[0]["SLOT10_RATE"];
        //    SLOT10_MIN = (double)RuleOne_Dt.Rows[0]["SLOT10_MIN"];
        //    SLOT10_MAX = (double)RuleOne_Dt.Rows[0]["SLOT10_MAX"];
        //    SLOT10_A = (string)RuleOne_Dt.Rows[0]["SLOT10_A"];
        //    SLOT10_B = (string)RuleOne_Dt.Rows[0]["SLOT10_B"];
        //    SLOT10_C = (string)RuleOne_Dt.Rows[0]["SLOT10_C"];
        //    SLOT10_D = (string)RuleOne_Dt.Rows[0]["SLOT10_D"];
        //    SLOT10_E = (string)RuleOne_Dt.Rows[0]["SLOT10_E"];
        //    SLOT10_F = (string)RuleOne_Dt.Rows[0]["SLOT10_F"];
        //    SLOT10_G = (string)RuleOne_Dt.Rows[0]["SLOT10_G"];
        //    SLOT10_H = (string)RuleOne_Dt.Rows[0]["SLOT10_H"];




        //    // Loop
        //    // -----------------------------------
        //    for (int i = 0; i < Royalty_OneRule_OneQuarter_Dt.Rows.Count; i++)
        //    {

        //        // Dati iniziali
        //        NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_QTY_PCS"]), 0);
        //        CUM_NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_QTY_PCS"]), 0);
        //        NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_REVENUE_LCL"]), 2);
        //        CUM_NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_REVENUE_LCL"]), 2);
        //        NET_QTY_TOT_PCS = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_QTY_PCS)", ""), 0);
        //        NET_REVENUE_TOT_LCL = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_REVENUE_LCL)", ""), 2);

        //        Qty = NET_QTY_PCS;
        //        Qty_End = CUM_NET_QTY_PCS;
        //        Qty_Start = Qty_End - Qty;

        //        RevLcl = NET_REVENUE_LCL;
        //        RevLcl_End = CUM_NET_REVENUE_LCL;
        //        RevLcl_Start = RevLcl_End - RevLcl;

        //        if (NET_QTY_TOT_PCS != 0)
        //        {
        //            ASPLcl_TOT = NET_REVENUE_TOT_LCL / NET_QTY_TOT_PCS;
        //        }
        //        else
        //        {
        //            ASPLcl_TOT = 0;
        //        }


        //        // Condition
        //        Condition_By_Qty(
        //            in Qty_Start,
        //            in Qty_End,
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT01_MESSAGE,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT02_MESSAGE,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT03_MESSAGE,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT04_MESSAGE,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT05_MESSAGE,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT06_MESSAGE,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT07_MESSAGE,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT08_MESSAGE,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT09_MESSAGE,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in SLOT10_MESSAGE,
        //            ref Condition_Start,
        //            ref Condition_End,
        //            ref Condition
        //            );


        //        // Quantity, Revenue
        //        Quantity_And_Revenue_By_Qty(
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in Qty,
        //            in Qty_Start,
        //            in Qty_End,
        //            ref Qty_01,
        //            ref Qty_02,
        //            ref Qty_03,
        //            ref Qty_04,
        //            ref Qty_05,
        //            ref Qty_06,
        //            ref Qty_07,
        //            ref Qty_08,
        //            ref Qty_09,
        //            ref Qty_10,
        //            ref RevLcl,
        //            ref RevLcl_End,
        //            ref RevLcl_Start,
        //            ref RevLcl_01,
        //            ref RevLcl_02,
        //            ref RevLcl_03,
        //            ref RevLcl_04,
        //            ref RevLcl_05,
        //            ref RevLcl_06,
        //            ref RevLcl_07,
        //            ref RevLcl_08,
        //            ref RevLcl_09,
        //            ref RevLcl_10);



        //    }







        //    //// Variabili interne
        //    //// -----------------------------------
        //    //double Id_Agreement = 0;
        //    //string Agreement = "";
        //    //string Model = "";
        //    //double Slot = 0;
        //    //string Agreement_Date_Start = "";
        //    //string Agreement_Date_End = "";
        //    //string PL_String = "";
        //    //string PL_Cond = "";
        //    //string CP_String = "";
        //    //string CP_Cond = "";
        //    //string Customer_String = "";
        //    //string Customer_Cond = "";
        //    //string Condition1 = "";
        //    //double Limit1 = 0;
        //    //double Rate1 = 0;
        //    //double Min1 = 0;
        //    //double Max1 = 0;
        //    //double Extra1A = 0;
        //    //double Extra1B = 0;
        //    //double Extra1C = 0;
        //    //double Extra1D = 0;
        //    //double Extra1E = 0;
        //    //double Extra1F = 0;
        //    //string Condition2 = "";
        //    //double Limit2 = 0;
        //    //double Rate2 = 0;
        //    //double Min2 = 0;
        //    //double Max2 = 0;
        //    //double Extra2A = 0;
        //    //double Extra2B = 0;
        //    //double Extra2C = 0;
        //    //double Extra2D = 0;
        //    //double Extra2E = 0;
        //    //double Extra2F = 0;
        //    //string Condition3 = "";
        //    //double Limit3 = 0;
        //    //double Rate3 = 0;
        //    //double Min3 = 0;
        //    //double Max3 = 0;
        //    //double Extra3A = 0;
        //    //double Extra3B = 0;
        //    //double Extra3C = 0;
        //    //double Extra3D = 0;
        //    //double Extra3E = 0;
        //    //double Extra3F = 0;
        //    //string Condition4 = "";
        //    //double Limit4 = 0;
        //    //double Rate4 = 0;
        //    //double Min4 = 0;
        //    //double Max4 = 0;
        //    //double Extra4A = 0;
        //    //double Extra4B = 0;
        //    //double Extra4C = 0;
        //    //double Extra4D = 0;
        //    //double Extra4E = 0;
        //    //double Extra4F = 0;
        //    //string Condition5 = "";
        //    //double Limit5 = 0;
        //    //double Rate5 = 0;
        //    //double Min5 = 0;
        //    //double Max5 = 0;
        //    //double Extra5A = 0;
        //    //double Extra5B = 0;
        //    //double Extra5C = 0;
        //    //double Extra5D = 0;
        //    //double Extra5E = 0;
        //    //double Extra5F = 0;
        //    //string Condition6 = "";
        //    //double Limit6 = 0;
        //    //double Rate6 = 0;
        //    //double Min6 = 0;
        //    //double Max6 = 0;
        //    //double Extra6A = 0;
        //    //double Extra6B = 0;
        //    //double Extra6C = 0;
        //    //double Extra6D = 0;
        //    //double Extra6E = 0;
        //    //double Extra6F = 0;
        //    //double RateOver = 0;
        //    //double MinOver = 0;
        //    //double MaxOver = 0;
        //    //double ExtraOverA = 0;
        //    //double ExtraOverB = 0;
        //    //double ExtraOverC = 0;
        //    //double ExtraOverD = 0;
        //    //double ExtraOverE = 0;
        //    //double ExtraOverF = 0;
        //    //string LclCurrency = "";
        //    //double Min_Cum_Royalty_KLcl = 0;
        //    //double Max_Cum_Royalty_KLcl = 0;

        //    //double QtyL = 0;
        //    //double QtyH = 0;
        //    //double Qty = 0;
        //    //double Qty1 = 0;
        //    //double Qty2 = 0;
        //    //double Qty3 = 0;
        //    //double Qty4 = 0;
        //    //double Qty5 = 0;
        //    //double Qty6 = 0;
        //    //double QtyOver = 0;

        //    //string ConditionL = "";
        //    //string ConditionH = "";
        //    //string Condition = "";

        //    //double RevLclL = 0;
        //    //double RevLclH = 0;
        //    //double RevLcl = 0;
        //    //double RevLcl1 = 0;
        //    //double RevLcl2 = 0;
        //    //double RevLcl3 = 0;
        //    //double RevLcl4 = 0;
        //    //double RevLcl5 = 0;
        //    //double RevLcl6 = 0;
        //    //double RevLclOver = 0;

        //    //double RateOnPcs1 = 0;
        //    //double RateOnPcs2 = 0;
        //    //double RateOnPcs3 = 0;
        //    //double RateOnPcs4 = 0;
        //    //double RateOnPcs5 = 0;
        //    //double RateOnPcs6 = 0;
        //    //double RateOnPcsOver = 0;

        //    //double RateOnRev1 = 0;
        //    //double RateOnRev2 = 0;
        //    //double RateOnRev3 = 0;
        //    //double RateOnRev4 = 0;
        //    //double RateOnRev5 = 0;
        //    //double RateOnRev6 = 0;
        //    //double RateOnRevOver = 0;

        //    //double RoyLclL = 0;
        //    //double RoyLclH = 0;
        //    //double RoyLcl = 0;
        //    //double RoyLcl1 = 0;
        //    //double RoyLcl2 = 0;
        //    //double RoyLcl3 = 0;
        //    //double RoyLcl4 = 0;
        //    //double RoyLcl5 = 0;
        //    //double RoyLcl6 = 0;
        //    //double RoyLclOver = 0;

        //    //double RoyUSDL = 0;
        //    //double RoyUSDH = 0;
        //    //double RoyUSD = 0;

        //    //double RoyPaidLcl = 0;
        //    //double RoyPaidLclL = 0;
        //    //double RoyPaidLclH = 0;

        //    //double RoyPaidUSD = 0;
        //    //double RoyPaidUSDL = 0;
        //    //double RoyPaidUSDH = 0;

        //    //double Rate_Lcl_per_pcs = 0;
        //    //double Rate_USD_per_pcs = 0;
        //    //double Rate_Rev_percent = 0;

        //    //double ExchangeRate = 0;

        //    //double ASPLclTot = 0;
        //    //double RevLclTot = 0;
        //    //double QtyTot = 0;

        //    //string CP = "";

        //    //// Estrae i dati dell'Agreement
        //    //// -----------------------------------
        //    //Id_Agreement = (double)Agreement_QA_Dt.Rows[0]["Id_Agreement"];
        //    //Agreement = Agreement_QA_Dt.Rows[0]["Agreement"].ToString();
        //    //Model = Agreement_QA_Dt.Rows[0]["Model"].ToString();
        //    //Slot = (double)Agreement_QA_Dt.Rows[0]["Slot"];
        //    //Agreement_Date_Start = Agreement_QA_Dt.Rows[0]["Agreement_Date_Start"].ToString();
        //    //Agreement_Date_End = Agreement_QA_Dt.Rows[0]["Agreement_Date_End"].ToString();
        //    //PL_String = Agreement_QA_Dt.Rows[0]["PL_String"].ToString();
        //    //PL_Cond = Agreement_QA_Dt.Rows[0]["PL_Cond"].ToString();
        //    //CP_String = Agreement_QA_Dt.Rows[0]["CP_String"].ToString();
        //    //CP_Cond = Agreement_QA_Dt.Rows[0]["CP_Cond"].ToString();
        //    //Customer_String = Agreement_QA_Dt.Rows[0]["Customer_String"].ToString();
        //    //Customer_Cond = Agreement_QA_Dt.Rows[0]["Customer_Cond"].ToString();
        //    //Condition1 = Agreement_QA_Dt.Rows[0]["Condition1"].ToString();
        //    //Limit1 = (double)Agreement_QA_Dt.Rows[0]["Limit1"];
        //    //Rate1 = (double)Agreement_QA_Dt.Rows[0]["Rate1"];
        //    //Min1 = (double)Agreement_QA_Dt.Rows[0]["Min1"];
        //    //Max1 = (double)Agreement_QA_Dt.Rows[0]["Max1"];
        //    //Extra1A = (double)Agreement_QA_Dt.Rows[0]["Extra1A"];
        //    //Extra1B = (double)Agreement_QA_Dt.Rows[0]["Extra1B"];
        //    //Extra1C = (double)Agreement_QA_Dt.Rows[0]["Extra1C"];
        //    //Extra1D = (double)Agreement_QA_Dt.Rows[0]["Extra1D"];
        //    //Extra1E = (double)Agreement_QA_Dt.Rows[0]["Extra1E"];
        //    //Extra1F = (double)Agreement_QA_Dt.Rows[0]["Extra1F"];
        //    //Condition2 = Agreement_QA_Dt.Rows[0]["Condition2"].ToString();
        //    //Limit2 = (double)Agreement_QA_Dt.Rows[0]["Limit2"];
        //    //Rate2 = (double)Agreement_QA_Dt.Rows[0]["Rate2"];
        //    //Min2 = (double)Agreement_QA_Dt.Rows[0]["Min2"];
        //    //Max2 = (double)Agreement_QA_Dt.Rows[0]["Max2"];
        //    //Extra2A = (double)Agreement_QA_Dt.Rows[0]["Extra2A"];
        //    //Extra2B = (double)Agreement_QA_Dt.Rows[0]["Extra2B"];
        //    //Extra2C = (double)Agreement_QA_Dt.Rows[0]["Extra2C"];
        //    //Extra2D = (double)Agreement_QA_Dt.Rows[0]["Extra2D"];
        //    //Extra2E = (double)Agreement_QA_Dt.Rows[0]["Extra2E"];
        //    //Extra2F = (double)Agreement_QA_Dt.Rows[0]["Extra2F"];
        //    //Condition3 = Agreement_QA_Dt.Rows[0]["Condition3"].ToString();
        //    //Limit3 = (double)Agreement_QA_Dt.Rows[0]["Limit3"];
        //    //Rate3 = (double)Agreement_QA_Dt.Rows[0]["Rate3"];
        //    //Min3 = (double)Agreement_QA_Dt.Rows[0]["Min3"];
        //    //Max3 = (double)Agreement_QA_Dt.Rows[0]["Max3"];
        //    //Extra3A = (double)Agreement_QA_Dt.Rows[0]["Extra3A"];
        //    //Extra3B = (double)Agreement_QA_Dt.Rows[0]["Extra3B"];
        //    //Extra3C = (double)Agreement_QA_Dt.Rows[0]["Extra3C"];
        //    //Extra3D = (double)Agreement_QA_Dt.Rows[0]["Extra3D"];
        //    //Extra3E = (double)Agreement_QA_Dt.Rows[0]["Extra3E"];
        //    //Extra3F = (double)Agreement_QA_Dt.Rows[0]["Extra3F"];
        //    //Condition4 = Agreement_QA_Dt.Rows[0]["Condition4"].ToString();
        //    //Limit4 = (double)Agreement_QA_Dt.Rows[0]["Limit4"];
        //    //Rate4 = (double)Agreement_QA_Dt.Rows[0]["Rate4"];
        //    //Min4 = (double)Agreement_QA_Dt.Rows[0]["Min4"];
        //    //Max4 = (double)Agreement_QA_Dt.Rows[0]["Max4"];
        //    //Extra4A = (double)Agreement_QA_Dt.Rows[0]["Extra4A"];
        //    //Extra4B = (double)Agreement_QA_Dt.Rows[0]["Extra4B"];
        //    //Extra4C = (double)Agreement_QA_Dt.Rows[0]["Extra4C"];
        //    //Extra4D = (double)Agreement_QA_Dt.Rows[0]["Extra4D"];
        //    //Extra4E = (double)Agreement_QA_Dt.Rows[0]["Extra4E"];
        //    //Extra4F = (double)Agreement_QA_Dt.Rows[0]["Extra4F"];
        //    //Condition5 = Agreement_QA_Dt.Rows[0]["Condition5"].ToString();
        //    //Limit5 = (double)Agreement_QA_Dt.Rows[0]["Limit5"];
        //    //Rate5 = (double)Agreement_QA_Dt.Rows[0]["Rate5"];
        //    //Min5 = (double)Agreement_QA_Dt.Rows[0]["Min5"];
        //    //Max5 = (double)Agreement_QA_Dt.Rows[0]["Max5"];
        //    //Extra5A = (double)Agreement_QA_Dt.Rows[0]["Extra5A"];
        //    //Extra5B = (double)Agreement_QA_Dt.Rows[0]["Extra5B"];
        //    //Extra5C = (double)Agreement_QA_Dt.Rows[0]["Extra5C"];
        //    //Extra5D = (double)Agreement_QA_Dt.Rows[0]["Extra5D"];
        //    //Extra5E = (double)Agreement_QA_Dt.Rows[0]["Extra5E"];
        //    //Extra5F = (double)Agreement_QA_Dt.Rows[0]["Extra5F"];
        //    //Condition6 = Agreement_QA_Dt.Rows[0]["Condition6"].ToString();
        //    //Limit6 = (double)Agreement_QA_Dt.Rows[0]["Limit6"];
        //    //Rate6 = (double)Agreement_QA_Dt.Rows[0]["Rate6"];
        //    //Min6 = (double)Agreement_QA_Dt.Rows[0]["Min6"];
        //    //Max6 = (double)Agreement_QA_Dt.Rows[0]["Max6"];
        //    //Extra6A = (double)Agreement_QA_Dt.Rows[0]["Extra6A"];
        //    //Extra6B = (double)Agreement_QA_Dt.Rows[0]["Extra6B"];
        //    //Extra6C = (double)Agreement_QA_Dt.Rows[0]["Extra6C"];
        //    //Extra6D = (double)Agreement_QA_Dt.Rows[0]["Extra6D"];
        //    //Extra6E = (double)Agreement_QA_Dt.Rows[0]["Extra6E"];
        //    //Extra6F = (double)Agreement_QA_Dt.Rows[0]["Extra6F"];
        //    //RateOver = (double)Agreement_QA_Dt.Rows[0]["RateOver"];
        //    //MinOver = (double)Agreement_QA_Dt.Rows[0]["MinOver"];
        //    //MaxOver = (double)Agreement_QA_Dt.Rows[0]["MaxOver"];
        //    //ExtraOverA = (double)Agreement_QA_Dt.Rows[0]["ExtraOverA"];
        //    //ExtraOverB = (double)Agreement_QA_Dt.Rows[0]["ExtraOverB"];
        //    //ExtraOverC = (double)Agreement_QA_Dt.Rows[0]["ExtraOverC"];
        //    //ExtraOverD = (double)Agreement_QA_Dt.Rows[0]["ExtraOverD"];
        //    //ExtraOverE = (double)Agreement_QA_Dt.Rows[0]["ExtraOverE"];
        //    //ExtraOverF = (double)Agreement_QA_Dt.Rows[0]["ExtraOverF"];
        //    //LclCurrency = Agreement_QA_Dt.Rows[0]["LclCurrency"].ToString();
        //    //Min_Cum_Royalty_KLcl = (double)Agreement_QA_Dt.Rows[0]["Min_Cum_Royalty_KLcl"];
        //    //Max_Cum_Royalty_KLcl = (double)Agreement_QA_Dt.Rows[0]["Max_Cum_Royalty_KLcl"];


        //    //// Loop
        //    //// -----------------------------------
        //    //for (int RowI = 0; RowI <= Royalty_QA_Dt.Rows.Count - 1; RowI++)
        //    //{
        //    //    // Dati iniziali 
        //    //    // -----------------------------------
        //    //    Condition = "";
        //    //    CP = Convert.ToString(Royalty_QA_Dt.Rows[RowI]["CP"]);
        //    //    ExchangeRate = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["ExchangeRate"]), 4);
        //    //    if (ExchangeRate == 0) { ExchangeRate = 1; }

        //    //    RevLcl = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Net_Revenue_KLcl"]), 4);
        //    //    RevLclH = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Cum_Net_Revenue_KLcl"]), 4);
        //    //    RevLclL = RevLclH - RevLcl;
        //    //    Qty = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Net_qty_Kpcs"]), 3);
        //    //    QtyH = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Cum_Net_qty_Kpcs"]), 3);
        //    //    QtyL = QtyH - Qty;
        //    //    RoyLcl = 0;
        //    //    RoyUSD = 0;
        //    //    RoyPaidLcl = 0;
        //    //    RoyPaidUSD = 0;
        //    //    Rate_Lcl_per_pcs = 0;
        //    //    Rate_USD_per_pcs = 0;
        //    //    Rate_Rev_percent = 0;

        //    //    if (RowI == 0)
        //    //    {
        //    //        RoyLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_Royalty_KLcl"]), 4);
        //    //        RoyUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_Royalty_KUSD"]), 4);
        //    //        RoyPaidLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_RoyaltyPaid_KLcl"]), 4);
        //    //        RoyPaidUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_RoyaltyPaid_KUSD"]), 4);
        //    //    }
        //    //    else
        //    //    {
        //    //        RoyLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_Royalty_KLcl"]), 4);
        //    //        RoyUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_Royalty_KUSD"]), 4);
        //    //        RoyPaidLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_RoyaltyPaid_KLcl"]), 4);
        //    //        RoyPaidUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_RoyaltyPaid_KUSD"]), 4);
        //    //    }

        //    //    // Condition
        //    //    // -----------------------------------
        //    //    if (QtyL < Limit1) { ConditionL = Condition1; }
        //    //    else if (QtyL >= Limit1 && QtyL < Limit2) { ConditionL = Condition2; }
        //    //    else if (QtyL >= Limit2 && QtyL < Limit3) { ConditionL = Condition3; }
        //    //    else if (QtyL >= Limit3 && QtyL < Limit4) { ConditionL = Condition4; }
        //    //    else if (QtyL >= Limit4 && QtyL < Limit5) { ConditionL = Condition5; }
        //    //    else if (QtyL >= Limit5 && QtyL < Limit6) { ConditionL = Condition6; }
        //    //    else if (QtyL >= Limit6) { ConditionL = "Over"; }
        //    //    else { ConditionL = "ERR"; }

        //    //    if (QtyH < Limit1) { ConditionH = Condition1; }
        //    //    else if (QtyH >= Limit1 && QtyH < Limit2) { ConditionH = Condition2; }
        //    //    else if (QtyH >= Limit2 && QtyH < Limit3) { ConditionH = Condition3; }
        //    //    else if (QtyH >= Limit3 && QtyH < Limit4) { ConditionH = Condition4; }
        //    //    else if (QtyH >= Limit4 && QtyH < Limit5) { ConditionH = Condition5; }
        //    //    else if (QtyH >= Limit5 && QtyH < Limit6) { ConditionH = Condition6; }
        //    //    else if (QtyH >= Limit6) { ConditionL = "Over"; }
        //    //    else { ConditionL = "ERR"; }

        //    //    if (string.Equals(ConditionL, ConditionH))
        //    //    {
        //    //        Condition = ConditionL;
        //    //    }
        //    //    else
        //    //    {
        //    //        Condition = ConditionL + " -> " + ConditionH;
        //    //    }

        //    //    // Quantity
        //    //    // -----------------------------------
        //    //    Qty1 = 0;
        //    //    Qty2 = 0;
        //    //    Qty3 = 0;
        //    //    Qty4 = 0;
        //    //    Qty5 = 0;
        //    //    Qty6 = 0;
        //    //    QtyOver = 0;

        //    //    if (Qty >= 0)
        //    //    {
        //    //        if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition1)) { Qty1 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition2)) { Qty1 = Limit1 - QtyL; Qty2 = QtyH - Limit1; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition3)) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = QtyH - Limit2; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition4)) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = Limit3 - Limit2; Qty4 = QtyH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition5)) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = QtyH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition6)) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, "Over")) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition2)) { Qty2 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition3)) { Qty2 = Limit2 - QtyL; Qty3 = QtyH - Limit2; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition4)) { Qty2 = Limit2 - QtyL; Qty3 = Limit3 - Limit2; Qty4 = QtyH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition5)) { Qty2 = Limit2 - QtyL; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = QtyH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition6)) { Qty2 = Limit2 - QtyL; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, "Over")) { Qty2 = Limit2 - QtyL; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition3)) { Qty3 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition4)) { Qty3 = Limit3 - QtyL; Qty4 = QtyH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition5)) { Qty3 = Limit3 - QtyL; Qty4 = Limit4 - Limit3; Qty5 = QtyH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition6)) { Qty3 = Limit3 - QtyL; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, "Over")) { Qty3 = Limit3 - QtyL; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition4)) { Qty4 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition5)) { Qty4 = Limit4 - QtyL; Qty5 = QtyH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition6)) { Qty4 = Limit4 - QtyL; Qty5 = Limit5 - Limit4; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, "Over")) { Qty4 = Limit4 - QtyL; Qty5 = Limit5 - Limit4; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, Condition5)) { Qty5 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, Condition6)) { Qty5 = Limit5 - QtyL; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, "Over")) { Qty5 = Limit5 - QtyL; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition6) && string.Equals(ConditionH, Condition6)) { Qty6 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition6) && string.Equals(ConditionH, "Over")) { Qty6 = Limit6 - QtyL; QtyOver = QtyH - Limit6; }

        //    //        else { QtyOver = QtyH - QtyL; }

        //    //    }
        //    //    else
        //    //    {
        //    //        if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition1)) { Qty1 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition2)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(QtyL - Limit1); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition3)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(QtyL - Limit2); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition4)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(Limit3 - Limit2); Qty4 = -(QtyL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition5)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(QtyL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition6)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, "Over")) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition2)) { Qty2 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition3)) { Qty2 = -(Limit2 - QtyH); Qty3 = -(QtyL - Limit2); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition4)) { Qty2 = -(Limit2 - QtyH); Qty3 = -(Limit3 - Limit2); Qty4 = -(QtyL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition5)) { Qty2 = -(Limit2 - QtyH); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(QtyL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition6)) { Qty2 = -(Limit2 - QtyH); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, "Over")) { Qty2 = -(Limit2 - QtyH); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition3)) { Qty3 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition4)) { Qty3 = -(Limit3 - QtyH); Qty4 = -(QtyL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition5)) { Qty3 = -(Limit3 - QtyH); Qty4 = -(Limit4 - Limit3); Qty5 = -(QtyL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition6)) { Qty3 = -(Limit3 - QtyH); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, "Over")) { Qty3 = -(Limit3 - QtyH); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition4)) { Qty4 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition5)) { Qty4 = -(Limit4 - QtyH); Qty5 = -(QtyL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition6)) { Qty4 = -(Limit4 - QtyH); Qty5 = -(Limit5 - Limit4); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, "Over")) { Qty4 = -(Limit4 - QtyH); Qty5 = -(Limit5 - Limit4); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, Condition5)) { Qty5 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, Condition6)) { Qty5 = -(Limit5 - QtyH); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, "Over")) { Qty5 = -(Limit5 - QtyH); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition6) && string.Equals(ConditionL, Condition6)) { Qty6 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition6) && string.Equals(ConditionL, "Over")) { Qty6 = -(Limit6 - QtyH); QtyOver = -(QtyL - Limit6); }

        //    //        else { QtyOver = QtyH - QtyL; }

        //    //    }

        //    //    // Net Revenue
        //    //    // -----------------------------------
        //    //    if (Qty != 0 && RevLcl != 0)
        //    //    {
        //    //        RevLcl1 = RevLcl * Qty1 / Qty;
        //    //        RevLcl2 = RevLcl * Qty2 / Qty;
        //    //        RevLcl3 = RevLcl * Qty3 / Qty;
        //    //        RevLcl4 = RevLcl * Qty4 / Qty;
        //    //        RevLcl5 = RevLcl * Qty5 / Qty;
        //    //        RevLcl6 = RevLcl * Qty6 / Qty;
        //    //        RevLclOver = RevLcl * QtyOver / Qty;
        //    //    }
        //    //    else if (Qty != 0 && RevLcl == 0)
        //    //    {
        //    //        RevLcl1 = 0;
        //    //        RevLcl2 = 0;
        //    //        RevLcl3 = 0;
        //    //        RevLcl4 = 0;
        //    //        RevLcl5 = 0;
        //    //        RevLcl6 = 0;
        //    //        RevLclOver = 0;
        //    //    }
        //    //    else if (Qty == 0 && RevLcl != 0)
        //    //    {
        //    //        RevLcl1 = 0;
        //    //        RevLcl2 = 0;
        //    //        RevLcl3 = 0;
        //    //        RevLcl4 = 0;
        //    //        RevLcl5 = 0;
        //    //        RevLcl6 = 0;
        //    //        RevLclOver = 0;

        //    //        if (string.Equals(Condition, Condition1)) { RevLcl1 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition2)) { RevLcl2 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition3)) { RevLcl3 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition4)) { RevLcl4 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition5)) { RevLcl5 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition6)) { RevLcl6 = RevLcl; }
        //    //        else { RevLclOver = RevLcl; }
        //    //    }
        //    //    else
        //    //    {
        //    //        RevLcl1 = 0;
        //    //        RevLcl2 = 0;
        //    //        RevLcl3 = 0;
        //    //        RevLcl4 = 0;
        //    //        RevLcl5 = 0;
        //    //        RevLcl6 = 0;
        //    //        RevLclOver = 0;
        //    //    }



        //    //    // ASP Tot
        //    //    // -----------------------------------
        //    //    RevLclTot = Math.Round((double)Royalty_QA_Dt.Compute("Sum(Net_Revenue_KLcl)", "CP = '" + CP + "'"), 4);
        //    //    QtyTot = Math.Round((double)Royalty_QA_Dt.Compute("Sum(Net_qty_Kpcs)", "CP = '" + CP + "'"), 3);
        //    //    if (QtyTot != 0) { ASPLclTot = RevLclTot / QtyTot; } else { ASPLclTot = 0; }


        //    //    // RateOnRev
        //    //    // -----------------------------------
        //    //    RateOnRev1 = Rate1;
        //    //    RateOnRev2 = Rate2;
        //    //    RateOnRev3 = Rate3;
        //    //    RateOnRev4 = Rate4;
        //    //    RateOnRev5 = Rate5;
        //    //    RateOnRev6 = Rate6;
        //    //    RateOnRevOver = RateOver;

        //    //    // RateOnPcs
        //    //    // -----------------------------------
        //    //    RateOnPcs1 = ASPLclTot * RateOnRev1;
        //    //    RateOnPcs2 = ASPLclTot * RateOnRev2;
        //    //    RateOnPcs3 = ASPLclTot * RateOnRev3;
        //    //    RateOnPcs4 = ASPLclTot * RateOnRev4;
        //    //    RateOnPcs5 = ASPLclTot * RateOnRev5;
        //    //    RateOnPcs6 = ASPLclTot * RateOnRev6;
        //    //    RateOnPcsOver = ASPLclTot * RateOnRevOver;


        //    //    // Check Min/Max
        //    //    // -----------------------------------
        //    //    if (RateOnPcs1 < Min1) { RateOnPcs1 = Min1; } else if (RateOnPcs1 > Max1) { RateOnPcs1 = Max1; }
        //    //    if (RateOnPcs2 < Min2) { RateOnPcs2 = Min2; } else if (RateOnPcs2 > Max2) { RateOnPcs2 = Max2; }
        //    //    if (RateOnPcs3 < Min3) { RateOnPcs3 = Min3; } else if (RateOnPcs3 > Max3) { RateOnPcs3 = Max3; }
        //    //    if (RateOnPcs4 < Min4) { RateOnPcs4 = Min4; } else if (RateOnPcs4 > Max4) { RateOnPcs4 = Max4; }
        //    //    if (RateOnPcs5 < Min5) { RateOnPcs5 = Min5; } else if (RateOnPcs5 > Max5) { RateOnPcs5 = Max5; }
        //    //    if (RateOnPcs6 < Min6) { RateOnPcs6 = Min6; } else if (RateOnPcs6 > Max6) { RateOnPcs6 = Max6; }
        //    //    if (RateOnPcsOver < MinOver) { RateOnPcsOver = MinOver; } else if (RateOnPcsOver > MaxOver) { RateOnPcsOver = MaxOver; }


        //    //    // Roy finale
        //    //    // -----------------------------------
        //    //    // Roy1
        //    //    RoyLcl1 = RateOnPcs1 * Qty1;
        //    //    RoyLcl2 = RateOnPcs2 * Qty2;
        //    //    RoyLcl3 = RateOnPcs3 * Qty3;
        //    //    RoyLcl4 = RateOnPcs4 * Qty4;
        //    //    RoyLcl5 = RateOnPcs5 * Qty5;
        //    //    RoyLcl6 = RateOnPcs6 * Qty6;
        //    //    RoyLclOver = RateOnPcsOver * QtyOver;


        //    //    RoyLcl = RoyLcl1 + RoyLcl2 + RoyLcl3 + RoyLcl4 + RoyLcl5 + RoyLcl6 + RoyLclOver;
        //    //    RoyLclH = RoyLclL + RoyLcl;
        //    //    RoyUSD = RoyLcl * ExchangeRate;
        //    //    RoyUSDH = RoyUSDL + RoyUSD;


        //    //    // Roy Paid
        //    //    // -----------------------------------
        //    //    if (RoyLcl >= 0)
        //    //    {
        //    //        if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH < Min_Cum_Royalty_KLcl) { RoyPaidLcl = 0; }
        //    //        else if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLclH - Min_Cum_Royalty_KLcl; }
        //    //        else if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = Max_Cum_Royalty_KLcl - Min_Cum_Royalty_KLcl; }
        //    //        else if (RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl && RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLcl; }
        //    //        else if (RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl && RoyLclH >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = Max_Cum_Royalty_KLcl - RoyLclL; }
        //    //        else { RoyPaidLcl = 0; }
        //    //    }
        //    //    else
        //    //    {
        //    //        if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL < Min_Cum_Royalty_KLcl) { RoyPaidLcl = 0; }
        //    //        else if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(RoyLclL - Min_Cum_Royalty_KLcl); }
        //    //        else if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(Max_Cum_Royalty_KLcl - Min_Cum_Royalty_KLcl); }
        //    //        else if (RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl && RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLcl; }
        //    //        else if (RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl && RoyLclL >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(Max_Cum_Royalty_KLcl - RoyLclL); }
        //    //        else { RoyPaidLcl = 0; }
        //    //    }
        //    //    RoyPaidLclH = RoyPaidLclL + RoyPaidLcl;
        //    //    RoyPaidUSD = RoyPaidLcl * ExchangeRate;
        //    //    RoyPaidUSDH = RoyPaidUSDL + RoyPaidUSD;


        //    //    // Rate
        //    //    // -----------------------------------
        //    //    if (Qty != 0) { Rate_Lcl_per_pcs = RoyLcl / Qty; } else { Rate_Lcl_per_pcs = 0; }
        //    //    if (Qty != 0) { Rate_USD_per_pcs = RoyUSD / Qty; } else { Rate_USD_per_pcs = 0; }
        //    //    if (RevLcl != 0) { Rate_Rev_percent = RoyLcl / RevLcl; } else { Rate_Rev_percent = 0; }

        //    //    // Salva i dati i RoyaltyQ
        //    //    // -----------------------------------
        //    //    Royalty_QA_Dt.Rows[RowI]["Condition"] = Condition;
        //    //    Royalty_QA_Dt.Rows[RowI]["Royalty_KLcl"] = Math.Round(RoyLcl, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_Royalty_KLcl"] = Math.Round(RoyLclH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Royalty_KUSD"] = Math.Round(RoyUSD, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_Royalty_KUSD"] = Math.Round(RoyUSDH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["RoyaltyPaid_KLcl"] = Math.Round(RoyPaidLcl, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_RoyaltyPaid_KLcl"] = Math.Round(RoyPaidLclH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["RoyaltyPaid_KUSD"] = Math.Round(RoyPaidUSD, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_RoyaltyPaid_KUSD"] = Math.Round(RoyPaidUSDH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_Lcl_per_pcs"] = Rate_Lcl_per_pcs;
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_USD_per_pcs"] = Rate_USD_per_pcs;
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_Rev_percent"] = Rate_Rev_percent;

        //    //}


        //}





        //public void M10_SLOTrev_RATErev_MINMAXcpcust(ref DataTable RuleOne_Dt, ref DataTable Royalty_OneRule_OneQuarter_Dt)
        //{
        //    // ****************************************************
        //    // MODELLO 03
        //    // SLOT: su quantity
        //    // RATE: su Revenue
        //    // MIN/MAX RATE: su ASP by CP-CUSTOMER
        //    //
        //    // ESEMPIO:
        //    //


        //    // Variabili interne
        //    // -----------------------------------
        //    string AGREEMENT_ID = "";
        //    string AGREEMENT = "";
        //    string VERSION_DATE = "";
        //    string VERSION_DESCR = "";
        //    string MODEL_ACTIVE = "";
        //    string MODEL_INITIAL_MONTH = "";
        //    string MODEL_FINAL_MONTH = "";
        //    string MODEL_TYPE = "";
        //    string MODEL_CURRENCY = "";
        //    double MODEL_NB_SLOT = 0;
        //    double MODEL_MIN_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MIN_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MIN_EACH_QUARTER_ROYALTY = 0;
        //    double MODEL_MAX_ACCUMULATED_ROYALTY = 0;
        //    double MODEL_MAX_EACH_YEAR_ROYALTY = 0;
        //    double MODEL_MAX_EACH_QUARTER_ROYALTY = 0;
        //    string SELECTION_PL_LIST = "";
        //    string SELECTION_CP_LIST = "";
        //    string SELECTION_CP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = "";
        //    string SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = "";
        //    string SLOT01_MESSAGE = "";
        //    double SLOT01_START = 0;
        //    double SLOT01_END = 0;
        //    double SLOT01_RATE = 0;
        //    double SLOT01_MIN = 0;
        //    double SLOT01_MAX = 0;
        //    string SLOT01_A = "";
        //    string SLOT01_B = "";
        //    string SLOT01_C = "";
        //    string SLOT01_D = "";
        //    string SLOT01_E = "";
        //    string SLOT01_F = "";
        //    string SLOT01_G = "";
        //    string SLOT01_H = "";
        //    string SLOT02_MESSAGE = "";
        //    double SLOT02_START = 0;
        //    double SLOT02_END = 0;
        //    double SLOT02_RATE = 0;
        //    double SLOT02_MIN = 0;
        //    double SLOT02_MAX = 0;
        //    string SLOT02_A = "";
        //    string SLOT02_B = "";
        //    string SLOT02_C = "";
        //    string SLOT02_D = "";
        //    string SLOT02_E = "";
        //    string SLOT02_F = "";
        //    string SLOT02_G = "";
        //    string SLOT02_H = "";
        //    string SLOT03_MESSAGE = "";
        //    double SLOT03_START = 0;
        //    double SLOT03_END = 0;
        //    double SLOT03_RATE = 0;
        //    double SLOT03_MIN = 0;
        //    double SLOT03_MAX = 0;
        //    string SLOT03_A = "";
        //    string SLOT03_B = "";
        //    string SLOT03_C = "";
        //    string SLOT03_D = "";
        //    string SLOT03_E = "";
        //    string SLOT03_F = "";
        //    string SLOT03_G = "";
        //    string SLOT03_H = "";
        //    string SLOT04_MESSAGE = "";
        //    double SLOT04_START = 0;
        //    double SLOT04_END = 0;
        //    double SLOT04_RATE = 0;
        //    double SLOT04_MIN = 0;
        //    double SLOT04_MAX = 0;
        //    string SLOT04_A = "";
        //    string SLOT04_B = "";
        //    string SLOT04_C = "";
        //    string SLOT04_D = "";
        //    string SLOT04_E = "";
        //    string SLOT04_F = "";
        //    string SLOT04_G = "";
        //    string SLOT04_H = "";
        //    string SLOT05_MESSAGE = "";
        //    double SLOT05_START = 0;
        //    double SLOT05_END = 0;
        //    double SLOT05_RATE = 0;
        //    double SLOT05_MIN = 0;
        //    double SLOT05_MAX = 0;
        //    string SLOT05_A = "";
        //    string SLOT05_B = "";
        //    string SLOT05_C = "";
        //    string SLOT05_D = "";
        //    string SLOT05_E = "";
        //    string SLOT05_F = "";
        //    string SLOT05_G = "";
        //    string SLOT05_H = "";
        //    string SLOT06_MESSAGE = "";
        //    double SLOT06_START = 0;
        //    double SLOT06_END = 0;
        //    double SLOT06_RATE = 0;
        //    double SLOT06_MIN = 0;
        //    double SLOT06_MAX = 0;
        //    string SLOT06_A = "";
        //    string SLOT06_B = "";
        //    string SLOT06_C = "";
        //    string SLOT06_D = "";
        //    string SLOT06_E = "";
        //    string SLOT06_F = "";
        //    string SLOT06_G = "";
        //    string SLOT06_H = "";
        //    string SLOT07_MESSAGE = "";
        //    double SLOT07_START = 0;
        //    double SLOT07_END = 0;
        //    double SLOT07_RATE = 0;
        //    double SLOT07_MIN = 0;
        //    double SLOT07_MAX = 0;
        //    string SLOT07_A = "";
        //    string SLOT07_B = "";
        //    string SLOT07_C = "";
        //    string SLOT07_D = "";
        //    string SLOT07_E = "";
        //    string SLOT07_F = "";
        //    string SLOT07_G = "";
        //    string SLOT07_H = "";
        //    string SLOT08_MESSAGE = "";
        //    double SLOT08_START = 0;
        //    double SLOT08_END = 0;
        //    double SLOT08_RATE = 0;
        //    double SLOT08_MIN = 0;
        //    double SLOT08_MAX = 0;
        //    string SLOT08_A = "";
        //    string SLOT08_B = "";
        //    string SLOT08_C = "";
        //    string SLOT08_D = "";
        //    string SLOT08_E = "";
        //    string SLOT08_F = "";
        //    string SLOT08_G = "";
        //    string SLOT08_H = "";
        //    string SLOT09_MESSAGE = "";
        //    double SLOT09_START = 0;
        //    double SLOT09_END = 0;
        //    double SLOT09_RATE = 0;
        //    double SLOT09_MIN = 0;
        //    double SLOT09_MAX = 0;
        //    string SLOT09_A = "";
        //    string SLOT09_B = "";
        //    string SLOT09_C = "";
        //    string SLOT09_D = "";
        //    string SLOT09_E = "";
        //    string SLOT09_F = "";
        //    string SLOT09_G = "";
        //    string SLOT09_H = "";
        //    string SLOT10_MESSAGE = "";
        //    double SLOT10_START = 0;
        //    double SLOT10_END = 0;
        //    double SLOT10_RATE = 0;
        //    double SLOT10_MIN = 0;
        //    double SLOT10_MAX = 0;
        //    string SLOT10_A = "";
        //    string SLOT10_B = "";
        //    string SLOT10_C = "";
        //    string SLOT10_D = "";
        //    string SLOT10_E = "";
        //    string SLOT10_F = "";
        //    string SLOT10_G = "";
        //    string SLOT10_H = "";

        //    double NET_QTY_PCS = 0;
        //    double CUM_NET_QTY_PCS = 0;
        //    double NET_REVENUE_LCL = 0;
        //    double CUM_NET_REVENUE_LCL = 0;
        //    double NET_QTY_TOT_PCS = 0;
        //    double NET_REVENUE_TOT_LCL = 0;
        //    double ASPLcl_TOT = 0;

        //    double Qty = 0;
        //    double Qty_Start = 0;
        //    double Qty_End = 0;
        //    double Qty_01 = 0;
        //    double Qty_02 = 0;
        //    double Qty_03 = 0;
        //    double Qty_04 = 0;
        //    double Qty_05 = 0;
        //    double Qty_06 = 0;
        //    double Qty_07 = 0;
        //    double Qty_08 = 0;
        //    double Qty_09 = 0;
        //    double Qty_10 = 0;

        //    double RevLcl = 0;
        //    double RevLcl_Start = 0;
        //    double RevLcl_End = 0;
        //    double RevLcl_01 = 0;
        //    double RevLcl_02 = 0;
        //    double RevLcl_03 = 0;
        //    double RevLcl_04 = 0;
        //    double RevLcl_05 = 0;
        //    double RevLcl_06 = 0;
        //    double RevLcl_07 = 0;
        //    double RevLcl_08 = 0;
        //    double RevLcl_09 = 0;
        //    double RevLcl_10 = 0;

        //    string Slot_Start = "";
        //    string Slot_End = "";

        //    string Condition_Start = "";
        //    string Condition_End = "";
        //    string Condition = "";


        //    // Estrae i dati della Rule
        //    // -----------------------------------
        //    AGREEMENT_ID = (string)RuleOne_Dt.Rows[0]["AGREEMENT_ID"];
        //    AGREEMENT = (string)RuleOne_Dt.Rows[0]["AGREEMENT"];
        //    VERSION_DATE = (string)RuleOne_Dt.Rows[0]["VERSION_DATE"];
        //    VERSION_DESCR = (string)RuleOne_Dt.Rows[0]["VERSION_DESCR"];
        //    MODEL_ACTIVE = (string)RuleOne_Dt.Rows[0]["MODEL_ACTIVE"];
        //    MODEL_INITIAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_INITIAL_MONTH"];
        //    MODEL_FINAL_MONTH = (string)RuleOne_Dt.Rows[0]["MODEL_FINAL_MONTH"];
        //    MODEL_TYPE = (string)RuleOne_Dt.Rows[0]["MODEL_TYPE"];
        //    MODEL_CURRENCY = (string)RuleOne_Dt.Rows[0]["MODEL_CURRENCY"];
        //    MODEL_NB_SLOT = (double)RuleOne_Dt.Rows[0]["MODEL_NB_SLOT"];
        //    MODEL_MIN_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_ACCUMULATED_ROYALTY"];
        //    MODEL_MIN_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_YEAR_ROYALTY"];
        //    MODEL_MIN_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MIN_EACH_QUARTER_ROYALTY"];
        //    MODEL_MAX_ACCUMULATED_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_ACCUMULATED_ROYALTY"];
        //    MODEL_MAX_EACH_YEAR_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_YEAR_ROYALTY"];
        //    MODEL_MAX_EACH_QUARTER_ROYALTY = (double)RuleOne_Dt.Rows[0]["MODEL_MAX_EACH_QUARTER_ROYALTY"];
        //    SELECTION_PL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_PL_LIST"];
        //    SELECTION_CP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_LIST"];
        //    SELECTION_CP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_LIST"];
        //    SELECTION_CUSTOMER_FINAL_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_LIST"];
        //    SELECTION_CUSTOMER_FINAL_TYPE_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_TYPE_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_LIST"];
        //    SELECTION_CUSTOMER_FINAL_GROUP_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_GROUP_CONDITION"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_LIST = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_LIST"];
        //    SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION = (string)RuleOne_Dt.Rows[0]["SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION"];
        //    SLOT01_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT01_MESSAGE"];
        //    SLOT01_START = (double)RuleOne_Dt.Rows[0]["SLOT01_START"];
        //    SLOT01_END = (double)RuleOne_Dt.Rows[0]["SLOT01_END"];
        //    SLOT01_RATE = (double)RuleOne_Dt.Rows[0]["SLOT01_RATE"];
        //    SLOT01_MIN = (double)RuleOne_Dt.Rows[0]["SLOT01_MIN"];
        //    SLOT01_MAX = (double)RuleOne_Dt.Rows[0]["SLOT01_MAX"];
        //    SLOT01_A = (string)RuleOne_Dt.Rows[0]["SLOT01_A"];
        //    SLOT01_B = (string)RuleOne_Dt.Rows[0]["SLOT01_B"];
        //    SLOT01_C = (string)RuleOne_Dt.Rows[0]["SLOT01_C"];
        //    SLOT01_D = (string)RuleOne_Dt.Rows[0]["SLOT01_D"];
        //    SLOT01_E = (string)RuleOne_Dt.Rows[0]["SLOT01_E"];
        //    SLOT01_F = (string)RuleOne_Dt.Rows[0]["SLOT01_F"];
        //    SLOT01_G = (string)RuleOne_Dt.Rows[0]["SLOT01_G"];
        //    SLOT01_H = (string)RuleOne_Dt.Rows[0]["SLOT01_H"];
        //    SLOT02_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT02_MESSAGE"];
        //    SLOT02_START = (double)RuleOne_Dt.Rows[0]["SLOT02_START"];
        //    SLOT02_END = (double)RuleOne_Dt.Rows[0]["SLOT02_END"];
        //    SLOT02_RATE = (double)RuleOne_Dt.Rows[0]["SLOT02_RATE"];
        //    SLOT02_MIN = (double)RuleOne_Dt.Rows[0]["SLOT02_MIN"];
        //    SLOT02_MAX = (double)RuleOne_Dt.Rows[0]["SLOT02_MAX"];
        //    SLOT02_A = (string)RuleOne_Dt.Rows[0]["SLOT02_A"];
        //    SLOT02_B = (string)RuleOne_Dt.Rows[0]["SLOT02_B"];
        //    SLOT02_C = (string)RuleOne_Dt.Rows[0]["SLOT02_C"];
        //    SLOT02_D = (string)RuleOne_Dt.Rows[0]["SLOT02_D"];
        //    SLOT02_E = (string)RuleOne_Dt.Rows[0]["SLOT02_E"];
        //    SLOT02_F = (string)RuleOne_Dt.Rows[0]["SLOT02_F"];
        //    SLOT02_G = (string)RuleOne_Dt.Rows[0]["SLOT02_G"];
        //    SLOT02_H = (string)RuleOne_Dt.Rows[0]["SLOT02_H"];
        //    SLOT03_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT03_MESSAGE"];
        //    SLOT03_START = (double)RuleOne_Dt.Rows[0]["SLOT03_START"];
        //    SLOT03_END = (double)RuleOne_Dt.Rows[0]["SLOT03_END"];
        //    SLOT03_RATE = (double)RuleOne_Dt.Rows[0]["SLOT03_RATE"];
        //    SLOT03_MIN = (double)RuleOne_Dt.Rows[0]["SLOT03_MIN"];
        //    SLOT03_MAX = (double)RuleOne_Dt.Rows[0]["SLOT03_MAX"];
        //    SLOT03_A = (string)RuleOne_Dt.Rows[0]["SLOT03_A"];
        //    SLOT03_B = (string)RuleOne_Dt.Rows[0]["SLOT03_B"];
        //    SLOT03_C = (string)RuleOne_Dt.Rows[0]["SLOT03_C"];
        //    SLOT03_D = (string)RuleOne_Dt.Rows[0]["SLOT03_D"];
        //    SLOT03_E = (string)RuleOne_Dt.Rows[0]["SLOT03_E"];
        //    SLOT03_F = (string)RuleOne_Dt.Rows[0]["SLOT03_F"];
        //    SLOT03_G = (string)RuleOne_Dt.Rows[0]["SLOT03_G"];
        //    SLOT03_H = (string)RuleOne_Dt.Rows[0]["SLOT03_H"];
        //    SLOT04_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT04_MESSAGE"];
        //    SLOT04_START = (double)RuleOne_Dt.Rows[0]["SLOT04_START"];
        //    SLOT04_END = (double)RuleOne_Dt.Rows[0]["SLOT04_END"];
        //    SLOT04_RATE = (double)RuleOne_Dt.Rows[0]["SLOT04_RATE"];
        //    SLOT04_MIN = (double)RuleOne_Dt.Rows[0]["SLOT04_MIN"];
        //    SLOT04_MAX = (double)RuleOne_Dt.Rows[0]["SLOT04_MAX"];
        //    SLOT04_A = (string)RuleOne_Dt.Rows[0]["SLOT04_A"];
        //    SLOT04_B = (string)RuleOne_Dt.Rows[0]["SLOT04_B"];
        //    SLOT04_C = (string)RuleOne_Dt.Rows[0]["SLOT04_C"];
        //    SLOT04_D = (string)RuleOne_Dt.Rows[0]["SLOT04_D"];
        //    SLOT04_E = (string)RuleOne_Dt.Rows[0]["SLOT04_E"];
        //    SLOT04_F = (string)RuleOne_Dt.Rows[0]["SLOT04_F"];
        //    SLOT04_G = (string)RuleOne_Dt.Rows[0]["SLOT04_G"];
        //    SLOT04_H = (string)RuleOne_Dt.Rows[0]["SLOT04_H"];
        //    SLOT05_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT05_MESSAGE"];
        //    SLOT05_START = (double)RuleOne_Dt.Rows[0]["SLOT05_START"];
        //    SLOT05_END = (double)RuleOne_Dt.Rows[0]["SLOT05_END"];
        //    SLOT05_RATE = (double)RuleOne_Dt.Rows[0]["SLOT05_RATE"];
        //    SLOT05_MIN = (double)RuleOne_Dt.Rows[0]["SLOT05_MIN"];
        //    SLOT05_MAX = (double)RuleOne_Dt.Rows[0]["SLOT05_MAX"];
        //    SLOT05_A = (string)RuleOne_Dt.Rows[0]["SLOT05_A"];
        //    SLOT05_B = (string)RuleOne_Dt.Rows[0]["SLOT05_B"];
        //    SLOT05_C = (string)RuleOne_Dt.Rows[0]["SLOT05_C"];
        //    SLOT05_D = (string)RuleOne_Dt.Rows[0]["SLOT05_D"];
        //    SLOT05_E = (string)RuleOne_Dt.Rows[0]["SLOT05_E"];
        //    SLOT05_F = (string)RuleOne_Dt.Rows[0]["SLOT05_F"];
        //    SLOT05_G = (string)RuleOne_Dt.Rows[0]["SLOT05_G"];
        //    SLOT05_H = (string)RuleOne_Dt.Rows[0]["SLOT05_H"];
        //    SLOT06_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT06_MESSAGE"];
        //    SLOT06_START = (double)RuleOne_Dt.Rows[0]["SLOT06_START"];
        //    SLOT06_END = (double)RuleOne_Dt.Rows[0]["SLOT06_END"];
        //    SLOT06_RATE = (double)RuleOne_Dt.Rows[0]["SLOT06_RATE"];
        //    SLOT06_MIN = (double)RuleOne_Dt.Rows[0]["SLOT06_MIN"];
        //    SLOT06_MAX = (double)RuleOne_Dt.Rows[0]["SLOT06_MAX"];
        //    SLOT06_A = (string)RuleOne_Dt.Rows[0]["SLOT06_A"];
        //    SLOT06_B = (string)RuleOne_Dt.Rows[0]["SLOT06_B"];
        //    SLOT06_C = (string)RuleOne_Dt.Rows[0]["SLOT06_C"];
        //    SLOT06_D = (string)RuleOne_Dt.Rows[0]["SLOT06_D"];
        //    SLOT06_E = (string)RuleOne_Dt.Rows[0]["SLOT06_E"];
        //    SLOT06_F = (string)RuleOne_Dt.Rows[0]["SLOT06_F"];
        //    SLOT06_G = (string)RuleOne_Dt.Rows[0]["SLOT06_G"];
        //    SLOT06_H = (string)RuleOne_Dt.Rows[0]["SLOT06_H"];
        //    SLOT07_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT07_MESSAGE"];
        //    SLOT07_START = (double)RuleOne_Dt.Rows[0]["SLOT07_START"];
        //    SLOT07_END = (double)RuleOne_Dt.Rows[0]["SLOT07_END"];
        //    SLOT07_RATE = (double)RuleOne_Dt.Rows[0]["SLOT07_RATE"];
        //    SLOT07_MIN = (double)RuleOne_Dt.Rows[0]["SLOT07_MIN"];
        //    SLOT07_MAX = (double)RuleOne_Dt.Rows[0]["SLOT07_MAX"];
        //    SLOT07_A = (string)RuleOne_Dt.Rows[0]["SLOT07_A"];
        //    SLOT07_B = (string)RuleOne_Dt.Rows[0]["SLOT07_B"];
        //    SLOT07_C = (string)RuleOne_Dt.Rows[0]["SLOT07_C"];
        //    SLOT07_D = (string)RuleOne_Dt.Rows[0]["SLOT07_D"];
        //    SLOT07_E = (string)RuleOne_Dt.Rows[0]["SLOT07_E"];
        //    SLOT07_F = (string)RuleOne_Dt.Rows[0]["SLOT07_F"];
        //    SLOT07_G = (string)RuleOne_Dt.Rows[0]["SLOT07_G"];
        //    SLOT07_H = (string)RuleOne_Dt.Rows[0]["SLOT07_H"];
        //    SLOT08_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT08_MESSAGE"];
        //    SLOT08_START = (double)RuleOne_Dt.Rows[0]["SLOT08_START"];
        //    SLOT08_END = (double)RuleOne_Dt.Rows[0]["SLOT08_END"];
        //    SLOT08_RATE = (double)RuleOne_Dt.Rows[0]["SLOT08_RATE"];
        //    SLOT08_MIN = (double)RuleOne_Dt.Rows[0]["SLOT08_MIN"];
        //    SLOT08_MAX = (double)RuleOne_Dt.Rows[0]["SLOT08_MAX"];
        //    SLOT08_A = (string)RuleOne_Dt.Rows[0]["SLOT08_A"];
        //    SLOT08_B = (string)RuleOne_Dt.Rows[0]["SLOT08_B"];
        //    SLOT08_C = (string)RuleOne_Dt.Rows[0]["SLOT08_C"];
        //    SLOT08_D = (string)RuleOne_Dt.Rows[0]["SLOT08_D"];
        //    SLOT08_E = (string)RuleOne_Dt.Rows[0]["SLOT08_E"];
        //    SLOT08_F = (string)RuleOne_Dt.Rows[0]["SLOT08_F"];
        //    SLOT08_G = (string)RuleOne_Dt.Rows[0]["SLOT08_G"];
        //    SLOT08_H = (string)RuleOne_Dt.Rows[0]["SLOT08_H"];
        //    SLOT09_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT09_MESSAGE"];
        //    SLOT09_START = (double)RuleOne_Dt.Rows[0]["SLOT09_START"];
        //    SLOT09_END = (double)RuleOne_Dt.Rows[0]["SLOT09_END"];
        //    SLOT09_RATE = (double)RuleOne_Dt.Rows[0]["SLOT09_RATE"];
        //    SLOT09_MIN = (double)RuleOne_Dt.Rows[0]["SLOT09_MIN"];
        //    SLOT09_MAX = (double)RuleOne_Dt.Rows[0]["SLOT09_MAX"];
        //    SLOT09_A = (string)RuleOne_Dt.Rows[0]["SLOT09_A"];
        //    SLOT09_B = (string)RuleOne_Dt.Rows[0]["SLOT09_B"];
        //    SLOT09_C = (string)RuleOne_Dt.Rows[0]["SLOT09_C"];
        //    SLOT09_D = (string)RuleOne_Dt.Rows[0]["SLOT09_D"];
        //    SLOT09_E = (string)RuleOne_Dt.Rows[0]["SLOT09_E"];
        //    SLOT09_F = (string)RuleOne_Dt.Rows[0]["SLOT09_F"];
        //    SLOT09_G = (string)RuleOne_Dt.Rows[0]["SLOT09_G"];
        //    SLOT09_H = (string)RuleOne_Dt.Rows[0]["SLOT09_H"];
        //    SLOT10_MESSAGE = (string)RuleOne_Dt.Rows[0]["SLOT10_MESSAGE"];
        //    SLOT10_START = (double)RuleOne_Dt.Rows[0]["SLOT10_START"];
        //    SLOT10_END = (double)RuleOne_Dt.Rows[0]["SLOT10_END"];
        //    SLOT10_RATE = (double)RuleOne_Dt.Rows[0]["SLOT10_RATE"];
        //    SLOT10_MIN = (double)RuleOne_Dt.Rows[0]["SLOT10_MIN"];
        //    SLOT10_MAX = (double)RuleOne_Dt.Rows[0]["SLOT10_MAX"];
        //    SLOT10_A = (string)RuleOne_Dt.Rows[0]["SLOT10_A"];
        //    SLOT10_B = (string)RuleOne_Dt.Rows[0]["SLOT10_B"];
        //    SLOT10_C = (string)RuleOne_Dt.Rows[0]["SLOT10_C"];
        //    SLOT10_D = (string)RuleOne_Dt.Rows[0]["SLOT10_D"];
        //    SLOT10_E = (string)RuleOne_Dt.Rows[0]["SLOT10_E"];
        //    SLOT10_F = (string)RuleOne_Dt.Rows[0]["SLOT10_F"];
        //    SLOT10_G = (string)RuleOne_Dt.Rows[0]["SLOT10_G"];
        //    SLOT10_H = (string)RuleOne_Dt.Rows[0]["SLOT10_H"];




        //    // Loop
        //    // -----------------------------------
        //    for (int i = 0; i < Royalty_OneRule_OneQuarter_Dt.Rows.Count; i++)
        //    {

        //        // Dati iniziali
        //        NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_QTY_PCS"]), 0);
        //        CUM_NET_QTY_PCS = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_QTY_PCS"]), 0);
        //        NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_REVENUE_LCL"]), 2);
        //        CUM_NET_REVENUE_LCL = Math.Round(Convert.ToDouble(Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_REVENUE_LCL"]), 2);
        //        NET_QTY_TOT_PCS = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_QTY_PCS)", ""), 0);
        //        NET_REVENUE_TOT_LCL = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Compute("SUM(NET_REVENUE_LCL)", ""), 2);

        //        Qty = NET_QTY_PCS;
        //        Qty_End = CUM_NET_QTY_PCS;
        //        Qty_Start = Qty_End - Qty;

        //        RevLcl = NET_REVENUE_LCL;
        //        RevLcl_End = CUM_NET_REVENUE_LCL;
        //        RevLcl_Start = RevLcl_End - RevLcl;

        //        if (NET_QTY_TOT_PCS != 0)
        //        {
        //            ASPLcl_TOT = NET_REVENUE_TOT_LCL / NET_QTY_TOT_PCS;
        //        }
        //        else
        //        {
        //            ASPLcl_TOT = 0;
        //        }


        //        // Condition
        //        Condition_By_Rev(
        //            in RevLcl_Start,
        //            in RevLcl_End,
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT01_MESSAGE,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT02_MESSAGE,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT03_MESSAGE,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT04_MESSAGE,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT05_MESSAGE,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT06_MESSAGE,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT07_MESSAGE,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT08_MESSAGE,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT09_MESSAGE,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in SLOT10_MESSAGE,
        //            ref Condition_Start,
        //            ref Condition_End,
        //            ref Condition
        //            );


        //        // Quantity, Revenue
        //        Quantity_And_Revenue_By_Rev(
        //            in SLOT01_START,
        //            in SLOT01_END,
        //            in SLOT02_START,
        //            in SLOT02_END,
        //            in SLOT03_START,
        //            in SLOT03_END,
        //            in SLOT04_START,
        //            in SLOT04_END,
        //            in SLOT05_START,
        //            in SLOT05_END,
        //            in SLOT06_START,
        //            in SLOT06_END,
        //            in SLOT07_START,
        //            in SLOT07_END,
        //            in SLOT08_START,
        //            in SLOT08_END,
        //            in SLOT09_START,
        //            in SLOT09_END,
        //            in SLOT10_START,
        //            in SLOT10_END,
        //            in Qty,
        //            in Qty_Start,
        //            in Qty_End,
        //            ref Qty_01,
        //            ref Qty_02,
        //            ref Qty_03,
        //            ref Qty_04,
        //            ref Qty_05,
        //            ref Qty_06,
        //            ref Qty_07,
        //            ref Qty_08,
        //            ref Qty_09,
        //            ref Qty_10,
        //            ref RevLcl,
        //            ref RevLcl_End,
        //            ref RevLcl_Start,
        //            ref RevLcl_01,
        //            ref RevLcl_02,
        //            ref RevLcl_03,
        //            ref RevLcl_04,
        //            ref RevLcl_05,
        //            ref RevLcl_06,
        //            ref RevLcl_07,
        //            ref RevLcl_08,
        //            ref RevLcl_09,
        //            ref RevLcl_10);



        //    }







        //    //// Variabili interne
        //    //// -----------------------------------
        //    //double Id_Agreement = 0;
        //    //string Agreement = "";
        //    //string Model = "";
        //    //double Slot = 0;
        //    //string Agreement_Date_Start = "";
        //    //string Agreement_Date_End = "";
        //    //string PL_String = "";
        //    //string PL_Cond = "";
        //    //string CP_String = "";
        //    //string CP_Cond = "";
        //    //string Customer_String = "";
        //    //string Customer_Cond = "";
        //    //string Condition1 = "";
        //    //double Limit1 = 0;
        //    //double Rate1 = 0;
        //    //double Min1 = 0;
        //    //double Max1 = 0;
        //    //double Extra1A = 0;
        //    //double Extra1B = 0;
        //    //double Extra1C = 0;
        //    //double Extra1D = 0;
        //    //double Extra1E = 0;
        //    //double Extra1F = 0;
        //    //string Condition2 = "";
        //    //double Limit2 = 0;
        //    //double Rate2 = 0;
        //    //double Min2 = 0;
        //    //double Max2 = 0;
        //    //double Extra2A = 0;
        //    //double Extra2B = 0;
        //    //double Extra2C = 0;
        //    //double Extra2D = 0;
        //    //double Extra2E = 0;
        //    //double Extra2F = 0;
        //    //string Condition3 = "";
        //    //double Limit3 = 0;
        //    //double Rate3 = 0;
        //    //double Min3 = 0;
        //    //double Max3 = 0;
        //    //double Extra3A = 0;
        //    //double Extra3B = 0;
        //    //double Extra3C = 0;
        //    //double Extra3D = 0;
        //    //double Extra3E = 0;
        //    //double Extra3F = 0;
        //    //string Condition4 = "";
        //    //double Limit4 = 0;
        //    //double Rate4 = 0;
        //    //double Min4 = 0;
        //    //double Max4 = 0;
        //    //double Extra4A = 0;
        //    //double Extra4B = 0;
        //    //double Extra4C = 0;
        //    //double Extra4D = 0;
        //    //double Extra4E = 0;
        //    //double Extra4F = 0;
        //    //string Condition5 = "";
        //    //double Limit5 = 0;
        //    //double Rate5 = 0;
        //    //double Min5 = 0;
        //    //double Max5 = 0;
        //    //double Extra5A = 0;
        //    //double Extra5B = 0;
        //    //double Extra5C = 0;
        //    //double Extra5D = 0;
        //    //double Extra5E = 0;
        //    //double Extra5F = 0;
        //    //string Condition6 = "";
        //    //double Limit6 = 0;
        //    //double Rate6 = 0;
        //    //double Min6 = 0;
        //    //double Max6 = 0;
        //    //double Extra6A = 0;
        //    //double Extra6B = 0;
        //    //double Extra6C = 0;
        //    //double Extra6D = 0;
        //    //double Extra6E = 0;
        //    //double Extra6F = 0;
        //    //double RateOver = 0;
        //    //double MinOver = 0;
        //    //double MaxOver = 0;
        //    //double ExtraOverA = 0;
        //    //double ExtraOverB = 0;
        //    //double ExtraOverC = 0;
        //    //double ExtraOverD = 0;
        //    //double ExtraOverE = 0;
        //    //double ExtraOverF = 0;
        //    //string LclCurrency = "";
        //    //double Min_Cum_Royalty_KLcl = 0;
        //    //double Max_Cum_Royalty_KLcl = 0;

        //    //double QtyL = 0;
        //    //double QtyH = 0;
        //    //double Qty = 0;
        //    //double Qty1 = 0;
        //    //double Qty2 = 0;
        //    //double Qty3 = 0;
        //    //double Qty4 = 0;
        //    //double Qty5 = 0;
        //    //double Qty6 = 0;
        //    //double QtyOver = 0;

        //    //string ConditionL = "";
        //    //string ConditionH = "";
        //    //string Condition = "";

        //    //double RevLclL = 0;
        //    //double RevLclH = 0;
        //    //double RevLcl = 0;
        //    //double RevLcl1 = 0;
        //    //double RevLcl2 = 0;
        //    //double RevLcl3 = 0;
        //    //double RevLcl4 = 0;
        //    //double RevLcl5 = 0;
        //    //double RevLcl6 = 0;
        //    //double RevLclOver = 0;

        //    //double RateOnPcs1 = 0;
        //    //double RateOnPcs2 = 0;
        //    //double RateOnPcs3 = 0;
        //    //double RateOnPcs4 = 0;
        //    //double RateOnPcs5 = 0;
        //    //double RateOnPcs6 = 0;
        //    //double RateOnPcsOver = 0;

        //    //double RateOnRev1 = 0;
        //    //double RateOnRev2 = 0;
        //    //double RateOnRev3 = 0;
        //    //double RateOnRev4 = 0;
        //    //double RateOnRev5 = 0;
        //    //double RateOnRev6 = 0;
        //    //double RateOnRevOver = 0;

        //    //double RoyLclL = 0;
        //    //double RoyLclH = 0;
        //    //double RoyLcl = 0;
        //    //double RoyLcl1 = 0;
        //    //double RoyLcl2 = 0;
        //    //double RoyLcl3 = 0;
        //    //double RoyLcl4 = 0;
        //    //double RoyLcl5 = 0;
        //    //double RoyLcl6 = 0;
        //    //double RoyLclOver = 0;

        //    //double RoyUSDL = 0;
        //    //double RoyUSDH = 0;
        //    //double RoyUSD = 0;

        //    //double RoyPaidLcl = 0;
        //    //double RoyPaidLclL = 0;
        //    //double RoyPaidLclH = 0;

        //    //double RoyPaidUSD = 0;
        //    //double RoyPaidUSDL = 0;
        //    //double RoyPaidUSDH = 0;

        //    //double Rate_Lcl_per_pcs = 0;
        //    //double Rate_USD_per_pcs = 0;
        //    //double Rate_Rev_percent = 0;

        //    //double ExchangeRate = 0;

        //    //double ASPLclTot = 0;
        //    //double RevLclTot = 0;
        //    //double QtyTot = 0;

        //    //string CP = "";
        //    //string Customer_Final_Ship_To = "";

        //    //// Estrae i dati dell'Agreement
        //    //// -----------------------------------
        //    //Id_Agreement = (double)Agreement_QA_Dt.Rows[0]["Id_Agreement"];
        //    //Agreement = Agreement_QA_Dt.Rows[0]["Agreement"].ToString();
        //    //Model = Agreement_QA_Dt.Rows[0]["Model"].ToString();
        //    //Slot = (double)Agreement_QA_Dt.Rows[0]["Slot"];
        //    //Agreement_Date_Start = Agreement_QA_Dt.Rows[0]["Agreement_Date_Start"].ToString();
        //    //Agreement_Date_End = Agreement_QA_Dt.Rows[0]["Agreement_Date_End"].ToString();
        //    //PL_String = Agreement_QA_Dt.Rows[0]["PL_String"].ToString();
        //    //PL_Cond = Agreement_QA_Dt.Rows[0]["PL_Cond"].ToString();
        //    //CP_String = Agreement_QA_Dt.Rows[0]["CP_String"].ToString();
        //    //CP_Cond = Agreement_QA_Dt.Rows[0]["CP_Cond"].ToString();
        //    //Customer_String = Agreement_QA_Dt.Rows[0]["Customer_String"].ToString();
        //    //Customer_Cond = Agreement_QA_Dt.Rows[0]["Customer_Cond"].ToString();
        //    //Condition1 = Agreement_QA_Dt.Rows[0]["Condition1"].ToString();
        //    //Limit1 = (double)Agreement_QA_Dt.Rows[0]["Limit1"];
        //    //Rate1 = (double)Agreement_QA_Dt.Rows[0]["Rate1"];
        //    //Min1 = (double)Agreement_QA_Dt.Rows[0]["Min1"];
        //    //Max1 = (double)Agreement_QA_Dt.Rows[0]["Max1"];
        //    //Extra1A = (double)Agreement_QA_Dt.Rows[0]["Extra1A"];
        //    //Extra1B = (double)Agreement_QA_Dt.Rows[0]["Extra1B"];
        //    //Extra1C = (double)Agreement_QA_Dt.Rows[0]["Extra1C"];
        //    //Extra1D = (double)Agreement_QA_Dt.Rows[0]["Extra1D"];
        //    //Extra1E = (double)Agreement_QA_Dt.Rows[0]["Extra1E"];
        //    //Extra1F = (double)Agreement_QA_Dt.Rows[0]["Extra1F"];
        //    //Condition2 = Agreement_QA_Dt.Rows[0]["Condition2"].ToString();
        //    //Limit2 = (double)Agreement_QA_Dt.Rows[0]["Limit2"];
        //    //Rate2 = (double)Agreement_QA_Dt.Rows[0]["Rate2"];
        //    //Min2 = (double)Agreement_QA_Dt.Rows[0]["Min2"];
        //    //Max2 = (double)Agreement_QA_Dt.Rows[0]["Max2"];
        //    //Extra2A = (double)Agreement_QA_Dt.Rows[0]["Extra2A"];
        //    //Extra2B = (double)Agreement_QA_Dt.Rows[0]["Extra2B"];
        //    //Extra2C = (double)Agreement_QA_Dt.Rows[0]["Extra2C"];
        //    //Extra2D = (double)Agreement_QA_Dt.Rows[0]["Extra2D"];
        //    //Extra2E = (double)Agreement_QA_Dt.Rows[0]["Extra2E"];
        //    //Extra2F = (double)Agreement_QA_Dt.Rows[0]["Extra2F"];
        //    //Condition3 = Agreement_QA_Dt.Rows[0]["Condition3"].ToString();
        //    //Limit3 = (double)Agreement_QA_Dt.Rows[0]["Limit3"];
        //    //Rate3 = (double)Agreement_QA_Dt.Rows[0]["Rate3"];
        //    //Min3 = (double)Agreement_QA_Dt.Rows[0]["Min3"];
        //    //Max3 = (double)Agreement_QA_Dt.Rows[0]["Max3"];
        //    //Extra3A = (double)Agreement_QA_Dt.Rows[0]["Extra3A"];
        //    //Extra3B = (double)Agreement_QA_Dt.Rows[0]["Extra3B"];
        //    //Extra3C = (double)Agreement_QA_Dt.Rows[0]["Extra3C"];
        //    //Extra3D = (double)Agreement_QA_Dt.Rows[0]["Extra3D"];
        //    //Extra3E = (double)Agreement_QA_Dt.Rows[0]["Extra3E"];
        //    //Extra3F = (double)Agreement_QA_Dt.Rows[0]["Extra3F"];
        //    //Condition4 = Agreement_QA_Dt.Rows[0]["Condition4"].ToString();
        //    //Limit4 = (double)Agreement_QA_Dt.Rows[0]["Limit4"];
        //    //Rate4 = (double)Agreement_QA_Dt.Rows[0]["Rate4"];
        //    //Min4 = (double)Agreement_QA_Dt.Rows[0]["Min4"];
        //    //Max4 = (double)Agreement_QA_Dt.Rows[0]["Max4"];
        //    //Extra4A = (double)Agreement_QA_Dt.Rows[0]["Extra4A"];
        //    //Extra4B = (double)Agreement_QA_Dt.Rows[0]["Extra4B"];
        //    //Extra4C = (double)Agreement_QA_Dt.Rows[0]["Extra4C"];
        //    //Extra4D = (double)Agreement_QA_Dt.Rows[0]["Extra4D"];
        //    //Extra4E = (double)Agreement_QA_Dt.Rows[0]["Extra4E"];
        //    //Extra4F = (double)Agreement_QA_Dt.Rows[0]["Extra4F"];
        //    //Condition5 = Agreement_QA_Dt.Rows[0]["Condition5"].ToString();
        //    //Limit5 = (double)Agreement_QA_Dt.Rows[0]["Limit5"];
        //    //Rate5 = (double)Agreement_QA_Dt.Rows[0]["Rate5"];
        //    //Min5 = (double)Agreement_QA_Dt.Rows[0]["Min5"];
        //    //Max5 = (double)Agreement_QA_Dt.Rows[0]["Max5"];
        //    //Extra5A = (double)Agreement_QA_Dt.Rows[0]["Extra5A"];
        //    //Extra5B = (double)Agreement_QA_Dt.Rows[0]["Extra5B"];
        //    //Extra5C = (double)Agreement_QA_Dt.Rows[0]["Extra5C"];
        //    //Extra5D = (double)Agreement_QA_Dt.Rows[0]["Extra5D"];
        //    //Extra5E = (double)Agreement_QA_Dt.Rows[0]["Extra5E"];
        //    //Extra5F = (double)Agreement_QA_Dt.Rows[0]["Extra5F"];
        //    //Condition6 = Agreement_QA_Dt.Rows[0]["Condition6"].ToString();
        //    //Limit6 = (double)Agreement_QA_Dt.Rows[0]["Limit6"];
        //    //Rate6 = (double)Agreement_QA_Dt.Rows[0]["Rate6"];
        //    //Min6 = (double)Agreement_QA_Dt.Rows[0]["Min6"];
        //    //Max6 = (double)Agreement_QA_Dt.Rows[0]["Max6"];
        //    //Extra6A = (double)Agreement_QA_Dt.Rows[0]["Extra6A"];
        //    //Extra6B = (double)Agreement_QA_Dt.Rows[0]["Extra6B"];
        //    //Extra6C = (double)Agreement_QA_Dt.Rows[0]["Extra6C"];
        //    //Extra6D = (double)Agreement_QA_Dt.Rows[0]["Extra6D"];
        //    //Extra6E = (double)Agreement_QA_Dt.Rows[0]["Extra6E"];
        //    //Extra6F = (double)Agreement_QA_Dt.Rows[0]["Extra6F"];
        //    //RateOver = (double)Agreement_QA_Dt.Rows[0]["RateOver"];
        //    //MinOver = (double)Agreement_QA_Dt.Rows[0]["MinOver"];
        //    //MaxOver = (double)Agreement_QA_Dt.Rows[0]["MaxOver"];
        //    //ExtraOverA = (double)Agreement_QA_Dt.Rows[0]["ExtraOverA"];
        //    //ExtraOverB = (double)Agreement_QA_Dt.Rows[0]["ExtraOverB"];
        //    //ExtraOverC = (double)Agreement_QA_Dt.Rows[0]["ExtraOverC"];
        //    //ExtraOverD = (double)Agreement_QA_Dt.Rows[0]["ExtraOverD"];
        //    //ExtraOverE = (double)Agreement_QA_Dt.Rows[0]["ExtraOverE"];
        //    //ExtraOverF = (double)Agreement_QA_Dt.Rows[0]["ExtraOverF"];
        //    //LclCurrency = Agreement_QA_Dt.Rows[0]["LclCurrency"].ToString();
        //    //Min_Cum_Royalty_KLcl = (double)Agreement_QA_Dt.Rows[0]["Min_Cum_Royalty_KLcl"];
        //    //Max_Cum_Royalty_KLcl = (double)Agreement_QA_Dt.Rows[0]["Max_Cum_Royalty_KLcl"];


        //    //// Loop
        //    //// -----------------------------------
        //    //for (int RowI = 0; RowI <= Royalty_QA_Dt.Rows.Count - 1; RowI++)
        //    //{
        //    //    // Dati iniziali 
        //    //    // -----------------------------------
        //    //    Condition = "";
        //    //    CP = Convert.ToString(Royalty_QA_Dt.Rows[RowI]["CP"]);
        //    //    Customer_Final_Ship_To = Convert.ToString(Royalty_QA_Dt.Rows[RowI]["Customer_Final_Ship_To"]);
        //    //    ExchangeRate = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["ExchangeRate"]), 4);
        //    //    if (ExchangeRate == 0) { ExchangeRate = 1; }
        //    //    //BREAK
        //    //    RevLcl = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Net_Revenue_KLcl"]), 4);
        //    //    RevLclH = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Cum_Net_Revenue_KLcl"]), 4);
        //    //    RevLclL = RevLclH - RevLcl;
        //    //    Qty = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Net_qty_Kpcs"]), 3);
        //    //    QtyH = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI]["Cum_Net_qty_Kpcs"]), 3);
        //    //    QtyL = QtyH - Qty;
        //    //    RoyLcl = 0;
        //    //    RoyUSD = 0;
        //    //    RoyPaidLcl = 0;
        //    //    RoyPaidUSD = 0;
        //    //    Rate_Lcl_per_pcs = 0;
        //    //    Rate_USD_per_pcs = 0;
        //    //    Rate_Rev_percent = 0;

        //    //    if (RowI == 0)
        //    //    {
        //    //        RoyLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_Royalty_KLcl"]), 4);
        //    //        RoyUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_Royalty_KUSD"]), 4);
        //    //        RoyPaidLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_RoyaltyPaid_KLcl"]), 4);
        //    //        RoyPaidUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[0]["Cum_RoyaltyPaid_KUSD"]), 4);
        //    //    }
        //    //    else
        //    //    {
        //    //        RoyLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_Royalty_KLcl"]), 4);
        //    //        RoyUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_Royalty_KUSD"]), 4);
        //    //        RoyPaidLclL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_RoyaltyPaid_KLcl"]), 4);
        //    //        RoyPaidUSDL = Math.Round(Convert.ToDouble(Royalty_QA_Dt.Rows[RowI - 1]["Cum_RoyaltyPaid_KUSD"]), 4);
        //    //    }

        //    //    // Condition
        //    //    // -----------------------------------
        //    //    if (QtyL < Limit1) { ConditionL = Condition1; }
        //    //    else if (QtyL >= Limit1 && QtyL < Limit2) { ConditionL = Condition2; }
        //    //    else if (QtyL >= Limit2 && QtyL < Limit3) { ConditionL = Condition3; }
        //    //    else if (QtyL >= Limit3 && QtyL < Limit4) { ConditionL = Condition4; }
        //    //    else if (QtyL >= Limit4 && QtyL < Limit5) { ConditionL = Condition5; }
        //    //    else if (QtyL >= Limit5 && QtyL < Limit6) { ConditionL = Condition6; }
        //    //    else if (QtyL >= Limit6) { ConditionL = "Over"; }
        //    //    else { ConditionL = "ERR"; }

        //    //    if (QtyH < Limit1) { ConditionH = Condition1; }
        //    //    else if (QtyH >= Limit1 && QtyH < Limit2) { ConditionH = Condition2; }
        //    //    else if (QtyH >= Limit2 && QtyH < Limit3) { ConditionH = Condition3; }
        //    //    else if (QtyH >= Limit3 && QtyH < Limit4) { ConditionH = Condition4; }
        //    //    else if (QtyH >= Limit4 && QtyH < Limit5) { ConditionH = Condition5; }
        //    //    else if (QtyH >= Limit5 && QtyH < Limit6) { ConditionH = Condition6; }
        //    //    else if (QtyH >= Limit6) { ConditionL = "Over"; }
        //    //    else { ConditionL = "ERR"; }

        //    //    if (string.Equals(ConditionL, ConditionH))
        //    //    {
        //    //        Condition = ConditionL;
        //    //    }
        //    //    else
        //    //    {
        //    //        Condition = ConditionL + " -> " + ConditionH;
        //    //    }

        //    //    // Quantity
        //    //    // -----------------------------------
        //    //    Qty1 = 0;
        //    //    Qty2 = 0;
        //    //    Qty3 = 0;
        //    //    Qty4 = 0;
        //    //    Qty5 = 0;
        //    //    Qty6 = 0;
        //    //    QtyOver = 0;

        //    //    if (Qty >= 0)
        //    //    {
        //    //        if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition1)) { Qty1 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition2)) { Qty1 = Limit1 - QtyL; Qty2 = QtyH - Limit1; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition3)) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = QtyH - Limit2; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition4)) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = Limit3 - Limit2; Qty4 = QtyH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition5)) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = QtyH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, Condition6)) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition1) && string.Equals(ConditionH, "Over")) { Qty1 = Limit1 - QtyL; Qty2 = Limit2 - Limit1; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition2)) { Qty2 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition3)) { Qty2 = Limit2 - QtyL; Qty3 = QtyH - Limit2; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition4)) { Qty2 = Limit2 - QtyL; Qty3 = Limit3 - Limit2; Qty4 = QtyH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition5)) { Qty2 = Limit2 - QtyL; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = QtyH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, Condition6)) { Qty2 = Limit2 - QtyL; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition2) && string.Equals(ConditionH, "Over")) { Qty2 = Limit2 - QtyL; Qty3 = Limit3 - Limit2; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition3)) { Qty3 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition4)) { Qty3 = Limit3 - QtyL; Qty4 = QtyH - Limit3; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition5)) { Qty3 = Limit3 - QtyL; Qty4 = Limit4 - Limit3; Qty5 = QtyH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, Condition6)) { Qty3 = Limit3 - QtyL; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition3) && string.Equals(ConditionH, "Over")) { Qty3 = Limit3 - QtyL; Qty4 = Limit4 - Limit3; Qty5 = Limit5 - Limit4; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition4)) { Qty4 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition5)) { Qty4 = Limit4 - QtyL; Qty5 = QtyH - Limit4; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, Condition6)) { Qty4 = Limit4 - QtyL; Qty5 = Limit5 - Limit4; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition4) && string.Equals(ConditionH, "Over")) { Qty4 = Limit4 - QtyL; Qty5 = Limit5 - Limit4; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, Condition5)) { Qty5 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, Condition6)) { Qty5 = Limit5 - QtyL; Qty6 = QtyH - Limit5; }
        //    //        else if (string.Equals(ConditionL, Condition5) && string.Equals(ConditionH, "Over")) { Qty5 = Limit5 - QtyL; Qty6 = Limit6 - Limit5; QtyOver = QtyH - Limit6; }

        //    //        else if (string.Equals(ConditionL, Condition6) && string.Equals(ConditionH, Condition6)) { Qty6 = QtyH - QtyL; }
        //    //        else if (string.Equals(ConditionL, Condition6) && string.Equals(ConditionH, "Over")) { Qty6 = Limit6 - QtyL; QtyOver = QtyH - Limit6; }

        //    //        else { QtyOver = QtyH - QtyL; }

        //    //    }
        //    //    else
        //    //    {
        //    //        if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition1)) { Qty1 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition2)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(QtyL - Limit1); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition3)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(QtyL - Limit2); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition4)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(Limit3 - Limit2); Qty4 = -(QtyL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition5)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(QtyL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, Condition6)) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition1) && string.Equals(ConditionL, "Over")) { Qty1 = -(Limit1 - QtyH); Qty2 = -(Limit2 - Limit1); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition2)) { Qty2 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition3)) { Qty2 = -(Limit2 - QtyH); Qty3 = -(QtyL - Limit2); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition4)) { Qty2 = -(Limit2 - QtyH); Qty3 = -(Limit3 - Limit2); Qty4 = -(QtyL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition5)) { Qty2 = -(Limit2 - QtyH); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(QtyL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, Condition6)) { Qty2 = -(Limit2 - QtyH); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition2) && string.Equals(ConditionL, "Over")) { Qty2 = -(Limit2 - QtyH); Qty3 = -(Limit3 - Limit2); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition3)) { Qty3 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition4)) { Qty3 = -(Limit3 - QtyH); Qty4 = -(QtyL - Limit3); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition5)) { Qty3 = -(Limit3 - QtyH); Qty4 = -(Limit4 - Limit3); Qty5 = -(QtyL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, Condition6)) { Qty3 = -(Limit3 - QtyH); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition3) && string.Equals(ConditionL, "Over")) { Qty3 = -(Limit3 - QtyH); Qty4 = -(Limit4 - Limit3); Qty5 = -(Limit5 - Limit4); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition4)) { Qty4 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition5)) { Qty4 = -(Limit4 - QtyH); Qty5 = -(QtyL - Limit4); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, Condition6)) { Qty4 = -(Limit4 - QtyH); Qty5 = -(Limit5 - Limit4); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition4) && string.Equals(ConditionL, "Over")) { Qty4 = -(Limit4 - QtyH); Qty5 = -(Limit5 - Limit4); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, Condition5)) { Qty5 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, Condition6)) { Qty5 = -(Limit5 - QtyH); Qty6 = -(QtyL - Limit5); }
        //    //        else if (string.Equals(ConditionH, Condition5) && string.Equals(ConditionL, "Over")) { Qty5 = -(Limit5 - QtyH); Qty6 = -(Limit6 - Limit5); QtyOver = -(QtyL - Limit6); }

        //    //        else if (string.Equals(ConditionH, Condition6) && string.Equals(ConditionL, Condition6)) { Qty6 = -(QtyL - QtyH); }
        //    //        else if (string.Equals(ConditionH, Condition6) && string.Equals(ConditionL, "Over")) { Qty6 = -(Limit6 - QtyH); QtyOver = -(QtyL - Limit6); }

        //    //        else { QtyOver = QtyH - QtyL; }

        //    //    }

        //    //    // Net Revenue
        //    //    // -----------------------------------
        //    //    if (Qty != 0 && RevLcl != 0)
        //    //    {
        //    //        RevLcl1 = RevLcl * Qty1 / Qty;
        //    //        RevLcl2 = RevLcl * Qty2 / Qty;
        //    //        RevLcl3 = RevLcl * Qty3 / Qty;
        //    //        RevLcl4 = RevLcl * Qty4 / Qty;
        //    //        RevLcl5 = RevLcl * Qty5 / Qty;
        //    //        RevLcl6 = RevLcl * Qty6 / Qty;
        //    //        RevLclOver = RevLcl * QtyOver / Qty;
        //    //    }
        //    //    else if (Qty != 0 && RevLcl == 0)
        //    //    {
        //    //        RevLcl1 = 0;
        //    //        RevLcl2 = 0;
        //    //        RevLcl3 = 0;
        //    //        RevLcl4 = 0;
        //    //        RevLcl5 = 0;
        //    //        RevLcl6 = 0;
        //    //        RevLclOver = 0;
        //    //    }
        //    //    else if (Qty == 0 && RevLcl != 0)
        //    //    {
        //    //        RevLcl1 = 0;
        //    //        RevLcl2 = 0;
        //    //        RevLcl3 = 0;
        //    //        RevLcl4 = 0;
        //    //        RevLcl5 = 0;
        //    //        RevLcl6 = 0;
        //    //        RevLclOver = 0;

        //    //        if (string.Equals(Condition, Condition1)) { RevLcl1 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition2)) { RevLcl2 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition3)) { RevLcl3 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition4)) { RevLcl4 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition5)) { RevLcl5 = RevLcl; }
        //    //        else if (string.Equals(Condition, Condition6)) { RevLcl6 = RevLcl; }
        //    //        else { RevLclOver = RevLcl; }
        //    //    }
        //    //    else
        //    //    {
        //    //        RevLcl1 = 0;
        //    //        RevLcl2 = 0;
        //    //        RevLcl3 = 0;
        //    //        RevLcl4 = 0;
        //    //        RevLcl5 = 0;
        //    //        RevLcl6 = 0;
        //    //        RevLclOver = 0;
        //    //    }



        //    //    // ASP Tot
        //    //    // -----------------------------------
        //    //    RevLclTot = Math.Round((double)Royalty_QA_Dt.Compute("Sum(Net_Revenue_KLcl)", "CP = '" + CP + "' AND Customer_Final_Ship_To = '" + Customer_Final_Ship_To + "'"), 4);
        //    //    QtyTot = Math.Round((double)Royalty_QA_Dt.Compute("Sum(Net_qty_Kpcs)", "CP = '" + CP + "' AND Customer_Final_Ship_To = '" + Customer_Final_Ship_To + "'"), 3);
        //    //    if (QtyTot != 0) { ASPLclTot = RevLclTot / QtyTot; } else { ASPLclTot = 0; }


        //    //    // RateOnRev
        //    //    // -----------------------------------
        //    //    RateOnRev1 = Rate1;
        //    //    RateOnRev2 = Rate2;
        //    //    RateOnRev3 = Rate3;
        //    //    RateOnRev4 = Rate4;
        //    //    RateOnRev5 = Rate5;
        //    //    RateOnRev6 = Rate6;
        //    //    RateOnRevOver = RateOver;

        //    //    // RateOnPcs
        //    //    // -----------------------------------
        //    //    RateOnPcs1 = ASPLclTot * RateOnRev1;
        //    //    RateOnPcs2 = ASPLclTot * RateOnRev2;
        //    //    RateOnPcs3 = ASPLclTot * RateOnRev3;
        //    //    RateOnPcs4 = ASPLclTot * RateOnRev4;
        //    //    RateOnPcs5 = ASPLclTot * RateOnRev5;
        //    //    RateOnPcs6 = ASPLclTot * RateOnRev6;
        //    //    RateOnPcsOver = ASPLclTot * RateOnRevOver;


        //    //    // Check Min/Max
        //    //    // -----------------------------------
        //    //    if (RateOnPcs1 < Min1) { RateOnPcs1 = Min1; } else if (RateOnPcs1 > Max1) { RateOnPcs1 = Max1; }
        //    //    if (RateOnPcs2 < Min2) { RateOnPcs2 = Min2; } else if (RateOnPcs2 > Max2) { RateOnPcs2 = Max2; }
        //    //    if (RateOnPcs3 < Min3) { RateOnPcs3 = Min3; } else if (RateOnPcs3 > Max3) { RateOnPcs3 = Max3; }
        //    //    if (RateOnPcs4 < Min4) { RateOnPcs4 = Min4; } else if (RateOnPcs4 > Max4) { RateOnPcs4 = Max4; }
        //    //    if (RateOnPcs5 < Min5) { RateOnPcs5 = Min5; } else if (RateOnPcs5 > Max5) { RateOnPcs5 = Max5; }
        //    //    if (RateOnPcs6 < Min6) { RateOnPcs6 = Min6; } else if (RateOnPcs6 > Max6) { RateOnPcs6 = Max6; }
        //    //    if (RateOnPcsOver < MinOver) { RateOnPcsOver = MinOver; } else if (RateOnPcsOver > MaxOver) { RateOnPcsOver = MaxOver; }


        //    //    // Roy finale
        //    //    // -----------------------------------
        //    //    if (RevLclTot == 0)
        //    //    {
        //    //        RoyLcl1 = 0;
        //    //        RoyLcl2 = 0;
        //    //        RoyLcl3 = 0;
        //    //        RoyLcl4 = 0;
        //    //        RoyLcl5 = 0;
        //    //        RoyLcl6 = 0;
        //    //        RoyLclOver = 0;
        //    //    }
        //    //    else
        //    //    {
        //    //        if (QtyTot == 0)
        //    //        {
        //    //            RoyLcl1 = RateOnRev1 * RevLcl1;
        //    //            RoyLcl2 = RateOnRev2 * RevLcl2;
        //    //            RoyLcl3 = RateOnRev3 * RevLcl3;
        //    //            RoyLcl4 = RateOnRev4 * RevLcl4;
        //    //            RoyLcl5 = RateOnRev5 * RevLcl5;
        //    //            RoyLcl6 = RateOnRev6 * RevLcl6;
        //    //            RoyLclOver = RateOnRevOver * RevLclOver;
        //    //        }
        //    //        else
        //    //        {
        //    //            if (Qty1 == 0) { RoyLcl1 = 0; } else { RoyLcl1 = RateOnPcs1 * Qty1; }
        //    //            if (Qty2 == 0) { RoyLcl2 = 0; } else { RoyLcl2 = RateOnPcs2 * Qty2; }
        //    //            if (Qty3 == 0) { RoyLcl3 = 0; } else { RoyLcl3 = RateOnPcs3 * Qty3; }
        //    //            if (Qty4 == 0) { RoyLcl4 = 0; } else { RoyLcl4 = RateOnPcs4 * Qty4; }
        //    //            if (Qty5 == 0) { RoyLcl5 = 0; } else { RoyLcl5 = RateOnPcs5 * Qty5; }
        //    //            if (Qty6 == 0) { RoyLcl6 = 0; } else { RoyLcl6 = RateOnPcs6 * Qty6; }
        //    //            if (QtyOver == 0) { RoyLclOver = 0; } else { RoyLclOver = RateOnPcsOver * QtyOver; }

        //    //        }
        //    //    }

        //    //    RoyLcl = RoyLcl1 + RoyLcl2 + RoyLcl3 + RoyLcl4 + RoyLcl5 + RoyLcl6 + RoyLclOver;
        //    //    RoyLclH = RoyLclL + RoyLcl;
        //    //    RoyUSD = RoyLcl * ExchangeRate;
        //    //    RoyUSDH = RoyUSDL + RoyUSD;


        //    //    // Roy Paid
        //    //    // -----------------------------------
        //    //    if (RoyLcl >= 0)
        //    //    {
        //    //        if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH < Min_Cum_Royalty_KLcl) { RoyPaidLcl = 0; }
        //    //        else if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLclH - Min_Cum_Royalty_KLcl; }
        //    //        else if (RoyLclL < Min_Cum_Royalty_KLcl && RoyLclH >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = Max_Cum_Royalty_KLcl - Min_Cum_Royalty_KLcl; }
        //    //        else if (RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl && RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLcl; }
        //    //        else if (RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl && RoyLclH >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = Max_Cum_Royalty_KLcl - RoyLclL; }
        //    //        else { RoyPaidLcl = 0; }
        //    //    }
        //    //    else
        //    //    {
        //    //        if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL < Min_Cum_Royalty_KLcl) { RoyPaidLcl = 0; }
        //    //        else if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(RoyLclL - Min_Cum_Royalty_KLcl); }
        //    //        else if (RoyLclH < Min_Cum_Royalty_KLcl && RoyLclL >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(Max_Cum_Royalty_KLcl - Min_Cum_Royalty_KLcl); }
        //    //        else if (RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl && RoyLclL >= Min_Cum_Royalty_KLcl && RoyLclL < Max_Cum_Royalty_KLcl) { RoyPaidLcl = RoyLcl; }
        //    //        else if (RoyLclH >= Min_Cum_Royalty_KLcl && RoyLclH < Max_Cum_Royalty_KLcl && RoyLclL >= Max_Cum_Royalty_KLcl) { RoyPaidLcl = -(Max_Cum_Royalty_KLcl - RoyLclL); }
        //    //        else { RoyPaidLcl = 0; }
        //    //    }
        //    //    RoyPaidLclH = RoyPaidLclL + RoyPaidLcl;
        //    //    RoyPaidUSD = RoyPaidLcl * ExchangeRate;
        //    //    RoyPaidUSDH = RoyPaidUSDL + RoyPaidUSD;


        //    //    // Rate
        //    //    // -----------------------------------
        //    //    if (Qty != 0) { Rate_Lcl_per_pcs = RoyLcl / Qty; } else { Rate_Lcl_per_pcs = 0; }
        //    //    if (Qty != 0) { Rate_USD_per_pcs = RoyUSD / Qty; } else { Rate_USD_per_pcs = 0; }
        //    //    if (RevLcl != 0) { Rate_Rev_percent = RoyLcl / RevLcl; } else { Rate_Rev_percent = 0; }

        //    //    // Salva i dati i RoyaltyQ
        //    //    // -----------------------------------
        //    //    Royalty_QA_Dt.Rows[RowI]["Condition"] = Condition;
        //    //    Royalty_QA_Dt.Rows[RowI]["Royalty_KLcl"] = Math.Round(RoyLcl, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_Royalty_KLcl"] = Math.Round(RoyLclH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Royalty_KUSD"] = Math.Round(RoyUSD, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_Royalty_KUSD"] = Math.Round(RoyUSDH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["RoyaltyPaid_KLcl"] = Math.Round(RoyPaidLcl, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_RoyaltyPaid_KLcl"] = Math.Round(RoyPaidLclH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["RoyaltyPaid_KUSD"] = Math.Round(RoyPaidUSD, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Cum_RoyaltyPaid_KUSD"] = Math.Round(RoyPaidUSDH, 4);
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_Lcl_per_pcs"] = Rate_Lcl_per_pcs;
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_USD_per_pcs"] = Rate_USD_per_pcs;
        //    //    Royalty_QA_Dt.Rows[RowI]["Rate_Rev_percent"] = Rate_Rev_percent;

        //    //}


        //}










        //public void Query_Agreements(
        //    in string Agreement, 
        //    in DataTable Agreement_Dt, 
        //    ref DataTable Rule_Dt)
        //{


        //    // Copy datarow in datatable
        //    // -----------------------------------
        //    foreach (DataRow Dr in Agreement_Dt.Select("[AGREEMENT] = '" + Agreement + "'"))
        //    {
        //        Rule_Dt.ImportRow(Dr);
        //    }

        //    // Sort
        //    // -----------------------------------
        //    Rule_Dt.DefaultView.Sort = "AGREEMENT_ID";
        //    Rule_Dt = Rule_Dt.DefaultView.ToTable();

        //    // Aggiunge i valori di default
        //    // -----------------------------------
        //    for (int i = 0; i < Rule_Dt.Rows.Count; i++)
        //    {
        //        if ((string)Rule_Dt.Rows[i]["AGREEMENT"] == "") { Rule_Dt.Rows[i]["AGREEMENT"] = "NOAGREEMENT"; };
        //        if ((string)Rule_Dt.Rows[i]["AGREEMENT_ID"] == "") { Rule_Dt.Rows[i]["AGREEMENT_ID"] = Rule_Dt.Rows[i]["AGREEMENT"] + "_XXX"; };
        //        //VERSION_DATE
        //        //VERSION_DESCR
        //        //MODEL_ACTIVE
        //        //MODEL_INITIAL_MONTH
        //        if ((string)Rule_Dt.Rows[i]["MODEL_FINAL_MONTH"] == "") { Rule_Dt.Rows[i]["MODEL_FINAL_MONTH"] = "M209912"; };
        //        //MODEL_TYPE
        //        if ((string)Rule_Dt.Rows[i]["MODEL_CURRENCY"] == "") { Rule_Dt.Rows[i]["MODEL_CURRENCY"] = "USD"; };
        //        if ((double)Rule_Dt.Rows[i]["MODEL_NB_SLOT"] == 0) { Rule_Dt.Rows[i]["MODEL_NB_SLOT"] = 1; };
        //        if ((double)Rule_Dt.Rows[i]["MODEL_MIN_ACCUMULATED_ROYALTY"] == 0) { Rule_Dt.Rows[i]["MODEL_MIN_ACCUMULATED_ROYALTY"] = -1; };
        //        if ((double)Rule_Dt.Rows[i]["MODEL_MIN_EACH_YEAR_ROYALTY"] == 0) { Rule_Dt.Rows[i]["MODEL_MIN_EACH_YEAR_ROYALTY"] = -1; };
        //        if ((double)Rule_Dt.Rows[i]["MODEL_MIN_EACH_QUARTER_ROYALTY"] == 0) { Rule_Dt.Rows[i]["MODEL_MIN_EACH_QUARTER_ROYALTY"] = -1; };
        //        if ((double)Rule_Dt.Rows[i]["MODEL_MAX_ACCUMULATED_ROYALTY"] == 0) { Rule_Dt.Rows[i]["MODEL_MAX_ACCUMULATED_ROYALTY"] = 1000000000; };
        //        if ((double)Rule_Dt.Rows[i]["MODEL_MAX_EACH_YEAR_ROYALTY"] == 0) { Rule_Dt.Rows[i]["MODEL_MAX_EACH_YEAR_ROYALTY"] = 1000000000; };
        //        if ((double)Rule_Dt.Rows[i]["MODEL_MAX_EACH_QUARTER_ROYALTY"] == 0) { Rule_Dt.Rows[i]["MODEL_MAX_EACH_QUARTER_ROYALTY"] = 1000000000; };
        //        //SELECTION_PL_LIST
        //        //SELECTION_CP_LIST
        //        //SELECTION_CP_CONDITION
        //        //SELECTION_CUSTOMER_FINAL_LIST
        //        //SELECTION_CUSTOMER_FINAL_CONDITION
        //        //SELECTION_CUSTOMER_FINAL_TYPE_LIST
        //        //SELECTION_CUSTOMER_FINAL_TYPE_CONDITION
        //        //SELECTION_CUSTOMER_FINAL_GROUP_LIST
        //        //SELECTION_CUSTOMER_FINAL_GROUP_CONDITION
        //        //SELECTION_CUSTOMER_FINAL_SHIPTO_LIST
        //        //SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION
        //        //SLOT01_MESSAGE
        //        //SLOT01_START
        //        if ((double)Rule_Dt.Rows[i]["SLOT01_END"] == 0) { Rule_Dt.Rows[i]["SLOT01_END"] = 1000000000; };
        //        //SLOT01_RATE
        //        if ((double)Rule_Dt.Rows[i]["SLOT01_MIN"] == 0) { Rule_Dt.Rows[i]["SLOT01_MIN"] = -1; };
        //        if ((double)Rule_Dt.Rows[i]["SLOT01_MAX"] == 0) { Rule_Dt.Rows[i]["SLOT01_MAX"] = 1000000000; };
        //        //SLOT01_A
        //        //SLOT01_B
        //        //SLOT01_C
        //        //SLOT01_D
        //        //SLOT01_E
        //        //SLOT01_F
        //        //SLOT01_G
        //        //SLOT01_H
        //        //SLOT02_MESSAGE
        //        //SLOT02_START
        //        if ((double)Rule_Dt.Rows[i]["SLOT02_END"] == 0) { Rule_Dt.Rows[i]["SLOT02_END"] = 1000000000; };
        //        //SLOT02_RATE
        //        if ((double)Rule_Dt.Rows[i]["SLOT02_MIN"] == 0) { Rule_Dt.Rows[i]["SLOT02_MIN"] = -1; };
        //        if ((double)Rule_Dt.Rows[i]["SLOT02_MAX"] == 0) { Rule_Dt.Rows[i]["SLOT02_MAX"] = 1000000000; };
        //        //SLOT02_A
        //        //SLOT02_B
        //        //SLOT02_C
        //        //SLOT02_D
        //        //SLOT02_E
        //        //SLOT02_F
        //        //SLOT02_G
        //        //SLOT02_H
        //        //SLOT03_MESSAGE
        //        //SLOT03_START
        //        if ((double)Rule_Dt.Rows[i]["SLOT03_END"] == 0) { Rule_Dt.Rows[i]["SLOT03_END"] = 1000000000; };
        //        //SLOT03_RATE
        //        if ((double)Rule_Dt.Rows[i]["SLOT03_MIN"] == 0) { Rule_Dt.Rows[i]["SLOT03_MIN"] = -1; };
        //        if ((double)Rule_Dt.Rows[i]["SLOT03_MAX"] == 0) { Rule_Dt.Rows[i]["SLOT03_MAX"] = 1000000000; };
        //        //SLOT03_A
        //        //SLOT03_B
        //        //SLOT03_C
        //        //SLOT03_D
        //        //SLOT03_E
        //        //SLOT03_F
        //        //SLOT03_G
        //        //SLOT03_H
        //        //SLOT04_MESSAGE
        //        //SLOT04_START
        //        if ((double)Rule_Dt.Rows[i]["SLOT04_END"] == 0) { Rule_Dt.Rows[i]["SLOT04_END"] = 1000000000; };
        //        //SLOT04_RATE
        //        if ((double)Rule_Dt.Rows[i]["SLOT04_MIN"] == 0) { Rule_Dt.Rows[i]["SLOT04_MIN"] = -1; };
        //        if ((double)Rule_Dt.Rows[i]["SLOT04_MAX"] == 0) { Rule_Dt.Rows[i]["SLOT04_MAX"] = 1000000000; };
        //        //SLOT04_A
        //        //SLOT04_B
        //        //SLOT04_C
        //        //SLOT04_D
        //        //SLOT04_E
        //        //SLOT04_F
        //        //SLOT04_G
        //        //SLOT04_H
        //        //SLOT05_MESSAGE
        //        //SLOT05_START
        //        if ((double)Rule_Dt.Rows[i]["SLOT05_END"] == 0) { Rule_Dt.Rows[i]["SLOT05_END"] = 1000000000; };
        //        //SLOT05_RATE
        //        if ((double)Rule_Dt.Rows[i]["SLOT05_MIN"] == 0) { Rule_Dt.Rows[i]["SLOT05_MIN"] = -1; };
        //        if ((double)Rule_Dt.Rows[i]["SLOT05_MAX"] == 0) { Rule_Dt.Rows[i]["SLOT05_MAX"] = 1000000000; };
        //        //SLOT05_A
        //        //SLOT05_B
        //        //SLOT05_C
        //        //SLOT05_D
        //        //SLOT05_E
        //        //SLOT05_F
        //        //SLOT05_G
        //        //SLOT05_H
        //        //SLOT06_MESSAGE
        //        //SLOT06_START
        //        if ((double)Rule_Dt.Rows[i]["SLOT06_END"] == 0) { Rule_Dt.Rows[i]["SLOT06_END"] = 1000000000; };
        //        //SLOT06_RATE
        //        if ((double)Rule_Dt.Rows[i]["SLOT06_MIN"] == 0) { Rule_Dt.Rows[i]["SLOT06_MIN"] = -1; };
        //        if ((double)Rule_Dt.Rows[i]["SLOT06_MAX"] == 0) { Rule_Dt.Rows[i]["SLOT06_MAX"] = 1000000000; };
        //        //SLOT06_A
        //        //SLOT06_B
        //        //SLOT06_C
        //        //SLOT06_D
        //        //SLOT06_E
        //        //SLOT06_F
        //        //SLOT06_G
        //        //SLOT06_H
        //        //SLOT07_MESSAGE
        //        //SLOT07_START
        //        if ((double)Rule_Dt.Rows[i]["SLOT07_END"] == 0) { Rule_Dt.Rows[i]["SLOT07_END"] = 1000000000; };
        //        //SLOT07_RATE
        //        if ((double)Rule_Dt.Rows[i]["SLOT07_MIN"] == 0) { Rule_Dt.Rows[i]["SLOT07_MIN"] = -1; };
        //        if ((double)Rule_Dt.Rows[i]["SLOT07_MAX"] == 0) { Rule_Dt.Rows[i]["SLOT07_MAX"] = 1000000000; };
        //        //SLOT07_A
        //        //SLOT07_B
        //        //SLOT07_C
        //        //SLOT07_D
        //        //SLOT07_E
        //        //SLOT07_F
        //        //SLOT07_G
        //        //SLOT07_H
        //        //SLOT08_MESSAGE
        //        //SLOT08_START
        //        if ((double)Rule_Dt.Rows[i]["SLOT08_END"] == 0) { Rule_Dt.Rows[i]["SLOT08_END"] = 1000000000; };
        //        //SLOT08_RATE
        //        if ((double)Rule_Dt.Rows[i]["SLOT08_MIN"] == 0) { Rule_Dt.Rows[i]["SLOT08_MIN"] = -1; };
        //        if ((double)Rule_Dt.Rows[i]["SLOT08_MAX"] == 0) { Rule_Dt.Rows[i]["SLOT08_MAX"] = 1000000000; };
        //        //SLOT08_A
        //        //SLOT08_B
        //        //SLOT08_C
        //        //SLOT08_D
        //        //SLOT08_E
        //        //SLOT08_F
        //        //SLOT08_G
        //        //SLOT08_H
        //        //SLOT09_MESSAGE
        //        //SLOT09_START
        //        if ((double)Rule_Dt.Rows[i]["SLOT09_END"] == 0) { Rule_Dt.Rows[i]["SLOT09_END"] = 1000000000; };
        //        //SLOT09_RATE
        //        if ((double)Rule_Dt.Rows[i]["SLOT09_MIN"] == 0) { Rule_Dt.Rows[i]["SLOT09_MIN"] = -1; };
        //        if ((double)Rule_Dt.Rows[i]["SLOT09_MAX"] == 0) { Rule_Dt.Rows[i]["SLOT09_MAX"] = 1000000000; };
        //        //SLOT09_A
        //        //SLOT09_B
        //        //SLOT09_C
        //        //SLOT09_D
        //        //SLOT09_E
        //        //SLOT09_F
        //        //SLOT09_G
        //        //SLOT09_H
        //        //SLOT10_MESSAGE
        //        //SLOT10_START
        //        if ((double)Rule_Dt.Rows[i]["SLOT10_END"] == 0) { Rule_Dt.Rows[i]["SLOT10_END"] = 1000000000; };
        //        //SLOT10_RATE
        //        if ((double)Rule_Dt.Rows[i]["SLOT10_MIN"] == 0) { Rule_Dt.Rows[i]["SLOT10_MIN"] = -1; };
        //        if ((double)Rule_Dt.Rows[i]["SLOT10_MAX"] == 0) { Rule_Dt.Rows[i]["SLOT10_MAX"] = 1000000000; };
        //        //SLOT10_A
        //        //SLOT10_B
        //        //SLOT10_C
        //        //SLOT10_D
        //        //SLOT10_E
        //        //SLOT10_F
        //        //SLOT10_G
        //        //SLOT10_H

        //    }



        //}




        //public void Query_Init(
        //    in string Agreement, 
        //    in DataTable Init_Dt, 
        //    ref string INITIAL_MONTH_OF_CONTRACT,
        //    ref string FINAL_MONTH_OF_CONTRACT,
        //    ref string MONTH_OF_INITIALIZATION,
        //    ref double CUM_NET_QTY_PCS,
        //    ref double CUM_NET_REVENUE_LCL,
        //    ref double CUM_NET_REVENUE_USD,
        //    ref double CUM_ROYALTY_LCL,
        //    ref double CUM_ROYALTY_USD,
        //    ref double CUM_ROYALTY_PAID_LCL,
        //    ref double CUM_ROYALTY_PAID_USD)
        //{


        //    // Copy datarow in datatable
        //    // -----------------------------------
        //    foreach (DataRow Dr in Init_Dt.Select("[AGREEMENT] = '" + Agreement + "'"))
        //    {
        //        INITIAL_MONTH_OF_CONTRACT = (string)Dr["INITIAL_MONTH_OF_CONTRACT"];
        //        FINAL_MONTH_OF_CONTRACT = (string)Dr["FINAL_MONTH_OF_CONTRACT"];
        //        MONTH_OF_INITIALIZATION = (string)Dr["MONTH_OF_INITIALIZATION"];
        //        CUM_NET_QTY_PCS = Math.Round((double)Dr["CUM_NET_QTY_PCS"],0);
        //        CUM_NET_REVENUE_LCL = Math.Round((double)Dr["CUM_NET_REVENUE_LCL"],2);
        //        CUM_NET_REVENUE_USD = Math.Round((double)Dr["CUM_NET_REVENUE_USD"], 2);
        //        CUM_ROYALTY_LCL = Math.Round((double)Dr["CUM_ROYALTY_LCL"], 2);
        //        CUM_ROYALTY_USD = Math.Round((double)Dr["CUM_ROYALTY_USD"], 2);
        //        CUM_ROYALTY_PAID_LCL = Math.Round((double)Dr["CUM_ROYALTY_PAID_LCL"], 2);
        //        CUM_ROYALTY_PAID_USD = Math.Round((double)Dr["CUM_ROYALTY_PAID_USD"], 2);
        //    }

        //    // Aggiunge i valori di default
        //    // -----------------------------------
        //    if (INITIAL_MONTH_OF_CONTRACT == "") { INITIAL_MONTH_OF_CONTRACT = "2015M01"; };
        //    if (FINAL_MONTH_OF_CONTRACT == "") { FINAL_MONTH_OF_CONTRACT = "2099M12"; };
        //    //MONTH_OF_INITIALIZATION
        //    //CUM_NET_QTY_PCS
        //    //CUM_NET_REVENUE_LCL
        //    //CUM_NET_REVENUE_USD
        //    //CUM_ROYALTY_LCL
        //    //CUM_ROYALTY_USD
        //    //CUM_ROYALTY_PAID_LCL
        //    //CUM_ROYALTY_PAID_USD


        //}




        //public void Query_SapAct_Forecast_AllRules_AllQuarters(
        //    in string Plan, 
        //    in DataTable Rule_Dt, 
        //    in DataTable Quarter_Dt, 
        //    ref DataTable SapAct_Forecast_AllRules_AllQuarters_Dt)
        //{

        //    // Variabili interne
        //    // -----------------------------------
        //    string PL_List = "";
        //    string PL_List_All = "";
        //    string Quarter_List = "";
        //    string Quarter_List_All = "";
        //    string SqlString = "";



        //    // Elenco delle PL
        //    // -----------------------------------
        //    PL_List_All = "";
        //    foreach (DataRow Dr in Rule_Dt.Rows)
        //    {
        //        PL_List = (string)Dr["SELECTION_PL_LIST"];
        //        PL_List = PL_List.Trim();
        //        PL_List = PL_List.Replace(",", "','");

        //        if (!String.IsNullOrEmpty(PL_List))
        //        {
        //            if (String.IsNullOrEmpty(PL_List_All))
        //            {
        //                // E' la prima
        //                PL_List_All = "('" + PL_List + "'";
        //            }
        //            else
        //            {
        //                // Dalla seconda in poi
        //                PL_List_All = PL_List_All + ",'" + PL_List + "'";
        //            }
        //        }

        //    }

        //    // Aggiunge la parte finale
        //    if (String.IsNullOrEmpty(PL_List_All))
        //    {
        //        PL_List_All = "('%')";
        //    }
        //    else
        //    {
        //        PL_List_All = PL_List_All + ")";
        //    }




        //    // Elenco dei QUARTERS
        //    // -----------------------------------
        //    Quarter_List_All = "";
        //    foreach (DataRow Dr in Quarter_Dt.Rows)
        //    {
        //        Quarter_List = (string)Dr["QUARTER (yyyyQq)"];
        //        Quarter_List = Quarter_List.Trim();

        //        if (!String.IsNullOrEmpty(Quarter_List))
        //        {
        //            if (String.IsNullOrEmpty(Quarter_List_All))
        //            {
        //                // E' la prima
        //                Quarter_List_All = "('" + Quarter_List + "'";
        //            }
        //            else
        //            {
        //                // Dalla seconda in poi
        //                Quarter_List_All = Quarter_List_All + ",'" + Quarter_List + "'";
        //            }
        //        }

        //    }

        //    // Aggiunge la parte finale
        //    if (String.IsNullOrEmpty(Quarter_List_All))
        //    {
        //        Quarter_List_All = "('%')";
        //    }
        //    else
        //    {
        //        Quarter_List_All = Quarter_List_All + ")";
        //    }



        //    // Estrazione SapAct o Forecast
        //    if (Plan == "ACTUAL")
        //    {
        //        SqlConnection SqlConn = new SqlConnection(@"Data Source = AGRCLFRSSQLQA.AGRMFG.STMMFG.COM\SRMTST; Integrated Security=true; Initial Catalog = ROYALTY; Connection Timeout = 0");

        //        SqlString = @"
        //            SELECT
        //            	[YEAR (Yyyyy)],
        //             [YEAR (Yyy)],
        //             [QUARTER (yyyyQq)],
        //             [QUARTER (yyQq)],
        //             [MONTH (yyyyMmm)],
        //             [MONTH (yyMmm)],
        //             [GROUP_CODE_ORIGINAL],
        //             [SUBGROUP_CODE_ORIGINAL],
        //             [DIV_CODE_ORIGINAL],
        //             [BU_CODE_ORIGINAL],
        //             [BU_CODE_CURRENT],
        //             '" + Plan + @"' AS [DATA_SOURCE],
        //             [PRODUCT_LINE_ORIGINAL],
        //             [PRODUCT_LINE_CURRENT],
        //             [CP],
        //             [REASON_CODE],
        //             [REASON_DESCR],
        //             [REASON_TYPE],
        //             [REASON_FLAG_QUANTITY],
        //             [CUSTOMER_DIRECT_CODE],
        //             [CUSTOMER_DIRECT_DESCR],
        //             [CUSTOMER_DIRECT_TYPE_CODE],
        //             [CUSTOMER_DIRECT_TYPE_DESCR],
        //             [CUSTOMER_DIRECT_GROUP_CODE],
        //             [CUSTOMER_DIRECT_GROUP_DESCR],
        //             [CUSTOMER_DIRECT_SHIPTO_CODE],
        //             [CUSTOMER_DIRECT_SHIPTO_DESCR],
        //             [CUSTOMER_DIRECT_REGION_CODE],
        //             [CUSTOMER_DIRECT_REGION_DESCR],
        //             [CUSTOMER_DIRECT_SALES_AREA_CODE],
        //             [CUSTOMER_DIRECT_SALES_AREA_DESCR],
        //             [CUSTOMER_FINAL_CODE],
        //             [CUSTOMER_FINAL_DESCR],
        //             [CUSTOMER_FINAL_TYPE_CODE],
        //             [CUSTOMER_FINAL_TYPE_DESCR],
        //             [CUSTOMER_FINAL_GROUP_CODE],
        //             [CUSTOMER_FINAL_GROUP_DESCR],
        //             [CUSTOMER_FINAL_SHIPTO_CODE],
        //             [CUSTOMER_FINAL_SHIPTO_DESCR],
        //             [CUSTOMER_FINAL_REGION_CODE],
        //             [CUSTOMER_FINAL_REGION_DESCR],
        //             [CUSTOMER_FINAL_SALES_AREA_CODE],
        //             [CUSTOMER_FINAL_SALES_AREA_DESCR],
        //             SUM([NET_REVENUES]) AS [NET_REVENUES],
        //             SUM([NET_QTY_BIBA]) AS [NET_QTY]
        //            FROM [ROYALTY].[dbo].[ROYALTY_SAP_ACT]
        //            WHERE
        //             [PRODUCT_LINE_CURRENT] IN " + PL_List_All + @" AND 
        //             [QUARTER (yyyyQq)] IN " + Quarter_List_All + @"  
        //            GROUP BY
        //             [YEAR (Yyyyy)],
        //             [YEAR (Yyy)],
        //             [QUARTER (yyyyQq)],
        //             [QUARTER (yyQq)],
        //             [MONTH (yyyyMmm)],
        //             [MONTH (yyMmm)],
        //             [GROUP_CODE_ORIGINAL],
        //             [SUBGROUP_CODE_ORIGINAL],
        //             [DIV_CODE_ORIGINAL],
        //             [BU_CODE_ORIGINAL],
        //             [BU_CODE_CURRENT],
        //             [PRODUCT_LINE_ORIGINAL],
        //             [PRODUCT_LINE_CURRENT],
        //             [CP],
        //             [REASON_CODE],
        //             [REASON_DESCR],
        //             [REASON_TYPE],
        //             [REASON_FLAG_QUANTITY],
        //             [CUSTOMER_DIRECT_CODE],
        //             [CUSTOMER_DIRECT_DESCR],
        //             [CUSTOMER_DIRECT_TYPE_CODE],
        //             [CUSTOMER_DIRECT_TYPE_DESCR],
        //             [CUSTOMER_DIRECT_GROUP_CODE],
        //             [CUSTOMER_DIRECT_GROUP_DESCR],
        //             [CUSTOMER_DIRECT_SHIPTO_CODE],
        //             [CUSTOMER_DIRECT_SHIPTO_DESCR],
        //             [CUSTOMER_DIRECT_REGION_CODE],
        //             [CUSTOMER_DIRECT_REGION_DESCR],
        //             [CUSTOMER_DIRECT_SALES_AREA_CODE],
        //             [CUSTOMER_DIRECT_SALES_AREA_DESCR],
        //             [CUSTOMER_FINAL_CODE],
        //             [CUSTOMER_FINAL_DESCR],
        //             [CUSTOMER_FINAL_TYPE_CODE],
        //             [CUSTOMER_FINAL_TYPE_DESCR],
        //             [CUSTOMER_FINAL_GROUP_CODE],
        //             [CUSTOMER_FINAL_GROUP_DESCR],
        //             [CUSTOMER_FINAL_SHIPTO_CODE],
        //             [CUSTOMER_FINAL_SHIPTO_DESCR],
        //             [CUSTOMER_FINAL_REGION_CODE],
        //             [CUSTOMER_FINAL_REGION_DESCR],
        //             [CUSTOMER_FINAL_SALES_AREA_CODE],
        //             [CUSTOMER_FINAL_SALES_AREA_DESCR] ";
        //        SqlDataAdapter SqlAd_List_SapAct = new SqlDataAdapter(SqlString, SqlConn);
        //        SqlAd_List_SapAct.Fill(SapAct_Forecast_AllRules_AllQuarters_Dt);

        //        SqlConn.Close();


        //        SapAct_Forecast_AllRules_AllQuarters_Dt.DefaultView.Sort = " [MONTH (yyyyMmm)] ASC, [PRODUCT_LINE_CURRENT] ASC, CP ASC, [CUSTOMER_FINAL_CODE] ASC  ";
        //        SapAct_Forecast_AllRules_AllQuarters_Dt = SapAct_Forecast_AllRules_AllQuarters_Dt.DefaultView.ToTable();
        //    }
        //    else
        //    {
        //        //SqlConnection SqlConn = new SqlConnection(@"Data Source = AGRCLFRSSQLPR.AGRMFG.STMMFG.COM\SRMPRD; Integrated Security=true; Initial Catalog = ROYALTY; Connection Timeout = 0");

        //        //SqlString = @"
        //        //    SELECT DISTINCT
        //        //        SUBSTRING([DateQuarter],1,4) + 'Q' + SUBSTRING([DateQuarter],5,1) AS [QUARTER (yyyyQq)]
        //        //    FROM [EPM].[dbo].[EPM_SMF]
        //        //    WHERE
        //        //        [VersionVersion] = '" + Plan + "' " + @"
        //        //    ORDER BY
        //        //        SUBSTRING([DateQuarter],1,4) + 'Q' + SUBSTRING([DateQuarter],5,1) ";
        //        //SqlDataAdapter SqlAd_List_Quarter = new SqlDataAdapter(SqlString, SqlConn);
        //        //SqlAd_List_Quarter.Fill(Quarter_Dt);

        //        //SqlConn.Close();


        //        //Quarter_Dt.DefaultView.Sort = "QUARTER (yyyyQq)";
        //        //Quarter_Dt = Quarter_Dt.DefaultView.ToTable();
        //    }

        //}





        //public void Query_Royalty_Cum(
        //    in string Plan,
        //    in string QUARTER,
        //    ref DataTable Royalty_Cum_Dt)
        //{

        //    // Variabili interne
        //    // -----------------------------------
        //    string SqlString = "";



        //    // Estrazione dalla tabella Royalty
        //    // -----------------------------------
        //    Royalty_Cum_Dt.Clear();

        //    if (Plan == "ACTUAL")
        //    {
        //        SqlConnection SqlConn = new SqlConnection(@"Data Source = AGRCLFRSSQLQA.AGRMFG.STMMFG.COM\SRMTST; Integrated Security=true; Initial Catalog = ROYALTY; Connection Timeout = 0");

        //        SqlString = @"
        //            SELECT 
        //                [AGREEMENT],
        //                SUM([NET_REVENUE_LCL])		AS [CUM_NET_REVENUE_LCL],
        //                SUM([NET_REVENUE_USD])		AS [CUM_NET_REVENUE_USD],
        //                SUM([NET_QTY_PCS])			AS [CUM_NET_QTY_PCS],
        //                SUM([ROYALTY_LCL])			AS [CUM_ROYALTY_LCL],
        //                SUM([ROYALTY_USD])			AS [CUM_ROYALTY_USD],
        //                SUM([ROYALTY_PAID_LCL])		AS [CUM_ROYALTY_PAID_LCL],
        //                SUM([ROYALTY_PAID_USD])		AS [CUM_ROYALTY_PAID_USD]
        //            FROM [ROYALTY].[dbo].[ROYALTY]
        //            GROUP BY
        //                [AGREEMENT]
        //            ORDER BY
        //                [AGREEMENT] ";
        //        SqlDataAdapter SqlAd_Royalty_Cum = new SqlDataAdapter(SqlString, SqlConn);
        //        SqlAd_Royalty_Cum.Fill(Royalty_Cum_Dt);

        //        SqlConn.Close();


        //        Royalty_Cum_Dt.DefaultView.Sort = " [AGREEMENT] ASC  ";
        //        Royalty_Cum_Dt = Royalty_Cum_Dt.DefaultView.ToTable();
        //    }
        //    else
        //    {
        //        //
        //    }

        //}




        //public void Query_Exchange_Rate(
        //    in string MODEL_CURRENCY,
        //    in string QUARTER,
        //    in DataTable Exchange_Dt,
        //    ref double EXCHANGE_RATE)
        //{
        //    if (MODEL_CURRENCY == "USD")
        //    {
        //        EXCHANGE_RATE = 1;
        //    }
        //    else
        //    {
        //        DataRow[] Exchange_Dr = Exchange_Dt.Select("[CURRENCY] = '" + MODEL_CURRENCY + "' AND QUARTER (yyyyQq) = '" + QUARTER + "'");
        //        if (Exchange_Dr.Length > 0)
        //        {
        //            EXCHANGE_RATE = Math.Round((double)Exchange_Dr[0]["EXCHANGE_RATE"], 4);

        //            if (EXCHANGE_RATE == 0)
        //            {
        //                EXCHANGE_RATE = 1;
        //            }
        //        }
        //        else
        //        {
        //            EXCHANGE_RATE = 1;
        //        }
        //    }


        //}



        //public void Query_SapAct_Forecast_OneRule_OneQuarter(
        //    in string QUARTER,
        //    in string INITIAL_MONTH_OF_CONTRACT,
        //    in string FINAL_MONTH_OF_CONTRACT,
        //    in string SELECTION_PL_LIST,
        //    in string SELECTION_CP_CONDITION,
        //    in string SELECTION_CP_LIST,
        //    in string SELECTION_CUSTOMER_FINAL_CONDITION,
        //    in string SELECTION_CUSTOMER_FINAL_LIST,
        //    in string SELECTION_CUSTOMER_FINAL_TYPE_CONDITION,
        //    in string SELECTION_CUSTOMER_FINAL_TYPE_LIST,
        //    in string SELECTION_CUSTOMER_FINAL_GROUP_CONDITION,
        //    in string SELECTION_CUSTOMER_FINAL_GROUP_LIST,
        //    in string SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION,
        //    in string SELECTION_CUSTOMER_FINAL_SHIPTO_LIST,
        //    in DataTable SapAct_Forecast_AllRules_AllQuarters_Dt,
        //    ref DataTable SapAct_Forecast_OneRule_OneQuarter_Dt)
        //{

        //    // Internal variables
        //    // -----------------------------------
        //    string WHERE_QUARTER = "";
        //    string WHERE_START_END_MONTH = "";
        //    string WHERE_PL = "";
        //    string WHERE_CP = "";
        //    string WHERE_CUSTOMER_FINAL = "";
        //    string WHERE_CUSTOMER_FINAL_TYPE = "";
        //    string WHERE_CUSTOMER_FINAL_GROUP = "";
        //    string WHERE_CUSTOMER_FINAL_SHIPTO = "";
        //    string SapAct_Forecast_Select = "";

        //    DataRow[] SapAct_Forecast_AllRules_AllQuarters_Dr;



        //    // Filtro della query di SapAct_Forecast - Quarter da elaborare
        //    WHERE_QUARTER = " [QUARTER (yyyyQq)] = '" + QUARTER + "' ";

        //    // Filtro della query di SapAct_Forecast - Data inizio e fine del contratto
        //    WHERE_START_END_MONTH = " [MONTH (yyyyMmm)] >= '" + INITIAL_MONTH_OF_CONTRACT + "' AND [MONTH (yyyyMmm)] <= '" + FINAL_MONTH_OF_CONTRACT + "' ";


        //    // Filtro della query di SapAct_Forecast - PL
        //    if (SELECTION_PL_LIST == "")
        //    {
        //        WHERE_PL = " PRODUCT_LINE_CURRENT LIKE '%' ";
        //    }
        //    else
        //    {
        //        WHERE_PL = " PRODUCT_LINE_CURRENT IN ('" + SELECTION_PL_LIST.Replace(",", "','") + "') ";
        //    }


        //    // Filtro della query di SapAct_Forecast - CP
        //    switch (SELECTION_CP_CONDITION.ToUpper())
        //    {
        //        case "":
        //            WHERE_CP = " CP LIKE '%' ";
        //            break;
        //        case "INCLUDE":
        //            WHERE_CP = " (CP LIKE '" + SELECTION_CP_LIST.Replace(",", "' OR CP LIKE '") + "') ";
        //            break;
        //        case "EXCLUDE":
        //            WHERE_CP = " CP NOT LIKE '" + SELECTION_CP_LIST.Replace(",", "' AND CP NOT LIKE '") + "' ";
        //            break;
        //        default:
        //            WHERE_CP = " CP LIKE '%' ";
        //            break;
        //    }



        //    // Filtro della query di SapAct_Forecast - CUSTOMER_FINAL
        //    switch (SELECTION_CUSTOMER_FINAL_CONDITION.ToUpper())
        //    {
        //        case "":
        //            WHERE_CUSTOMER_FINAL = " CUSTOMER_FINAL_DESCR LIKE '%' ";
        //            break;
        //        case "INCLUDE":
        //            WHERE_CUSTOMER_FINAL = " (CUSTOMER_FINAL_DESCR LIKE '" + SELECTION_CUSTOMER_FINAL_LIST.Replace(",", "' OR CUSTOMER_FINAL_DESCR LIKE '") + "') ";
        //            break;
        //        case "EXCLUDE":
        //            WHERE_CUSTOMER_FINAL = " CUSTOMER_FINAL_DESCR NOT LIKE '" + SELECTION_CUSTOMER_FINAL_LIST.Replace(",", "' AND CUSTOMER_FINAL_DESCR NOT LIKE '") + "' ";
        //            break;
        //        default:
        //            WHERE_CUSTOMER_FINAL = " CUSTOMER_FINAL_DESCR LIKE '%' ";
        //            break;
        //    }




        //    // Filtro della query di SapAct_Forecast - CUSTOMER_FINAL_TYPE
        //    switch (SELECTION_CUSTOMER_FINAL_TYPE_CONDITION.ToUpper())
        //    {
        //        case "":
        //            WHERE_CUSTOMER_FINAL_TYPE = " CUSTOMER_FINAL_TYPE_DESCR LIKE '%' ";
        //            break;
        //        case "INCLUDE":
        //            WHERE_CUSTOMER_FINAL_TYPE = " (CUSTOMER_FINAL_TYPE_DESCR LIKE '" + SELECTION_CUSTOMER_FINAL_TYPE_LIST.Replace(",", "' OR CUSTOMER_FINAL_TYPE_DESCR LIKE '") + "') ";
        //            break;
        //        case "EXCLUDE":
        //            WHERE_CUSTOMER_FINAL_TYPE = " CUSTOMER_FINAL_TYPE_DESCR NOT LIKE '" + SELECTION_CUSTOMER_FINAL_TYPE_LIST.Replace(",", "' AND CUSTOMER_FINAL_TYPE_DESCR NOT LIKE '") + "' ";
        //            break;
        //        default:
        //            WHERE_CUSTOMER_FINAL_TYPE = " CUSTOMER_FINAL_TYPE_DESCR LIKE '%' ";
        //            break;
        //    }




        //    // Filtro della query di SapAct_Forecast - CUSTOMER_FINAL_GROUP
        //    switch (SELECTION_CUSTOMER_FINAL_GROUP_CONDITION.ToUpper())
        //    {
        //        case "":
        //            WHERE_CUSTOMER_FINAL_GROUP = " CUSTOMER_FINAL_GROUP_DESCR LIKE '%' ";
        //            break;
        //        case "INCLUDE":
        //            WHERE_CUSTOMER_FINAL_GROUP = " (CUSTOMER_FINAL_GROUP_DESCR LIKE '" + SELECTION_CUSTOMER_FINAL_GROUP_LIST.Replace(",", "' OR CUSTOMER_FINAL_GROUP_DESCR LIKE '") + "') ";
        //            break;
        //        case "EXCLUDE":
        //            WHERE_CUSTOMER_FINAL_GROUP = " CUSTOMER_FINAL_GROUP_DESCR NOT LIKE '" + SELECTION_CUSTOMER_FINAL_GROUP_LIST.Replace(",", "' AND CUSTOMER_FINAL_GROUP_DESCR NOT LIKE '") + "' ";
        //            break;
        //        default:
        //            WHERE_CUSTOMER_FINAL_GROUP = " CUSTOMER_FINAL_GROUP_DESCR LIKE '%' ";
        //            break;
        //    }




        //    // Filtro della query di SapAct_Forecast - CUSTOMER_FINAL_SHIPTO
        //    switch (SELECTION_CUSTOMER_FINAL_SHIPTO_CONDITION.ToUpper())
        //    {
        //        case "":
        //            WHERE_CUSTOMER_FINAL_SHIPTO = " CUSTOMER_FINAL_SHIPTO_DESCR LIKE '%' ";
        //            break;
        //        case "INCLUDE":
        //            WHERE_CUSTOMER_FINAL_SHIPTO = " (CUSTOMER_FINAL_SHIPTO_DESCR LIKE '" + SELECTION_CUSTOMER_FINAL_SHIPTO_LIST.Replace(",", "' OR CUSTOMER_FINAL_SHIPTO_DESCR LIKE '") + "') ";
        //            break;
        //        case "EXCLUDE":
        //            WHERE_CUSTOMER_FINAL_SHIPTO = " CUSTOMER_FINAL_SHIPTO_DESCR NOT LIKE '" + SELECTION_CUSTOMER_FINAL_SHIPTO_LIST.Replace(",", "' AND CUSTOMER_FINAL_SHIPTO_DESCR NOT LIKE '") + "' ";
        //            break;
        //        default:
        //            WHERE_CUSTOMER_FINAL_SHIPTO = " CUSTOMER_FINAL_SHIPTO_DESCR LIKE '%' ";
        //            break;
        //    }

        //    SapAct_Forecast_Select = WHERE_QUARTER + " AND " +
        //        WHERE_START_END_MONTH + " AND " +
        //        WHERE_PL + " AND " +
        //        WHERE_CP + " AND " +
        //        WHERE_CUSTOMER_FINAL + " AND " +
        //        WHERE_CUSTOMER_FINAL_TYPE + " AND " +
        //        WHERE_CUSTOMER_FINAL_GROUP + " AND " +
        //        WHERE_CUSTOMER_FINAL_SHIPTO;

        //    // Estrazione
        //    SapAct_Forecast_AllRules_AllQuarters_Dr = SapAct_Forecast_AllRules_AllQuarters_Dt.Select(SapAct_Forecast_Select);

        //    SapAct_Forecast_OneRule_OneQuarter_Dt.Clear();
        //    foreach (DataRow Dr in SapAct_Forecast_AllRules_AllQuarters_Dr)
        //    {
        //        SapAct_Forecast_OneRule_OneQuarter_Dt.ImportRow(Dr);
        //    }

        //    SapAct_Forecast_OneRule_OneQuarter_Dt.DefaultView.Sort = " [MONTH (yyyyMmm)] ASC, PRODUCT_LINE_CURRENT ASC, CP ASC, CUSTOMER_FINAL_CODE ASC ";
        //    SapAct_Forecast_OneRule_OneQuarter_Dt = SapAct_Forecast_OneRule_OneQuarter_Dt.DefaultView.ToTable();


        //}




        //public void Append_In_Royalty_OneRule_OneQuarter_Dt(
        //    in DataTable SapAct_Forecast_OneRule_OneQuarter_Dt,
        //    in string AGREEMENT,
        //    in string MODEL_CURRENCY,
        //    in double EXCHANGE_RATE,
        //    ref DataTable Royalty_OneRule_OneQuarter_Dt)
        //{

        //    Royalty_OneRule_OneQuarter_Dt.Clear();

        //    for (int i = 0; i <= SapAct_Forecast_OneRule_OneQuarter_Dt.Rows.Count - 1; i++)
        //    {
        //        DataRow Dr = Royalty_OneRule_OneQuarter_Dt.NewRow();

        //        Dr["ROYALTY_ID"] = "";
        //        Dr["YEAR (Yyyyy)"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["YEAR (Yyyyy)"];
        //        Dr["YEAR (Yyy)"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["YEAR (Yyy)"];
        //        Dr["QUARTER (yyyyQq)"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["QUARTER (yyyyQq)"];
        //        Dr["QUARTER (yyQq)"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["QUARTER (yyQq)"];
        //        Dr["MONTH (yyyyMmm)"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["MONTH (yyyyMmm)"];
        //        Dr["MONTH (yyMmm)"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["MONTH (yyMmm)"];
        //        Dr["GROUP_CODE_ORIGINAL"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["GROUP_CODE_ORIGINAL"];
        //        Dr["SUB_GROUP_CODE_ORIGINAL"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["SUB_GROUP_CODE_ORIGINAL"];
        //        Dr["DIV_CODE_ORIGINAL"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["DIV_CODE_ORIGINAL"];
        //        Dr["BU_CODE_ORIGINAL"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["BU_CODE_ORIGINAL"];
        //        Dr["BU_CODE_CURRENT"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["BU_CODE_CURRENT"];
        //        Dr["DATA_SOURCE"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["DATA_SOURCE"];
        //        Dr["PRODUCT_LINE_ORIGINAL"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["PRODUCT_LINE_ORIGINAL"];
        //        Dr["PRODUCT_LINE_CURRENT"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["PRODUCT_LINE_CURRENT"];
        //        Dr["CP"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["CP"];
        //        Dr["REASON_CODE"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["REASON_CODE"];
        //        Dr["REASON_DESCR"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["REASON_DESCR"];
        //        Dr["REASON_TYPE"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["REASON_TYPE"];
        //        Dr["REASON_FLAG_QUANTITY"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["REASON_FLAG_QUANTITY"];
        //        Dr["CUSTOMER_FINAL_CODE"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["CUSTOMER_FINAL_CODE"];
        //        Dr["CUSTOMER_FINAL_DESCR"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["CUSTOMER_FINAL_DESCR"];
        //        Dr["CUSTOMER_FINAL_TYPE_CODE"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["CUSTOMER_FINAL_TYPE_CODE"];
        //        Dr["CUSTOMER_FINAL_TYPE_DESCR"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["CUSTOMER_FINAL_TYPE_DESCR"];
        //        Dr["CUSTOMER_FINAL_GROUP_CODE"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["CUSTOMER_FINAL_GROUP_CODE"];
        //        Dr["CUSTOMER_FINAL_GROUP_DESCR"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["CUSTOMER_FINAL_GROUP_DESCR"];
        //        Dr["CUSTOMER_FINAL_SHIPTO_CODE"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["CUSTOMER_FINAL_SHIPTO_CODE"];
        //        Dr["CUSTOMER_FINAL_SHIPTO_DESCR"] = SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["CUSTOMER_FINAL_SHIPTO_DESCR"];
        //        Dr["AGREEMENT"] = AGREEMENT;
        //        Dr["CONDITION"] = "";
        //        Dr["LCL_CURRENCY"] = MODEL_CURRENCY;
        //        Dr["EXCHANGE_RATE"] = Math.Round(EXCHANGE_RATE, 4);

        //        if (EXCHANGE_RATE != 0)
        //        {
        //            Dr["NET_REVENUE_LCL"] = Math.Round(Convert.ToDouble(SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["NET_REVENUE_USD"]) / EXCHANGE_RATE, 2);

        //        }
        //        else
        //        {
        //            Dr["NET_REVENUE_LCL"] = Math.Round(Convert.ToDouble(SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["NET_REVENUE_USD"]), 2);
        //        };

        //        Dr["CUM_NET_REVENUE_LCL"] = 0;
        //        Dr["NET_REVENUE_USD"] = Math.Round(Convert.ToDouble(SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["NET_REVENUE_USD"]), 2);
        //        Dr["CUM_NET_REVENUE_USD"] = 0;
        //        Dr["NET_QTY_PCS"] = Math.Round(Convert.ToDouble(SapAct_Forecast_OneRule_OneQuarter_Dt.Rows[i]["NET_QTY_PCS"]), 0);
        //        Dr["CUM_NET_QTY_PCS"] = 0;
        //        Dr["ROYALTY_LCL"] = 0;
        //        Dr["CUM_ROYALTY_LCL"] = 0;
        //        Dr["ROYALTY_USD"] = 0;
        //        Dr["CUM_ROYALTY_USD"] = 0;
        //        Dr["ROYALTY_PAID_LCL"] = 0;
        //        Dr["CUM_ROYALTY_PAID_LCL"] = 0;
        //        Dr["ROYALTY_PAID_USD"] = 0;
        //        Dr["CUM_ROYALTY_PAID_USD"] = 0;

        //        Royalty_OneRule_OneQuarter_Dt.Rows.Add(Dr);

        //    }
        //}


        //public void Init_Cumulative_Royalty_OneRule_OneQuarter(
        //    in string Plan,
        //    in string QUARTER,
        //    in string AGREEMENT,
        //    in string INITIAL_MONTH_OF_CONTRACT,
        //    in string FINAL_MONTH_OF_CONTRACT,
        //    in string MONTH_OF_INITIALIZATION,
        //    in double CUM_NET_QTY_PCS,
        //    in double CUM_NET_REVENUE_LCL,
        //    in double CUM_NET_REVENUE_USD,
        //    in double CUM_ROYALTY_LCL,
        //    in double CUM_ROYALTY_USD,
        //    in double CUM_ROYALTY_PAID_LCL,
        //    in double CUM_ROYALTY_PAID_USD,
        //    in DataTable Royalty_AllRule_OneQuarter_Dt,
        //    in DataTable Royalty_Cum_Dt,
        //    ref DataTable Royalty_OneRule_OneQuarter_Dt)
        //{

        //    // Variabili interne
        //    // -----------------------------------
        //    string MONTH_0 = "";
        //    int MONTH_0_INT = 0;
        //    int MONTH_OF_INITIALIZATION_INT = 0;
        //    int LastRow = 0;

        //    DataRow[] Royalty_Cum_Dr;



        //    // ACTUAL
        //    // -----------------------------------
        //    if (Plan == "ACTUAL")
        //    {
        //        // Estrazione de Royalty_Cum
        //        Royalty_Cum_Dr = Royalty_Cum_Dt.Select("[AGREEMENT] = '" + AGREEMENT + "'");

        //        // Se non ci sono record, lasciamo stare
        //        if (Royalty_OneRule_OneQuarter_Dt.Rows.Count != 0)
        //        {
        //            MONTH_0 = (string)Royalty_OneRule_OneQuarter_Dt.Rows[0]["MONTH (yyyyMmm)"];
        //            MONTH_0_INT = Convert.ToInt32(MONTH_0.Substring(0, 4) + MONTH_0.Substring(5, 2));
        //            MONTH_OF_INITIALIZATION_INT = Convert.ToInt32(MONTH_OF_INITIALIZATION.Substring(0, 4) + MONTH_OF_INITIALIZATION.Substring(5, 2));

        //            // Il mese del primo record e' minore di quello di inizializzazione
        //            if (MONTH_0_INT < MONTH_OF_INITIALIZATION_INT)
        //            {
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_NET_QTY_PCS"] = 0;
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_NET_REVENUE_LCL"] = 0;
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_NET_REVENUE_USD"] = 0;
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_LCL"] = 0;
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_USD"] = 0;
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_PAID_LCL"] = 0;
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_PAID_USD"] = 0;
        //            }
        //            // Il mese del primo record e' uguale a quello di inizializzazione
        //            else if (MONTH_0_INT == MONTH_OF_INITIALIZATION_INT)
        //            {
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_NET_QTY_PCS"] = Math.Round(CUM_NET_QTY_PCS + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["NET_QTY_PCS"], 0);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_NET_REVENUE_LCL"] = Math.Round(CUM_NET_REVENUE_LCL + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["NET_REVENUE_LCL"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_NET_REVENUE_USD"] = Math.Round(CUM_NET_REVENUE_USD + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["NET_REVENUE_USD"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_LCL"] = Math.Round(CUM_ROYALTY_LCL + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["ROYALTY_LCL"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_USD"] = Math.Round(CUM_ROYALTY_USD + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["ROYALTY_USD"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_PAID_LCL"] = Math.Round(CUM_ROYALTY_PAID_LCL + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["ROYALTY_PAID_LCL"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_PAID_USD"] = Math.Round(CUM_ROYALTY_PAID_USD + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["ROYALTY_PAID_USD"], 2);
        //            }
        //            // Se il mese e' piu' grande, allora vado a vedere se ho gia' elabora qualcosa in questo quarter e prendo l'ultimo record
        //            else if (Royalty_AllRule_OneQuarter_Dt.Rows.Count != 0)
        //            {
        //                LastRow = Royalty_AllRule_OneQuarter_Dt.Rows.Count - 1;
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_NET_QTY_PCS"] = Math.Round((double)Royalty_AllRule_OneQuarter_Dt.Rows[LastRow]["CUM_NET_QTY_PCS"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["NET_QTY_PCS"], 0);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_NET_REVENUE_LCL"] = Math.Round((double)Royalty_AllRule_OneQuarter_Dt.Rows[LastRow]["CUM_NET_REVENUE_LCL"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["NET_REVENUE_LCL"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_NET_REVENUE_USD"] = Math.Round((double)Royalty_AllRule_OneQuarter_Dt.Rows[LastRow]["CUM_NET_REVENUE_USD"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["NET_REVENUE_USD"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_LCL"] = Math.Round((double)Royalty_AllRule_OneQuarter_Dt.Rows[LastRow]["CUM_ROYALTY_LCL"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["ROYALTY_LCL"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_USD"] = Math.Round((double)Royalty_AllRule_OneQuarter_Dt.Rows[LastRow]["CUM_ROYALTY_USD"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["ROYALTY_USD"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_PAID_LCL"] = Math.Round((double)Royalty_AllRule_OneQuarter_Dt.Rows[LastRow]["CUM_ROYALTY_PAID_LCL"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["ROYALTY_PAID_LCL"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_PAID_USD"] = Math.Round((double)Royalty_AllRule_OneQuarter_Dt.Rows[LastRow]["CUM_ROYALTY_PAID_USD"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["ROYALTY_PAID_USD"], 2);
        //            }
        //            // Cerco nell'ultimo record dei quarter precedenti
        //            else if (Royalty_Cum_Dr.Length > 0) 
        //            {
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_NET_QTY_PCS"] = Math.Round((double)Royalty_Cum_Dr[0]["CUM_NET_QTY_PCS"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["NET_QTY_PCS"], 0);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_NET_REVENUE_LCL"] = Math.Round((double)Royalty_Cum_Dr[0]["CUM_NET_REVENUE_LCL"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["NET_REVENUE_LCL"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_NET_REVENUE_USD"] = Math.Round((double)Royalty_Cum_Dr[0]["CUM_NET_REVENUE_USD"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["NET_REVENUE_USD"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_LCL"] = Math.Round((double)Royalty_Cum_Dr[0]["CUM_ROYALTY_LCL"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["ROYALTY_LCL"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_USD"] = Math.Round((double)Royalty_Cum_Dr[0]["CUM_ROYALTY_USD"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["ROYALTY_USD"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_PAID_LCL"] = Math.Round((double)Royalty_Cum_Dr[0]["CUM_ROYALTY_PAID_LCL"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["ROYALTY_PAID_LCL"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_PAID_USD"] = Math.Round((double)Royalty_Cum_Dr[0]["CUM_ROYALTY_PAID_USD"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["ROYALTY_PAID_USD"], 2);
        //            }
        //            // Non c'e' pregresso
        //            else
        //            {
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_NET_QTY_PCS"] = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["NET_QTY_PCS"], 0);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_NET_REVENUE_LCL"] = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["NET_REVENUE_LCL"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_NET_REVENUE_USD"] = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["NET_REVENUE_USD"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_LCL"] = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["ROYALTY_LCL"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_USD"] = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["ROYALTY_USD"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_PAID_LCL"] = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["ROYALTY_PAID_LCL"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[0]["CUM_ROYALTY_PAID_USD"] = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Rows[0]["ROYALTY_PAID_USD"], 2);
        //            }

        //            // Calcola i dati cumulativi del resto del datatable
        //            for (int i = 1; i <= Royalty_OneRule_OneQuarter_Dt.Rows.Count - 1; i++)
        //            {
        //                Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_QTY_PCS"] = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Rows[i - 1]["CUM_NET_QTY_PCS"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_QTY_PCS"], 0);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_REVENUE_LCL"] = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Rows[i - 1]["CUM_NET_REVENUE_LCL"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_REVENUE_LCL"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_NET_REVENUE_USD"] = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Rows[i - 1]["CUM_NET_REVENUE_USD"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[i]["NET_REVENUE_USD"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_ROYALTY_LCL"] = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Rows[i - 1]["CUM_ROYALTY_LCL"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[i]["ROYALTY_LCL"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_ROYALTY_USD"] = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Rows[i - 1]["CUM_ROYALTY_USD"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[i]["ROYALTY_USD"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_ROYALTY_PAID_LCL"] = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Rows[i - 1]["CUM_ROYALTY_PAID_LCL"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[i]["ROYALTY_PAID_LCL"], 2);
        //                Royalty_OneRule_OneQuarter_Dt.Rows[i]["CUM_ROYALTY_PAID_USD"] = Math.Round((double)Royalty_OneRule_OneQuarter_Dt.Rows[i - 1]["CUM_ROYALTY_PAID_USD"] + (double)Royalty_OneRule_OneQuarter_Dt.Rows[i]["ROYALTY_PAID_USD"], 2);
        //            }



        //        }
        //    }
        //    else
        //    // FORECAST
        //    // -----------------------------------
        //    {

        //    }



        //}






        //public void Elaborate_Royalty_OneRule_OneQuarter(
        //    in string MODEL_TYPE,
        //    ref DataTable RuleOne_Dt,
        //    ref DataTable Royalty_OneRule_OneQuarter_Dt)
        //{

        //    //Dts.Events.FireInformation(0, "********", QUARTER + " - " + Id_Agreement + " - " + Agreement + " - " + Model + " - " + PL_String + " - " + CP_String + " - " + Customer_String + " (" + Royalty_QA_Dt.Rows.Count + ")", "", 0, ref fireAgain);

        //    switch (MODEL_TYPE)
        //    {
        //        case "M01_SLOTqty_RATEqty_MINMAXrev":
        //            M01_SLOTqty_RATEqty_MINMAXrev(ref RuleOne_Dt, ref Royalty_OneRule_OneQuarter_Dt);
        //            break;

        //        case "M02_SLOTrev_RATErev_MINMAXqty":
        //            M02_SLOTrev_RATErev_MINMAXqty(ref RuleOne_Dt, ref Royalty_OneRule_OneQuarter_Dt);
        //            break;

        //        case "M03_SLOTqty_RATErev_MINMAXqty":
        //            M03_SLOTqty_RATErev_MINMAXqty(ref RuleOne_Dt, ref Royalty_OneRule_OneQuarter_Dt);
        //            break;

        //        case "M04_SLOTrev_RATErev_MINMAXasp":
        //            M04_SLOTrev_RATErev_MINMAXasp(ref RuleOne_Dt, ref Royalty_OneRule_OneQuarter_Dt);
        //            break;

        //        case "M05_SLOTrev_RATEqty_MINMAXrev":
        //            M05_SLOTrev_RATEqty_MINMAXrev(ref RuleOne_Dt, ref Royalty_OneRule_OneQuarter_Dt);
        //            break;

        //        case "M06_SLOTasp_RATErev_MINMAXno":
        //            M06_SLOTasp_RATErev_MINMAXno(ref RuleOne_Dt, ref Royalty_OneRule_OneQuarter_Dt);
        //            break;

        //        case "M07_SLOTqty_RATErev_MINasp_RATEadd":
        //            M07_SLOTqty_RATErev_MINasp_RATEadd(ref RuleOne_Dt, ref Royalty_OneRule_OneQuarter_Dt);
        //            break;

        //        case "M08_SLOTrev_RATErev_MINMAXcp":
        //            M08_SLOTrev_RATErev_MINMAXcp(ref RuleOne_Dt, ref Royalty_OneRule_OneQuarter_Dt);
        //            break;

        //        case "M09_SLOTqty_RATErev_MINMAXcp":
        //            M09_SLOTqty_RATErev_MINMAXcp(ref RuleOne_Dt, ref Royalty_OneRule_OneQuarter_Dt);
        //            break;

        //        case "M10_SLOTrev_RATErev_MINMAXcpcust":
        //            M10_SLOTrev_RATErev_MINMAXcpcust(ref RuleOne_Dt, ref Royalty_OneRule_OneQuarter_Dt);
        //            break;

        //        default:
        //            //Dts.Events.FireInformation(0, "******** ERROR MODELLO NON ESISTE ********", Qtr2 + " - " + Id_Agreement + " - " + Agreement + " - " + Model + " - " + PL_String + " - " + CP_String + " - " + Customer_String + " (" + Royalty_QA_Dt.Rows.Count + ")", "", 0, ref fireAgain);
        //            break;
        //    }

        //}




        //public void Condition_By_Qty(
        //            in double Qty_Start,
        //            in double Qty_End,
        //            in double SLOT01_START,
        //            in double SLOT01_END,
        //            in string SLOT01_MESSAGE,
        //            in double SLOT02_START,
        //            in double SLOT02_END,
        //            in string SLOT02_MESSAGE,
        //            in double SLOT03_START,
        //            in double SLOT03_END,
        //            in string SLOT03_MESSAGE,
        //            in double SLOT04_START,
        //            in double SLOT04_END,
        //            in string SLOT04_MESSAGE,
        //            in double SLOT05_START,
        //            in double SLOT05_END,
        //            in string SLOT05_MESSAGE,
        //            in double SLOT06_START,
        //            in double SLOT06_END,
        //            in string SLOT06_MESSAGE,
        //            in double SLOT07_START,
        //            in double SLOT07_END,
        //            in string SLOT07_MESSAGE,
        //            in double SLOT08_START,
        //            in double SLOT08_END,
        //            in string SLOT08_MESSAGE,
        //            in double SLOT09_START,
        //            in double SLOT09_END,
        //            in string SLOT09_MESSAGE,
        //            in double SLOT10_START,
        //            in double SLOT10_END,
        //            in string SLOT10_MESSAGE,
        //            ref string Condition_Start,
        //            ref string Condition_End,
        //            ref string Condition
        //            )
        //{
        //    // Condition_Start
        //    if (Qty_Start >= SLOT01_START && Qty_Start < SLOT01_END) { Condition_Start = SLOT01_MESSAGE; }
        //    else if (Qty_Start >= SLOT02_START && Qty_Start < SLOT02_END) { Condition_Start = SLOT02_MESSAGE; }
        //    else if (Qty_Start >= SLOT03_START && Qty_Start < SLOT03_END) { Condition_Start = SLOT03_MESSAGE; }
        //    else if (Qty_Start >= SLOT04_START && Qty_Start < SLOT04_END) { Condition_Start = SLOT04_MESSAGE; }
        //    else if (Qty_Start >= SLOT05_START && Qty_Start < SLOT05_END) { Condition_Start = SLOT05_MESSAGE; }
        //    else if (Qty_Start >= SLOT06_START && Qty_Start < SLOT06_END) { Condition_Start = SLOT06_MESSAGE; }
        //    else if (Qty_Start >= SLOT07_START && Qty_Start < SLOT07_END) { Condition_Start = SLOT07_MESSAGE; }
        //    else if (Qty_Start >= SLOT08_START && Qty_Start < SLOT08_END) { Condition_Start = SLOT08_MESSAGE; }
        //    else if (Qty_Start >= SLOT09_START && Qty_Start < SLOT09_END) { Condition_Start = SLOT09_MESSAGE; }
        //    else if (Qty_Start >= SLOT10_START && Qty_Start < SLOT10_END) { Condition_Start = SLOT10_MESSAGE; }
        //    else { Condition_Start = "ERR"; }

        //    // Condition_End
        //    if (Qty_End >= SLOT01_START && Qty_End < SLOT01_END) { Condition_End = SLOT01_MESSAGE; }
        //    else if (Qty_End >= SLOT02_START && Qty_End < SLOT02_END) { Condition_End = SLOT02_MESSAGE; }
        //    else if (Qty_End >= SLOT03_START && Qty_End < SLOT03_END) { Condition_End = SLOT03_MESSAGE; }
        //    else if (Qty_End >= SLOT04_START && Qty_End < SLOT04_END) { Condition_End = SLOT04_MESSAGE; }
        //    else if (Qty_End >= SLOT05_START && Qty_End < SLOT05_END) { Condition_End = SLOT05_MESSAGE; }
        //    else if (Qty_End >= SLOT06_START && Qty_End < SLOT06_END) { Condition_End = SLOT06_MESSAGE; }
        //    else if (Qty_End >= SLOT07_START && Qty_End < SLOT07_END) { Condition_End = SLOT07_MESSAGE; }
        //    else if (Qty_End >= SLOT08_START && Qty_End < SLOT08_END) { Condition_End = SLOT08_MESSAGE; }
        //    else if (Qty_End >= SLOT09_START && Qty_End < SLOT09_END) { Condition_End = SLOT09_MESSAGE; }
        //    else if (Qty_End >= SLOT10_START && Qty_End < SLOT10_END) { Condition_End = SLOT10_MESSAGE; }
        //    else { Condition_End = "ERR"; }

        //    // Condition
        //    if (string.Equals(Condition_Start, Condition_End))
        //    {
        //        Condition = Condition_Start;
        //    }
        //    else
        //    {
        //        Condition = Condition_Start + " -> " + Condition_End;
        //    }
        //}




        //public void Condition_By_Rev(
        //            in double RevLcl_Start,
        //            in double RevLcl_End,
        //            in double SLOT01_START,
        //            in double SLOT01_END,
        //            in string SLOT01_MESSAGE,
        //            in double SLOT02_START,
        //            in double SLOT02_END,
        //            in string SLOT02_MESSAGE,
        //            in double SLOT03_START,
        //            in double SLOT03_END,
        //            in string SLOT03_MESSAGE,
        //            in double SLOT04_START,
        //            in double SLOT04_END,
        //            in string SLOT04_MESSAGE,
        //            in double SLOT05_START,
        //            in double SLOT05_END,
        //            in string SLOT05_MESSAGE,
        //            in double SLOT06_START,
        //            in double SLOT06_END,
        //            in string SLOT06_MESSAGE,
        //            in double SLOT07_START,
        //            in double SLOT07_END,
        //            in string SLOT07_MESSAGE,
        //            in double SLOT08_START,
        //            in double SLOT08_END,
        //            in string SLOT08_MESSAGE,
        //            in double SLOT09_START,
        //            in double SLOT09_END,
        //            in string SLOT09_MESSAGE,
        //            in double SLOT10_START,
        //            in double SLOT10_END,
        //            in string SLOT10_MESSAGE,
        //            ref string Condition_Start,
        //            ref string Condition_End,
        //            ref string Condition
        //            )
        //{
        //    // Condition_Start
        //    if (RevLcl_Start >= SLOT01_START && RevLcl_Start < SLOT01_END) { Condition_Start = SLOT01_MESSAGE; }
        //    else if (RevLcl_Start >= SLOT02_START && RevLcl_Start < SLOT02_END) { Condition_Start = SLOT02_MESSAGE; }
        //    else if (RevLcl_Start >= SLOT03_START && RevLcl_Start < SLOT03_END) { Condition_Start = SLOT03_MESSAGE; }
        //    else if (RevLcl_Start >= SLOT04_START && RevLcl_Start < SLOT04_END) { Condition_Start = SLOT04_MESSAGE; }
        //    else if (RevLcl_Start >= SLOT05_START && RevLcl_Start < SLOT05_END) { Condition_Start = SLOT05_MESSAGE; }
        //    else if (RevLcl_Start >= SLOT06_START && RevLcl_Start < SLOT06_END) { Condition_Start = SLOT06_MESSAGE; }
        //    else if (RevLcl_Start >= SLOT07_START && RevLcl_Start < SLOT07_END) { Condition_Start = SLOT07_MESSAGE; }
        //    else if (RevLcl_Start >= SLOT08_START && RevLcl_Start < SLOT08_END) { Condition_Start = SLOT08_MESSAGE; }
        //    else if (RevLcl_Start >= SLOT09_START && RevLcl_Start < SLOT09_END) { Condition_Start = SLOT09_MESSAGE; }
        //    else if (RevLcl_Start >= SLOT10_START && RevLcl_Start < SLOT10_END) { Condition_Start = SLOT10_MESSAGE; }
        //    else { Condition_Start = "ERR"; }

        //    // Condition_End
        //    if (RevLcl_End >= SLOT01_START && RevLcl_End < SLOT01_END) { Condition_End = SLOT01_MESSAGE; }
        //    else if (RevLcl_End >= SLOT02_START && RevLcl_End < SLOT02_END) { Condition_End = SLOT02_MESSAGE; }
        //    else if (RevLcl_End >= SLOT03_START && RevLcl_End < SLOT03_END) { Condition_End = SLOT03_MESSAGE; }
        //    else if (RevLcl_End >= SLOT04_START && RevLcl_End < SLOT04_END) { Condition_End = SLOT04_MESSAGE; }
        //    else if (RevLcl_End >= SLOT05_START && RevLcl_End < SLOT05_END) { Condition_End = SLOT05_MESSAGE; }
        //    else if (RevLcl_End >= SLOT06_START && RevLcl_End < SLOT06_END) { Condition_End = SLOT06_MESSAGE; }
        //    else if (RevLcl_End >= SLOT07_START && RevLcl_End < SLOT07_END) { Condition_End = SLOT07_MESSAGE; }
        //    else if (RevLcl_End >= SLOT08_START && RevLcl_End < SLOT08_END) { Condition_End = SLOT08_MESSAGE; }
        //    else if (RevLcl_End >= SLOT09_START && RevLcl_End < SLOT09_END) { Condition_End = SLOT09_MESSAGE; }
        //    else if (RevLcl_End >= SLOT10_START && RevLcl_End < SLOT10_END) { Condition_End = SLOT10_MESSAGE; }
        //    else { Condition_End = "ERR"; }

        //    // Condition
        //    if (string.Equals(Condition_Start, Condition_End))
        //    {
        //        Condition = Condition_Start;
        //    }
        //    else
        //    {
        //        Condition = Condition_Start + " -> " + Condition_End;
        //    }
        //}





        //public void Condition_By_ASP(
        //            in double ASPLcl_TOT,
        //            in double SLOT01_START,
        //            in double SLOT01_END,
        //            in string SLOT01_MESSAGE,
        //            in double SLOT02_START,
        //            in double SLOT02_END,
        //            in string SLOT02_MESSAGE,
        //            in double SLOT03_START,
        //            in double SLOT03_END,
        //            in string SLOT03_MESSAGE,
        //            in double SLOT04_START,
        //            in double SLOT04_END,
        //            in string SLOT04_MESSAGE,
        //            in double SLOT05_START,
        //            in double SLOT05_END,
        //            in string SLOT05_MESSAGE,
        //            in double SLOT06_START,
        //            in double SLOT06_END,
        //            in string SLOT06_MESSAGE,
        //            in double SLOT07_START,
        //            in double SLOT07_END,
        //            in string SLOT07_MESSAGE,
        //            in double SLOT08_START,
        //            in double SLOT08_END,
        //            in string SLOT08_MESSAGE,
        //            in double SLOT09_START,
        //            in double SLOT09_END,
        //            in string SLOT09_MESSAGE,
        //            in double SLOT10_START,
        //            in double SLOT10_END,
        //            in string SLOT10_MESSAGE,
        //            ref string Condition
        //            )
        //{
        //    // Condition
        //    if (ASPLcl_TOT >= SLOT01_START && ASPLcl_TOT < SLOT01_END) { Condition = SLOT01_MESSAGE; }
        //    else if (ASPLcl_TOT >= SLOT02_START && ASPLcl_TOT < SLOT02_END) { Condition = SLOT02_MESSAGE; }
        //    else if (ASPLcl_TOT >= SLOT03_START && ASPLcl_TOT < SLOT03_END) { Condition = SLOT03_MESSAGE; }
        //    else if (ASPLcl_TOT >= SLOT04_START && ASPLcl_TOT < SLOT04_END) { Condition = SLOT04_MESSAGE; }
        //    else if (ASPLcl_TOT >= SLOT05_START && ASPLcl_TOT < SLOT05_END) { Condition = SLOT05_MESSAGE; }
        //    else if (ASPLcl_TOT >= SLOT06_START && ASPLcl_TOT < SLOT06_END) { Condition = SLOT06_MESSAGE; }
        //    else if (ASPLcl_TOT >= SLOT07_START && ASPLcl_TOT < SLOT07_END) { Condition = SLOT07_MESSAGE; }
        //    else if (ASPLcl_TOT >= SLOT08_START && ASPLcl_TOT < SLOT08_END) { Condition = SLOT08_MESSAGE; }
        //    else if (ASPLcl_TOT >= SLOT09_START && ASPLcl_TOT < SLOT09_END) { Condition = SLOT09_MESSAGE; }
        //    else if (ASPLcl_TOT >= SLOT10_START && ASPLcl_TOT < SLOT10_END) { Condition = SLOT10_MESSAGE; }
        //    else { Condition = "ERR"; }

        //}







        //public void Quantity_And_Revenue_By_Qty(
        //            in double SLOT01_START,
        //            in double SLOT01_END,
        //            in double SLOT02_START,
        //            in double SLOT02_END,
        //            in double SLOT03_START,
        //            in double SLOT03_END,
        //            in double SLOT04_START,
        //            in double SLOT04_END,
        //            in double SLOT05_START,
        //            in double SLOT05_END,
        //            in double SLOT06_START,
        //            in double SLOT06_END,
        //            in double SLOT07_START,
        //            in double SLOT07_END,
        //            in double SLOT08_START,
        //            in double SLOT08_END,
        //            in double SLOT09_START,
        //            in double SLOT09_END,
        //            in double SLOT10_START,
        //            in double SLOT10_END,
        //            in double Qty,
        //            in double Qty_Start,
        //            in double Qty_End,
        //            ref double Qty_01,
        //            ref double Qty_02,
        //            ref double Qty_03,
        //            ref double Qty_04,
        //            ref double Qty_05,
        //            ref double Qty_06,
        //            ref double Qty_07,
        //            ref double Qty_08,
        //            ref double Qty_09,
        //            ref double Qty_10,
        //            ref double RevLcl,
        //            ref double RevLcl_End,
        //            ref double RevLcl_Start,
        //            ref double RevLcl_01,
        //            ref double RevLcl_02,
        //            ref double RevLcl_03,
        //            ref double RevLcl_04,
        //            ref double RevLcl_05,
        //            ref double RevLcl_06,
        //            ref double RevLcl_07,
        //            ref double RevLcl_08,
        //            ref double RevLcl_09,
        //            ref double RevLcl_10)
        //{

        //    // Variabili interne
        //    // -----------------------------------
        //    bool Flag_01 = false;
        //    bool Flag_02 = false;
        //    bool Flag_03 = false;
        //    bool Flag_04 = false;
        //    bool Flag_05 = false;
        //    bool Flag_06 = false;
        //    bool Flag_07 = false;
        //    bool Flag_08 = false;
        //    bool Flag_09 = false;
        //    bool Flag_10 = false;


        //    // Flag
        //    // -----------------------------------
        //    if ((Qty_Start >= SLOT01_START && Qty_Start < SLOT01_END) || (Qty_End >= SLOT01_START && Qty_End < SLOT01_END)) { Flag_01 = true; } else { Flag_01 = false; }
        //    if ((Qty_Start >= SLOT02_START && Qty_Start < SLOT02_END) || (Qty_End >= SLOT02_START && Qty_End < SLOT02_END)) { Flag_02 = true; } else { Flag_02 = false; }
        //    if ((Qty_Start >= SLOT03_START && Qty_Start < SLOT03_END) || (Qty_End >= SLOT03_START && Qty_End < SLOT03_END)) { Flag_03 = true; } else { Flag_03 = false; }
        //    if ((Qty_Start >= SLOT04_START && Qty_Start < SLOT04_END) || (Qty_End >= SLOT04_START && Qty_End < SLOT04_END)) { Flag_04 = true; } else { Flag_04 = false; }
        //    if ((Qty_Start >= SLOT05_START && Qty_Start < SLOT05_END) || (Qty_End >= SLOT05_START && Qty_End < SLOT05_END)) { Flag_05 = true; } else { Flag_05 = false; }
        //    if ((Qty_Start >= SLOT06_START && Qty_Start < SLOT06_END) || (Qty_End >= SLOT06_START && Qty_End < SLOT06_END)) { Flag_06 = true; } else { Flag_06 = false; }
        //    if ((Qty_Start >= SLOT07_START && Qty_Start < SLOT07_END) || (Qty_End >= SLOT07_START && Qty_End < SLOT07_END)) { Flag_07 = true; } else { Flag_07 = false; }
        //    if ((Qty_Start >= SLOT08_START && Qty_Start < SLOT08_END) || (Qty_End >= SLOT08_START && Qty_End < SLOT08_END)) { Flag_08 = true; } else { Flag_08 = false; }
        //    if ((Qty_Start >= SLOT09_START && Qty_Start < SLOT09_END) || (Qty_End >= SLOT09_START && Qty_End < SLOT09_END)) { Flag_09 = true; } else { Flag_09 = false; }
        //    if ((Qty_Start >= SLOT10_START && Qty_Start < SLOT10_END) || (Qty_End >= SLOT10_START && Qty_End < SLOT10_END)) { Flag_10 = true; } else { Flag_10 = false; }

        //    Qty_01 = 0;
        //    Qty_02 = 0;
        //    Qty_03 = 0;
        //    Qty_04 = 0;
        //    Qty_05 = 0;
        //    Qty_06 = 0;
        //    Qty_07 = 0;
        //    Qty_08 = 0;
        //    Qty_09 = 0;
        //    Qty_10 = 0;

        //    if (Qty >= 0)
        //    {
        //        // Inizia da SLOT_01 - Finisce in SLOT01
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = Qty_End - Qty_Start;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT02
        //        if (Flag_01 == true && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = SLOT01_END - Qty_Start;
        //            Qty_02 = Qty_End - SLOT02_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT03
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = SLOT01_END - Qty_Start;
        //            Qty_02 = SLOT02_END - SLOT02_START;
        //            Qty_03 = Qty_End - SLOT03_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT04
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = SLOT01_END - Qty_Start;
        //            Qty_02 = SLOT02_END - SLOT02_START;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = Qty_End - SLOT04_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT05
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = SLOT01_END - Qty_Start;
        //            Qty_02 = SLOT02_END - SLOT02_START;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = Qty_End - SLOT05_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT06
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = SLOT01_END - Qty_Start;
        //            Qty_02 = SLOT02_END - SLOT02_START;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = Qty_End - SLOT06_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT07
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = SLOT01_END - Qty_Start;
        //            Qty_02 = SLOT02_END - SLOT02_START;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = Qty_End - SLOT07_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT08
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = SLOT01_END - Qty_Start;
        //            Qty_02 = SLOT02_END - SLOT02_START;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = Qty_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT09
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_01 = SLOT01_END - Qty_Start;
        //            Qty_02 = SLOT02_END - SLOT02_START;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = Qty_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT10
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_01 = SLOT01_END - Qty_Start;
        //            Qty_02 = SLOT02_END - SLOT02_START;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = SLOT09_END - SLOT09_START;
        //            Qty_10 = Qty_End - SLOT10_START;
        //        }



        //        // Inizia da SLOT_02 - Finisce in SLOT02
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = Qty_End - Qty_Start;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT03
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = SLOT02_END - Qty_Start;
        //            Qty_03 = Qty_End - SLOT03_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT04
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = SLOT02_END - Qty_Start;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = Qty_End - SLOT04_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT05
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = SLOT02_END - Qty_Start;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = Qty_End - SLOT05_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = SLOT02_END - Qty_Start;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = Qty_End - SLOT06_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT07
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = SLOT02_END - Qty_Start;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = Qty_End - SLOT07_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT08
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = SLOT02_END - Qty_Start;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = Qty_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_02 = SLOT02_END - Qty_Start;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = Qty_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_02 = SLOT02_END - Qty_Start;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = SLOT09_END - SLOT09_START;
        //            Qty_10 = Qty_End - SLOT10_START;
        //        }




        //        // Inizia da SLOT_03 - Finisce in SLOT03
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = Qty_End - Qty_Start;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT04
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = SLOT03_END - Qty_Start;
        //            Qty_04 = Qty_End - SLOT04_START;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT05
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = SLOT03_END - Qty_Start;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = Qty_End - SLOT05_START;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = SLOT03_END - Qty_Start;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = Qty_End - SLOT06_START;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = SLOT03_END - Qty_Start;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = Qty_End - SLOT07_START;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = SLOT03_END - Qty_Start;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = Qty_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_03 = SLOT03_END - Qty_Start;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = Qty_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_03 = SLOT03_END - Qty_Start;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = SLOT09_END - SLOT09_START;
        //            Qty_10 = Qty_End - SLOT10_START;
        //        }



        //        // Inizia da SLOT_04 - Finisce in SLOT04
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = Qty_End - Qty_Start;
        //        }
        //        // Inizia da SLOT_04 - Finisce in SLOT05
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = SLOT04_END - Qty_Start;
        //            Qty_05 = Qty_End - SLOT05_START;
        //        }
        //        // Inizia da SLOT_04 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = SLOT04_END - Qty_Start;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = Qty_End - SLOT06_START;
        //        }
        //        // Inizia da SLOT_04 - Finisce in SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = SLOT04_END - Qty_Start;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = Qty_End - SLOT07_START;
        //        }
        //        // Inizia da SLOT_04 - Finisce in SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = SLOT04_END - Qty_Start;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = Qty_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_04 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_04 = SLOT04_END - Qty_Start;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = Qty_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_04 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_04 = SLOT04_END - Qty_Start;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = SLOT09_END - SLOT09_START;
        //            Qty_10 = Qty_End - SLOT10_START;
        //        }


        //        // Inizia da SLOT_05 - Finisce in SLOT05
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_05 = Qty_End - Qty_Start;
        //        }
        //        // Inizia da SLOT_05 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_05 = SLOT05_END - Qty_Start;
        //            Qty_06 = Qty_End - SLOT06_START;
        //        }
        //        // Inizia da SLOT_05 - Finisce in SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_05 = SLOT05_END - Qty_Start;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = Qty_End - SLOT07_START;
        //        }
        //        // Inizia da SLOT_05 - Finisce in SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_05 = SLOT05_END - Qty_Start;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = Qty_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_05 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_05 = SLOT05_END - Qty_Start;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = Qty_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_05 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_05 = SLOT05_END - Qty_Start;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = SLOT09_END - SLOT09_START;
        //            Qty_10 = Qty_End - SLOT10_START;
        //        }



        //        // Inizia da SLOT_06 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_06 = Qty_End - Qty_Start;
        //        }
        //        // Inizia da SLOT_06 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_06 = SLOT06_END - Qty_Start;
        //            Qty_07 = Qty_End - SLOT07_START;
        //        }
        //        // Inizia da SLOT_06 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_06 = SLOT06_END - Qty_Start;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = Qty_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_06 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_06 = SLOT06_END - Qty_Start;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = Qty_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_06 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_06 = SLOT06_END - Qty_Start;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = SLOT09_END - SLOT09_START;
        //            Qty_10 = Qty_End - SLOT10_START;
        //        }



        //        // Inizia da SLOT_07 - Finisce in SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_07 = Qty_End - Qty_Start;
        //        }
        //        // Inizia da SLOT_07 - Finisce in SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_07 = SLOT07_END - Qty_Start;
        //            Qty_08 = Qty_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_07 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_07 = SLOT07_END - Qty_Start;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = Qty_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_07 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_07 = SLOT07_END - Qty_Start;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = SLOT09_END - SLOT09_START;
        //            Qty_10 = Qty_End - SLOT10_START;
        //        }



        //        // Inizia da SLOT_08 - Finisce in SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_08 = Qty_End - Qty_Start;
        //        }
        //        // Inizia da SLOT_08 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_08 = SLOT08_END - Qty_Start;
        //            Qty_09 = Qty_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_08 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_08 = SLOT08_END - Qty_Start;
        //            Qty_09 = SLOT09_END - SLOT09_START;
        //            Qty_10 = Qty_End - SLOT10_START;
        //        }



        //        // Inizia da SLOT_09 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_08 = Qty_End - Qty_Start;
        //        }
        //        // Inizia da SLOT_09 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == true)
        //        {
        //            Qty_09 = SLOT09_END - Qty_Start;
        //            Qty_10 = Qty_End - SLOT10_START;
        //        }


        //        // Inizia da SLOT_10 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_10 = Qty_End - Qty_Start;
        //        }


        //        // ERRORE
        //        else 
        //        {
        //            Qty_01 = Qty_End - Qty_Start;
        //        }




        //    }
        //    else
        //    {
        //        // Finisce in SLOT_01 - Inizia da SLOT01
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = -(Qty_Start - Qty_End);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT02
        //        if (Flag_01 == true && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = -(SLOT01_END - Qty_End);
        //            Qty_02 = -(Qty_Start - SLOT02_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT03
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = -(SLOT01_END - Qty_End);
        //            Qty_02 = -(SLOT02_END - SLOT02_START);
        //            Qty_03 = -(Qty_Start - SLOT03_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT04
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = -(SLOT01_END - Qty_End);
        //            Qty_02 = -(SLOT02_END - SLOT02_START);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(Qty_Start - SLOT04_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT05
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = -(SLOT01_END - Qty_End);
        //            Qty_02 = -(SLOT02_END - SLOT02_START);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(Qty_Start - SLOT05_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT06
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = -(SLOT01_END - Qty_End);
        //            Qty_02 = -(SLOT02_END - SLOT02_START);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(Qty_Start - SLOT06_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT07
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = -(SLOT01_END - Qty_End);
        //            Qty_02 = -(SLOT02_END - SLOT02_START);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(Qty_Start - SLOT07_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT08
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = -(SLOT01_END - Qty_End);
        //            Qty_02 = -(SLOT02_END - SLOT02_START);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(Qty_Start - SLOT08_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT09
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_01 = -(SLOT01_END - Qty_End);
        //            Qty_02 = -(SLOT02_END - SLOT02_START);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(Qty_Start - SLOT09_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT10
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_01 = -(SLOT01_END - Qty_End);
        //            Qty_02 = -(SLOT02_END - SLOT02_START);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(SLOT09_END - SLOT09_START);
        //            Qty_10 = -(Qty_Start - SLOT10_START);
        //        }





        //        // Fnisce in  SLOT_02 - Inizia da SLOT02
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = -(Qty_Start - Qty_End);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT03
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = -(SLOT02_END - Qty_End);
        //            Qty_03 = -(Qty_Start - SLOT03_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT04
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = -(SLOT02_END - Qty_End);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(Qty_Start - SLOT04_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT05
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = -(SLOT02_END - Qty_End);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(Qty_Start - SLOT05_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = -(SLOT02_END - Qty_End);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(Qty_Start - SLOT06_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT07
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = -(SLOT02_END - Qty_End);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(Qty_Start - SLOT07_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT08
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = -(SLOT02_END - Qty_End);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(Qty_Start - SLOT08_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_02 = -(SLOT02_END - Qty_End);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(Qty_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_02 = -(SLOT02_END - Qty_End);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(SLOT09_END - SLOT09_START);
        //            Qty_10 = -(Qty_Start - SLOT10_START);
        //        }




        //        // Fnisce in  SLOT_03 - Inizia da SLOT03
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = -(Qty_Start - Qty_End);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT04
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = -(SLOT03_END - Qty_End);
        //            Qty_04 = -(Qty_Start - SLOT04_START);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT05
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = -(SLOT03_END - Qty_End);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(Qty_Start - SLOT05_START);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = -(SLOT03_END - Qty_End);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(Qty_Start - SLOT06_START);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = -(SLOT03_END - Qty_End);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(Qty_Start - SLOT07_START);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = -(SLOT03_END - Qty_End);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(Qty_Start - SLOT08_START);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_03 = -(SLOT03_END - Qty_End);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(Qty_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_03 = -(SLOT03_END - Qty_End);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(SLOT09_END - SLOT09_START);
        //            Qty_10 = -(Qty_Start - SLOT10_START);
        //        }



        //        // Fnisce in  SLOT_04 - Inizia da SLOT04
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = -(Qty_Start - Qty_End);
        //        }
        //        // Fnisce in  SLOT_04 - Inizia da SLOT05
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = -(SLOT04_END - Qty_End);
        //            Qty_05 = -(Qty_Start - SLOT05_START);
        //        }
        //        // Fnisce in  SLOT_04 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = -(SLOT04_END - Qty_End);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(Qty_Start - SLOT06_START);
        //        }
        //        // Fnisce in  SLOT_04 - Inizia da SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = -(SLOT04_END - Qty_End);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(Qty_Start - SLOT07_START);
        //        }
        //        // Fnisce in  SLOT_04 - Inizia da SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = -(SLOT04_END - Qty_End);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(Qty_Start - SLOT08_START);
        //        }
        //        // Fnisce in  SLOT_04 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_04 = -(SLOT04_END - Qty_End);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(Qty_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_04 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_04 = -(SLOT04_END - Qty_End);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(SLOT09_END - SLOT09_START);
        //            Qty_10 = -(Qty_Start - SLOT10_START);
        //        }


        //        // Fnisce in  SLOT_05 - Inizia da SLOT05
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_05 = -(Qty_Start - Qty_End);
        //        }
        //        // Fnisce in  SLOT_05 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_05 = -(SLOT05_END - Qty_End);
        //            Qty_06 = -(Qty_Start - SLOT06_START);
        //        }
        //        // Fnisce in  SLOT_05 - Inizia da SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_05 = -(SLOT05_END - Qty_End);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(Qty_Start - SLOT07_START);
        //        }
        //        // Fnisce in  SLOT_05 - Inizia da SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_05 = -(SLOT05_END - Qty_End);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(Qty_Start - SLOT08_START);
        //        }
        //        // Fnisce in  SLOT_05 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_05 = -(SLOT05_END - Qty_End);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(Qty_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_05 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_05 = -(SLOT05_END - Qty_End);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(SLOT09_END - SLOT09_START);
        //            Qty_10 = -(Qty_Start - SLOT10_START);
        //        }



        //        // Fnisce in  SLOT_06 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_06 = -(Qty_Start - Qty_End);
        //        }
        //        // Fnisce in  SLOT_06 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_06 = -(SLOT06_END - Qty_End);
        //            Qty_07 = -(Qty_Start - SLOT07_START);
        //        }
        //        // Fnisce in  SLOT_06 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_06 = -(SLOT06_END - Qty_End);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(Qty_Start - SLOT08_START);
        //        }
        //        // Fnisce in  SLOT_06 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_06 = -(SLOT06_END - Qty_End);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(Qty_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_06 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_06 = -(SLOT06_END - Qty_End);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(SLOT09_END - SLOT09_START);
        //            Qty_10 = -(Qty_Start - SLOT10_START);
        //        }



        //        // Fnisce in  SLOT_07 - Inizia da SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_07 = -(Qty_Start - Qty_End);
        //        }
        //        // Fnisce in  SLOT_07 - Inizia da SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_07 = -(SLOT07_END - Qty_End);
        //            Qty_08 = -(Qty_Start - SLOT08_START);
        //        }
        //        // Fnisce in  SLOT_07 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_07 = -(SLOT07_END - Qty_End);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(Qty_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_07 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_07 = -(SLOT07_END - Qty_End);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(SLOT09_END - SLOT09_START);
        //            Qty_10 = -(Qty_Start - SLOT10_START);
        //        }



        //        // Fnisce in  SLOT_08 - Inizia da SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_08 = -(Qty_Start - Qty_End);
        //        }
        //        // Fnisce in  SLOT_08 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_08 = -(SLOT08_END - Qty_End);
        //            Qty_09 = -(Qty_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_08 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_08 = -(SLOT08_END - Qty_End);
        //            Qty_09 = -(SLOT09_END - SLOT09_START);
        //            Qty_10 = -(Qty_Start - SLOT10_START);
        //        }



        //        // Fnisce in  SLOT_09 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_08 = -(Qty_Start - Qty_End);
        //        }
        //        // Fnisce in  SLOT_09 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == true)
        //        {
        //            Qty_09 = -(SLOT09_END - Qty_End);
        //            Qty_10 = -(Qty_Start - SLOT10_START);
        //        }


        //        // Fnisce in  SLOT_10 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_10 = -(Qty_Start - Qty_End);
        //        }


        //        // ERRORE
        //        else
        //        {
        //            Qty_01 = -(Qty_Start - Qty_End);
        //        }


        //    }



        //    // Net Revenue
        //    // -----------------------------------
        //    if (Qty != 0 && RevLcl != 0)
        //    {
        //        RevLcl_01 = RevLcl * Qty_01 / Qty;
        //        RevLcl_02 = RevLcl * Qty_02 / Qty;
        //        RevLcl_03 = RevLcl * Qty_03 / Qty;
        //        RevLcl_04 = RevLcl * Qty_04 / Qty;
        //        RevLcl_05 = RevLcl * Qty_05 / Qty;
        //        RevLcl_06 = RevLcl * Qty_06 / Qty;
        //        RevLcl_07 = RevLcl * Qty_07 / Qty;
        //        RevLcl_08 = RevLcl * Qty_08 / Qty;
        //        RevLcl_09 = RevLcl * Qty_09 / Qty;
        //        RevLcl_10 = RevLcl * Qty_10 / Qty;
        //    }
        //    else if (Qty != 0 && RevLcl == 0)
        //    {
        //        RevLcl_01 = 0;
        //        RevLcl_02 = 0;
        //        RevLcl_03 = 0;
        //        RevLcl_04 = 0;
        //        RevLcl_05 = 0;
        //        RevLcl_06 = 0;
        //        RevLcl_07 = 0;
        //        RevLcl_08 = 0;
        //        RevLcl_09 = 0;
        //        RevLcl_10 = 0;
        //    }
        //    else if (Qty == 0 && RevLcl != 0)
        //    {
        //        RevLcl_01 = 0;
        //        RevLcl_02 = 0;
        //        RevLcl_03 = 0;
        //        RevLcl_04 = 0;
        //        RevLcl_05 = 0;
        //        RevLcl_06 = 0;
        //        RevLcl_07 = 0;
        //        RevLcl_08 = 0;
        //        RevLcl_09 = 0;
        //        RevLcl_10 = 0;

        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false) { RevLcl_01 = RevLcl; }
        //        else if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false) { RevLcl_02 = RevLcl; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false) { RevLcl_03 = RevLcl; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false) { RevLcl_04 = RevLcl; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false) { RevLcl_05 = RevLcl; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false) { RevLcl_06 = RevLcl; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false) { RevLcl_07 = RevLcl; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false) { RevLcl_08 = RevLcl; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false) { RevLcl_09 = RevLcl; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true) { RevLcl_10 = RevLcl; }
        //        else { RevLcl_01 = RevLcl; }
        //    }
        //    else
        //    {
        //        RevLcl_01 = 0;
        //        RevLcl_02 = 0;
        //        RevLcl_03 = 0;
        //        RevLcl_04 = 0;
        //        RevLcl_05 = 0;
        //        RevLcl_06 = 0;
        //        RevLcl_07 = 0;
        //        RevLcl_08 = 0;
        //        RevLcl_09 = 0;
        //        RevLcl_10 = 0;
        //    }


        //}





        //public void Quantity_And_Revenue_By_ASP(
        //            in double SLOT01_START,
        //            in double SLOT01_END,
        //            in double SLOT02_START,
        //            in double SLOT02_END,
        //            in double SLOT03_START,
        //            in double SLOT03_END,
        //            in double SLOT04_START,
        //            in double SLOT04_END,
        //            in double SLOT05_START,
        //            in double SLOT05_END,
        //            in double SLOT06_START,
        //            in double SLOT06_END,
        //            in double SLOT07_START,
        //            in double SLOT07_END,
        //            in double SLOT08_START,
        //            in double SLOT08_END,
        //            in double SLOT09_START,
        //            in double SLOT09_END,
        //            in double SLOT10_START,
        //            in double SLOT10_END,
        //            in double Qty,
        //            in double Qty_Start,
        //            in double Qty_End,
        //            ref double Qty_01,
        //            ref double Qty_02,
        //            ref double Qty_03,
        //            ref double Qty_04,
        //            ref double Qty_05,
        //            ref double Qty_06,
        //            ref double Qty_07,
        //            ref double Qty_08,
        //            ref double Qty_09,
        //            ref double Qty_10,
        //            ref double RevLcl,
        //            ref double RevLcl_End,
        //            ref double RevLcl_Start,
        //            ref double RevLcl_01,
        //            ref double RevLcl_02,
        //            ref double RevLcl_03,
        //            ref double RevLcl_04,
        //            ref double RevLcl_05,
        //            ref double RevLcl_06,
        //            ref double RevLcl_07,
        //            ref double RevLcl_08,
        //            ref double RevLcl_09,
        //            ref double RevLcl_10)
        //{

        //    // Variabili interne
        //    // -----------------------------------
        //    bool Flag_01 = false;
        //    bool Flag_02 = false;
        //    bool Flag_03 = false;
        //    bool Flag_04 = false;
        //    bool Flag_05 = false;
        //    bool Flag_06 = false;
        //    bool Flag_07 = false;
        //    bool Flag_08 = false;
        //    bool Flag_09 = false;
        //    bool Flag_10 = false;


        //    // Flag
        //    // -----------------------------------
        //    if ((Qty_Start >= SLOT01_START && Qty_Start < SLOT01_END) || (Qty_End >= SLOT01_START && Qty_End < SLOT01_END)) { Flag_01 = true; } else { Flag_01 = false; }
        //    if ((Qty_Start >= SLOT02_START && Qty_Start < SLOT02_END) || (Qty_End >= SLOT02_START && Qty_End < SLOT02_END)) { Flag_02 = true; } else { Flag_02 = false; }
        //    if ((Qty_Start >= SLOT03_START && Qty_Start < SLOT03_END) || (Qty_End >= SLOT03_START && Qty_End < SLOT03_END)) { Flag_03 = true; } else { Flag_03 = false; }
        //    if ((Qty_Start >= SLOT04_START && Qty_Start < SLOT04_END) || (Qty_End >= SLOT04_START && Qty_End < SLOT04_END)) { Flag_04 = true; } else { Flag_04 = false; }
        //    if ((Qty_Start >= SLOT05_START && Qty_Start < SLOT05_END) || (Qty_End >= SLOT05_START && Qty_End < SLOT05_END)) { Flag_05 = true; } else { Flag_05 = false; }
        //    if ((Qty_Start >= SLOT06_START && Qty_Start < SLOT06_END) || (Qty_End >= SLOT06_START && Qty_End < SLOT06_END)) { Flag_06 = true; } else { Flag_06 = false; }
        //    if ((Qty_Start >= SLOT07_START && Qty_Start < SLOT07_END) || (Qty_End >= SLOT07_START && Qty_End < SLOT07_END)) { Flag_07 = true; } else { Flag_07 = false; }
        //    if ((Qty_Start >= SLOT08_START && Qty_Start < SLOT08_END) || (Qty_End >= SLOT08_START && Qty_End < SLOT08_END)) { Flag_08 = true; } else { Flag_08 = false; }
        //    if ((Qty_Start >= SLOT09_START && Qty_Start < SLOT09_END) || (Qty_End >= SLOT09_START && Qty_End < SLOT09_END)) { Flag_09 = true; } else { Flag_09 = false; }
        //    if ((Qty_Start >= SLOT10_START && Qty_Start < SLOT10_END) || (Qty_End >= SLOT10_START && Qty_End < SLOT10_END)) { Flag_10 = true; } else { Flag_10 = false; }

        //    Qty_01 = 0;
        //    Qty_02 = 0;
        //    Qty_03 = 0;
        //    Qty_04 = 0;
        //    Qty_05 = 0;
        //    Qty_06 = 0;
        //    Qty_07 = 0;
        //    Qty_08 = 0;
        //    Qty_09 = 0;
        //    Qty_10 = 0;

        //    if (Qty >= 0)
        //    {
        //        // Inizia da SLOT_01 - Finisce in SLOT01
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = Qty_End - Qty_Start;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT02
        //        if (Flag_01 == true && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = SLOT01_END - Qty_Start;
        //            Qty_02 = Qty_End - SLOT02_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT03
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = SLOT01_END - Qty_Start;
        //            Qty_02 = SLOT02_END - SLOT02_START;
        //            Qty_03 = Qty_End - SLOT03_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT04
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = SLOT01_END - Qty_Start;
        //            Qty_02 = SLOT02_END - SLOT02_START;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = Qty_End - SLOT04_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT05
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = SLOT01_END - Qty_Start;
        //            Qty_02 = SLOT02_END - SLOT02_START;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = Qty_End - SLOT05_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT06
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = SLOT01_END - Qty_Start;
        //            Qty_02 = SLOT02_END - SLOT02_START;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = Qty_End - SLOT06_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT07
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = SLOT01_END - Qty_Start;
        //            Qty_02 = SLOT02_END - SLOT02_START;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = Qty_End - SLOT07_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT08
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = SLOT01_END - Qty_Start;
        //            Qty_02 = SLOT02_END - SLOT02_START;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = Qty_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT09
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_01 = SLOT01_END - Qty_Start;
        //            Qty_02 = SLOT02_END - SLOT02_START;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = Qty_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT10
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_01 = SLOT01_END - Qty_Start;
        //            Qty_02 = SLOT02_END - SLOT02_START;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = SLOT09_END - SLOT09_START;
        //            Qty_10 = Qty_End - SLOT10_START;
        //        }



        //        // Inizia da SLOT_02 - Finisce in SLOT02
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = Qty_End - Qty_Start;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT03
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = SLOT02_END - Qty_Start;
        //            Qty_03 = Qty_End - SLOT03_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT04
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = SLOT02_END - Qty_Start;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = Qty_End - SLOT04_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT05
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = SLOT02_END - Qty_Start;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = Qty_End - SLOT05_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = SLOT02_END - Qty_Start;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = Qty_End - SLOT06_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT07
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = SLOT02_END - Qty_Start;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = Qty_End - SLOT07_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT08
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = SLOT02_END - Qty_Start;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = Qty_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_02 = SLOT02_END - Qty_Start;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = Qty_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_02 = SLOT02_END - Qty_Start;
        //            Qty_03 = SLOT03_END - SLOT03_START;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = SLOT09_END - SLOT09_START;
        //            Qty_10 = Qty_End - SLOT10_START;
        //        }




        //        // Inizia da SLOT_03 - Finisce in SLOT03
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = Qty_End - Qty_Start;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT04
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = SLOT03_END - Qty_Start;
        //            Qty_04 = Qty_End - SLOT04_START;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT05
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = SLOT03_END - Qty_Start;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = Qty_End - SLOT05_START;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = SLOT03_END - Qty_Start;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = Qty_End - SLOT06_START;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = SLOT03_END - Qty_Start;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = Qty_End - SLOT07_START;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = SLOT03_END - Qty_Start;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = Qty_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_03 = SLOT03_END - Qty_Start;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = Qty_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_03 = SLOT03_END - Qty_Start;
        //            Qty_04 = SLOT04_END - SLOT04_START;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = SLOT09_END - SLOT09_START;
        //            Qty_10 = Qty_End - SLOT10_START;
        //        }



        //        // Inizia da SLOT_04 - Finisce in SLOT04
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = Qty_End - Qty_Start;
        //        }
        //        // Inizia da SLOT_04 - Finisce in SLOT05
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = SLOT04_END - Qty_Start;
        //            Qty_05 = Qty_End - SLOT05_START;
        //        }
        //        // Inizia da SLOT_04 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = SLOT04_END - Qty_Start;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = Qty_End - SLOT06_START;
        //        }
        //        // Inizia da SLOT_04 - Finisce in SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = SLOT04_END - Qty_Start;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = Qty_End - SLOT07_START;
        //        }
        //        // Inizia da SLOT_04 - Finisce in SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = SLOT04_END - Qty_Start;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = Qty_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_04 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_04 = SLOT04_END - Qty_Start;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = Qty_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_04 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_04 = SLOT04_END - Qty_Start;
        //            Qty_05 = SLOT05_END - SLOT05_START;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = SLOT09_END - SLOT09_START;
        //            Qty_10 = Qty_End - SLOT10_START;
        //        }


        //        // Inizia da SLOT_05 - Finisce in SLOT05
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_05 = Qty_End - Qty_Start;
        //        }
        //        // Inizia da SLOT_05 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_05 = SLOT05_END - Qty_Start;
        //            Qty_06 = Qty_End - SLOT06_START;
        //        }
        //        // Inizia da SLOT_05 - Finisce in SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_05 = SLOT05_END - Qty_Start;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = Qty_End - SLOT07_START;
        //        }
        //        // Inizia da SLOT_05 - Finisce in SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_05 = SLOT05_END - Qty_Start;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = Qty_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_05 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_05 = SLOT05_END - Qty_Start;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = Qty_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_05 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_05 = SLOT05_END - Qty_Start;
        //            Qty_06 = SLOT06_END - SLOT06_START;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = SLOT09_END - SLOT09_START;
        //            Qty_10 = Qty_End - SLOT10_START;
        //        }



        //        // Inizia da SLOT_06 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_06 = Qty_End - Qty_Start;
        //        }
        //        // Inizia da SLOT_06 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_06 = SLOT06_END - Qty_Start;
        //            Qty_07 = Qty_End - SLOT07_START;
        //        }
        //        // Inizia da SLOT_06 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_06 = SLOT06_END - Qty_Start;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = Qty_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_06 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_06 = SLOT06_END - Qty_Start;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = Qty_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_06 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_06 = SLOT06_END - Qty_Start;
        //            Qty_07 = SLOT07_END - SLOT07_START;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = SLOT09_END - SLOT09_START;
        //            Qty_10 = Qty_End - SLOT10_START;
        //        }



        //        // Inizia da SLOT_07 - Finisce in SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_07 = Qty_End - Qty_Start;
        //        }
        //        // Inizia da SLOT_07 - Finisce in SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_07 = SLOT07_END - Qty_Start;
        //            Qty_08 = Qty_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_07 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_07 = SLOT07_END - Qty_Start;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = Qty_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_07 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_07 = SLOT07_END - Qty_Start;
        //            Qty_08 = SLOT08_END - SLOT08_START;
        //            Qty_09 = SLOT09_END - SLOT09_START;
        //            Qty_10 = Qty_End - SLOT10_START;
        //        }



        //        // Inizia da SLOT_08 - Finisce in SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_08 = Qty_End - Qty_Start;
        //        }
        //        // Inizia da SLOT_08 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_08 = SLOT08_END - Qty_Start;
        //            Qty_09 = Qty_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_08 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_08 = SLOT08_END - Qty_Start;
        //            Qty_09 = SLOT09_END - SLOT09_START;
        //            Qty_10 = Qty_End - SLOT10_START;
        //        }



        //        // Inizia da SLOT_09 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_08 = Qty_End - Qty_Start;
        //        }
        //        // Inizia da SLOT_09 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == true)
        //        {
        //            Qty_09 = SLOT09_END - Qty_Start;
        //            Qty_10 = Qty_End - SLOT10_START;
        //        }


        //        // Inizia da SLOT_10 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_10 = Qty_End - Qty_Start;
        //        }


        //        // ERRORE
        //        else
        //        {
        //            Qty_01 = Qty_End - Qty_Start;
        //        }




        //    }
        //    else
        //    {
        //        // Finisce in SLOT_01 - Inizia da SLOT01
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = -(Qty_Start - Qty_End);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT02
        //        if (Flag_01 == true && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = -(SLOT01_END - Qty_End);
        //            Qty_02 = -(Qty_Start - SLOT02_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT03
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = -(SLOT01_END - Qty_End);
        //            Qty_02 = -(SLOT02_END - SLOT02_START);
        //            Qty_03 = -(Qty_Start - SLOT03_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT04
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = -(SLOT01_END - Qty_End);
        //            Qty_02 = -(SLOT02_END - SLOT02_START);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(Qty_Start - SLOT04_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT05
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = -(SLOT01_END - Qty_End);
        //            Qty_02 = -(SLOT02_END - SLOT02_START);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(Qty_Start - SLOT05_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT06
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = -(SLOT01_END - Qty_End);
        //            Qty_02 = -(SLOT02_END - SLOT02_START);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(Qty_Start - SLOT06_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT07
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = -(SLOT01_END - Qty_End);
        //            Qty_02 = -(SLOT02_END - SLOT02_START);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(Qty_Start - SLOT07_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT08
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_01 = -(SLOT01_END - Qty_End);
        //            Qty_02 = -(SLOT02_END - SLOT02_START);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(Qty_Start - SLOT08_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT09
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_01 = -(SLOT01_END - Qty_End);
        //            Qty_02 = -(SLOT02_END - SLOT02_START);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(Qty_Start - SLOT09_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT10
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_01 = -(SLOT01_END - Qty_End);
        //            Qty_02 = -(SLOT02_END - SLOT02_START);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(SLOT09_END - SLOT09_START);
        //            Qty_10 = -(Qty_Start - SLOT10_START);
        //        }





        //        // Fnisce in  SLOT_02 - Inizia da SLOT02
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = -(Qty_Start - Qty_End);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT03
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = -(SLOT02_END - Qty_End);
        //            Qty_03 = -(Qty_Start - SLOT03_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT04
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = -(SLOT02_END - Qty_End);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(Qty_Start - SLOT04_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT05
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = -(SLOT02_END - Qty_End);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(Qty_Start - SLOT05_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = -(SLOT02_END - Qty_End);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(Qty_Start - SLOT06_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT07
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = -(SLOT02_END - Qty_End);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(Qty_Start - SLOT07_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT08
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_02 = -(SLOT02_END - Qty_End);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(Qty_Start - SLOT08_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_02 = -(SLOT02_END - Qty_End);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(Qty_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_02 = -(SLOT02_END - Qty_End);
        //            Qty_03 = -(SLOT03_END - SLOT03_START);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(SLOT09_END - SLOT09_START);
        //            Qty_10 = -(Qty_Start - SLOT10_START);
        //        }




        //        // Fnisce in  SLOT_03 - Inizia da SLOT03
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = -(Qty_Start - Qty_End);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT04
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = -(SLOT03_END - Qty_End);
        //            Qty_04 = -(Qty_Start - SLOT04_START);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT05
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = -(SLOT03_END - Qty_End);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(Qty_Start - SLOT05_START);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = -(SLOT03_END - Qty_End);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(Qty_Start - SLOT06_START);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = -(SLOT03_END - Qty_End);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(Qty_Start - SLOT07_START);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_03 = -(SLOT03_END - Qty_End);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(Qty_Start - SLOT08_START);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_03 = -(SLOT03_END - Qty_End);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(Qty_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_03 = -(SLOT03_END - Qty_End);
        //            Qty_04 = -(SLOT04_END - SLOT04_START);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(SLOT09_END - SLOT09_START);
        //            Qty_10 = -(Qty_Start - SLOT10_START);
        //        }



        //        // Fnisce in  SLOT_04 - Inizia da SLOT04
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = -(Qty_Start - Qty_End);
        //        }
        //        // Fnisce in  SLOT_04 - Inizia da SLOT05
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = -(SLOT04_END - Qty_End);
        //            Qty_05 = -(Qty_Start - SLOT05_START);
        //        }
        //        // Fnisce in  SLOT_04 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = -(SLOT04_END - Qty_End);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(Qty_Start - SLOT06_START);
        //        }
        //        // Fnisce in  SLOT_04 - Inizia da SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = -(SLOT04_END - Qty_End);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(Qty_Start - SLOT07_START);
        //        }
        //        // Fnisce in  SLOT_04 - Inizia da SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_04 = -(SLOT04_END - Qty_End);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(Qty_Start - SLOT08_START);
        //        }
        //        // Fnisce in  SLOT_04 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_04 = -(SLOT04_END - Qty_End);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(Qty_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_04 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_04 = -(SLOT04_END - Qty_End);
        //            Qty_05 = -(SLOT05_END - SLOT05_START);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(SLOT09_END - SLOT09_START);
        //            Qty_10 = -(Qty_Start - SLOT10_START);
        //        }


        //        // Fnisce in  SLOT_05 - Inizia da SLOT05
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_05 = -(Qty_Start - Qty_End);
        //        }
        //        // Fnisce in  SLOT_05 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_05 = -(SLOT05_END - Qty_End);
        //            Qty_06 = -(Qty_Start - SLOT06_START);
        //        }
        //        // Fnisce in  SLOT_05 - Inizia da SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_05 = -(SLOT05_END - Qty_End);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(Qty_Start - SLOT07_START);
        //        }
        //        // Fnisce in  SLOT_05 - Inizia da SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_05 = -(SLOT05_END - Qty_End);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(Qty_Start - SLOT08_START);
        //        }
        //        // Fnisce in  SLOT_05 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_05 = -(SLOT05_END - Qty_End);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(Qty_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_05 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_05 = -(SLOT05_END - Qty_End);
        //            Qty_06 = -(SLOT06_END - SLOT06_START);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(SLOT09_END - SLOT09_START);
        //            Qty_10 = -(Qty_Start - SLOT10_START);
        //        }



        //        // Fnisce in  SLOT_06 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_06 = -(Qty_Start - Qty_End);
        //        }
        //        // Fnisce in  SLOT_06 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_06 = -(SLOT06_END - Qty_End);
        //            Qty_07 = -(Qty_Start - SLOT07_START);
        //        }
        //        // Fnisce in  SLOT_06 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_06 = -(SLOT06_END - Qty_End);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(Qty_Start - SLOT08_START);
        //        }
        //        // Fnisce in  SLOT_06 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_06 = -(SLOT06_END - Qty_End);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(Qty_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_06 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_06 = -(SLOT06_END - Qty_End);
        //            Qty_07 = -(SLOT07_END - SLOT07_START);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(SLOT09_END - SLOT09_START);
        //            Qty_10 = -(Qty_Start - SLOT10_START);
        //        }



        //        // Fnisce in  SLOT_07 - Inizia da SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_07 = -(Qty_Start - Qty_End);
        //        }
        //        // Fnisce in  SLOT_07 - Inizia da SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_07 = -(SLOT07_END - Qty_End);
        //            Qty_08 = -(Qty_Start - SLOT08_START);
        //        }
        //        // Fnisce in  SLOT_07 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_07 = -(SLOT07_END - Qty_End);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(Qty_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_07 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_07 = -(SLOT07_END - Qty_End);
        //            Qty_08 = -(SLOT08_END - SLOT08_START);
        //            Qty_09 = -(SLOT09_END - SLOT09_START);
        //            Qty_10 = -(Qty_Start - SLOT10_START);
        //        }



        //        // Fnisce in  SLOT_08 - Inizia da SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            Qty_08 = -(Qty_Start - Qty_End);
        //        }
        //        // Fnisce in  SLOT_08 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_08 = -(SLOT08_END - Qty_End);
        //            Qty_09 = -(Qty_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_08 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_08 = -(SLOT08_END - Qty_End);
        //            Qty_09 = -(SLOT09_END - SLOT09_START);
        //            Qty_10 = -(Qty_Start - SLOT10_START);
        //        }



        //        // Fnisce in  SLOT_09 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            Qty_08 = -(Qty_Start - Qty_End);
        //        }
        //        // Fnisce in  SLOT_09 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == true)
        //        {
        //            Qty_09 = -(SLOT09_END - Qty_End);
        //            Qty_10 = -(Qty_Start - SLOT10_START);
        //        }


        //        // Fnisce in  SLOT_10 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            Qty_10 = -(Qty_Start - Qty_End);
        //        }


        //        // ERRORE
        //        else
        //        {
        //            Qty_01 = -(Qty_Start - Qty_End);
        //        }


        //    }



        //    // Net Revenue
        //    // -----------------------------------
        //    if (Qty != 0 && RevLcl != 0)
        //    {
        //        RevLcl_01 = RevLcl * Qty_01 / Qty;
        //        RevLcl_02 = RevLcl * Qty_02 / Qty;
        //        RevLcl_03 = RevLcl * Qty_03 / Qty;
        //        RevLcl_04 = RevLcl * Qty_04 / Qty;
        //        RevLcl_05 = RevLcl * Qty_05 / Qty;
        //        RevLcl_06 = RevLcl * Qty_06 / Qty;
        //        RevLcl_07 = RevLcl * Qty_07 / Qty;
        //        RevLcl_08 = RevLcl * Qty_08 / Qty;
        //        RevLcl_09 = RevLcl * Qty_09 / Qty;
        //        RevLcl_10 = RevLcl * Qty_10 / Qty;
        //    }
        //    else if (Qty != 0 && RevLcl == 0)
        //    {
        //        RevLcl_01 = 0;
        //        RevLcl_02 = 0;
        //        RevLcl_03 = 0;
        //        RevLcl_04 = 0;
        //        RevLcl_05 = 0;
        //        RevLcl_06 = 0;
        //        RevLcl_07 = 0;
        //        RevLcl_08 = 0;
        //        RevLcl_09 = 0;
        //        RevLcl_10 = 0;
        //    }
        //    else if (Qty == 0 && RevLcl != 0)
        //    {
        //        RevLcl_01 = 0;
        //        RevLcl_02 = 0;
        //        RevLcl_03 = 0;
        //        RevLcl_04 = 0;
        //        RevLcl_05 = 0;
        //        RevLcl_06 = 0;
        //        RevLcl_07 = 0;
        //        RevLcl_08 = 0;
        //        RevLcl_09 = 0;
        //        RevLcl_10 = 0;

        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false) { RevLcl_01 = RevLcl; }
        //        else if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false) { RevLcl_02 = RevLcl; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false) { RevLcl_03 = RevLcl; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false) { RevLcl_04 = RevLcl; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false) { RevLcl_05 = RevLcl; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false) { RevLcl_06 = RevLcl; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false) { RevLcl_07 = RevLcl; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false) { RevLcl_08 = RevLcl; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false) { RevLcl_09 = RevLcl; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true) { RevLcl_10 = RevLcl; }
        //        else { RevLcl_01 = RevLcl; }
        //    }
        //    else
        //    {
        //        RevLcl_01 = 0;
        //        RevLcl_02 = 0;
        //        RevLcl_03 = 0;
        //        RevLcl_04 = 0;
        //        RevLcl_05 = 0;
        //        RevLcl_06 = 0;
        //        RevLcl_07 = 0;
        //        RevLcl_08 = 0;
        //        RevLcl_09 = 0;
        //        RevLcl_10 = 0;
        //    }


        //}






        //public void Quantity_And_Revenue_By_Rev(
        //            in double SLOT01_START,
        //            in double SLOT01_END,
        //            in double SLOT02_START,
        //            in double SLOT02_END,
        //            in double SLOT03_START,
        //            in double SLOT03_END,
        //            in double SLOT04_START,
        //            in double SLOT04_END,
        //            in double SLOT05_START,
        //            in double SLOT05_END,
        //            in double SLOT06_START,
        //            in double SLOT06_END,
        //            in double SLOT07_START,
        //            in double SLOT07_END,
        //            in double SLOT08_START,
        //            in double SLOT08_END,
        //            in double SLOT09_START,
        //            in double SLOT09_END,
        //            in double SLOT10_START,
        //            in double SLOT10_END,
        //            in double Qty,
        //            in double Qty_Start,
        //            in double Qty_End,
        //            ref double Qty_01,
        //            ref double Qty_02,
        //            ref double Qty_03,
        //            ref double Qty_04,
        //            ref double Qty_05,
        //            ref double Qty_06,
        //            ref double Qty_07,
        //            ref double Qty_08,
        //            ref double Qty_09,
        //            ref double Qty_10,
        //            ref double RevLcl,
        //            ref double RevLcl_End,
        //            ref double RevLcl_Start,
        //            ref double RevLcl_01,
        //            ref double RevLcl_02,
        //            ref double RevLcl_03,
        //            ref double RevLcl_04,
        //            ref double RevLcl_05,
        //            ref double RevLcl_06,
        //            ref double RevLcl_07,
        //            ref double RevLcl_08,
        //            ref double RevLcl_09,
        //            ref double RevLcl_10)
        //{

        //    // Variabili interne
        //    // -----------------------------------
        //    bool Flag_01 = false;
        //    bool Flag_02 = false;
        //    bool Flag_03 = false;
        //    bool Flag_04 = false;
        //    bool Flag_05 = false;
        //    bool Flag_06 = false;
        //    bool Flag_07 = false;
        //    bool Flag_08 = false;
        //    bool Flag_09 = false;
        //    bool Flag_10 = false;


        //    // Flag
        //    // -----------------------------------
        //    if ((RevLcl_Start >= SLOT01_START && RevLcl_Start < SLOT01_END) || (RevLcl_End >= SLOT01_START && RevLcl_End < SLOT01_END)) { Flag_01 = true; } else { Flag_01 = false; }
        //    if ((RevLcl_Start >= SLOT02_START && RevLcl_Start < SLOT02_END) || (RevLcl_End >= SLOT02_START && RevLcl_End < SLOT02_END)) { Flag_02 = true; } else { Flag_02 = false; }
        //    if ((RevLcl_Start >= SLOT03_START && RevLcl_Start < SLOT03_END) || (RevLcl_End >= SLOT03_START && RevLcl_End < SLOT03_END)) { Flag_03 = true; } else { Flag_03 = false; }
        //    if ((RevLcl_Start >= SLOT04_START && RevLcl_Start < SLOT04_END) || (RevLcl_End >= SLOT04_START && RevLcl_End < SLOT04_END)) { Flag_04 = true; } else { Flag_04 = false; }
        //    if ((RevLcl_Start >= SLOT05_START && RevLcl_Start < SLOT05_END) || (RevLcl_End >= SLOT05_START && RevLcl_End < SLOT05_END)) { Flag_05 = true; } else { Flag_05 = false; }
        //    if ((RevLcl_Start >= SLOT06_START && RevLcl_Start < SLOT06_END) || (RevLcl_End >= SLOT06_START && RevLcl_End < SLOT06_END)) { Flag_06 = true; } else { Flag_06 = false; }
        //    if ((RevLcl_Start >= SLOT07_START && RevLcl_Start < SLOT07_END) || (RevLcl_End >= SLOT07_START && RevLcl_End < SLOT07_END)) { Flag_07 = true; } else { Flag_07 = false; }
        //    if ((RevLcl_Start >= SLOT08_START && RevLcl_Start < SLOT08_END) || (RevLcl_End >= SLOT08_START && RevLcl_End < SLOT08_END)) { Flag_08 = true; } else { Flag_08 = false; }
        //    if ((RevLcl_Start >= SLOT09_START && RevLcl_Start < SLOT09_END) || (RevLcl_End >= SLOT09_START && RevLcl_End < SLOT09_END)) { Flag_09 = true; } else { Flag_09 = false; }
        //    if ((RevLcl_Start >= SLOT10_START && RevLcl_Start < SLOT10_END) || (RevLcl_End >= SLOT10_START && RevLcl_End < SLOT10_END)) { Flag_10 = true; } else { Flag_10 = false; }


        //    // Revenue
        //    // -----------------------------------
        //    RevLcl_01 = 0;
        //    RevLcl_02 = 0;
        //    RevLcl_03 = 0;
        //    RevLcl_04 = 0;
        //    RevLcl_05 = 0;
        //    RevLcl_06 = 0;
        //    RevLcl_07 = 0;
        //    RevLcl_08 = 0;
        //    RevLcl_09 = 0;
        //    RevLcl_10 = 0;

        //    if (RevLcl >= 0)
        //    {
        //        // Inizia da SLOT_01 - Finisce in SLOT01
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_01 = RevLcl_End - RevLcl_Start;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT02
        //        if (Flag_01 == true && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_01 = SLOT01_END - RevLcl_Start;
        //            RevLcl_02 = RevLcl_End - SLOT02_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT03
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_01 = SLOT01_END - RevLcl_Start;
        //            RevLcl_02 = SLOT02_END - SLOT02_START;
        //            RevLcl_03 = RevLcl_End - SLOT03_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT04
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_01 = SLOT01_END - RevLcl_Start;
        //            RevLcl_02 = SLOT02_END - SLOT02_START;
        //            RevLcl_03 = SLOT03_END - SLOT03_START;
        //            RevLcl_04 = RevLcl_End - SLOT04_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT05
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_01 = SLOT01_END - RevLcl_Start;
        //            RevLcl_02 = SLOT02_END - SLOT02_START;
        //            RevLcl_03 = SLOT03_END - SLOT03_START;
        //            RevLcl_04 = SLOT04_END - SLOT04_START;
        //            RevLcl_05 = RevLcl_End - SLOT05_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT06
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_01 = SLOT01_END - RevLcl_Start;
        //            RevLcl_02 = SLOT02_END - SLOT02_START;
        //            RevLcl_03 = SLOT03_END - SLOT03_START;
        //            RevLcl_04 = SLOT04_END - SLOT04_START;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = RevLcl_End - SLOT06_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT07
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_01 = SLOT01_END - RevLcl_Start;
        //            RevLcl_02 = SLOT02_END - SLOT02_START;
        //            RevLcl_03 = SLOT03_END - SLOT03_START;
        //            RevLcl_04 = SLOT04_END - SLOT04_START;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = RevLcl_End - SLOT07_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT08
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_01 = SLOT01_END - RevLcl_Start;
        //            RevLcl_02 = SLOT02_END - SLOT02_START;
        //            RevLcl_03 = SLOT03_END - SLOT03_START;
        //            RevLcl_04 = SLOT04_END - SLOT04_START;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = SLOT07_END - SLOT07_START;
        //            RevLcl_08 = RevLcl_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT09
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            RevLcl_01 = SLOT01_END - RevLcl_Start;
        //            RevLcl_02 = SLOT02_END - SLOT02_START;
        //            RevLcl_03 = SLOT03_END - SLOT03_START;
        //            RevLcl_04 = SLOT04_END - SLOT04_START;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = SLOT07_END - SLOT07_START;
        //            RevLcl_08 = SLOT08_END - SLOT08_START;
        //            RevLcl_09 = RevLcl_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_01 - Finisce in SLOT10
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            RevLcl_01 = SLOT01_END - RevLcl_Start;
        //            RevLcl_02 = SLOT02_END - SLOT02_START;
        //            RevLcl_03 = SLOT03_END - SLOT03_START;
        //            RevLcl_04 = SLOT04_END - SLOT04_START;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = SLOT07_END - SLOT07_START;
        //            RevLcl_08 = SLOT08_END - SLOT08_START;
        //            RevLcl_09 = SLOT09_END - SLOT09_START;
        //            RevLcl_10 = RevLcl_End - SLOT10_START;
        //        }



        //        // Inizia da SLOT_02 - Finisce in SLOT02
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_02 = RevLcl_End - RevLcl_Start;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT03
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_02 = SLOT02_END - RevLcl_Start;
        //            RevLcl_03 = RevLcl_End - SLOT03_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT04
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_02 = SLOT02_END - RevLcl_Start;
        //            RevLcl_03 = SLOT03_END - SLOT03_START;
        //            RevLcl_04 = RevLcl_End - SLOT04_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT05
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_02 = SLOT02_END - RevLcl_Start;
        //            RevLcl_03 = SLOT03_END - SLOT03_START;
        //            RevLcl_04 = SLOT04_END - SLOT04_START;
        //            RevLcl_05 = RevLcl_End - SLOT05_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_02 = SLOT02_END - RevLcl_Start;
        //            RevLcl_03 = SLOT03_END - SLOT03_START;
        //            RevLcl_04 = SLOT04_END - SLOT04_START;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = RevLcl_End - SLOT06_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT07
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_02 = SLOT02_END - RevLcl_Start;
        //            RevLcl_03 = SLOT03_END - SLOT03_START;
        //            RevLcl_04 = SLOT04_END - SLOT04_START;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = RevLcl_End - SLOT07_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT08
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_02 = SLOT02_END - RevLcl_Start;
        //            RevLcl_03 = SLOT03_END - SLOT03_START;
        //            RevLcl_04 = SLOT04_END - SLOT04_START;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = SLOT07_END - SLOT07_START;
        //            RevLcl_08 = RevLcl_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            RevLcl_02 = SLOT02_END - RevLcl_Start;
        //            RevLcl_03 = SLOT03_END - SLOT03_START;
        //            RevLcl_04 = SLOT04_END - SLOT04_START;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = SLOT07_END - SLOT07_START;
        //            RevLcl_08 = SLOT08_END - SLOT08_START;
        //            RevLcl_09 = RevLcl_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_02 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            RevLcl_02 = SLOT02_END - RevLcl_Start;
        //            RevLcl_03 = SLOT03_END - SLOT03_START;
        //            RevLcl_04 = SLOT04_END - SLOT04_START;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = SLOT07_END - SLOT07_START;
        //            RevLcl_08 = SLOT08_END - SLOT08_START;
        //            RevLcl_09 = SLOT09_END - SLOT09_START;
        //            RevLcl_10 = RevLcl_End - SLOT10_START;
        //        }




        //        // Inizia da SLOT_03 - Finisce in SLOT03
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_03 = RevLcl_End - RevLcl_Start;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT04
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_03 = SLOT03_END - RevLcl_Start;
        //            RevLcl_04 = RevLcl_End - SLOT04_START;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT05
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_03 = SLOT03_END - RevLcl_Start;
        //            RevLcl_04 = SLOT04_END - SLOT04_START;
        //            RevLcl_05 = RevLcl_End - SLOT05_START;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_03 = SLOT03_END - RevLcl_Start;
        //            RevLcl_04 = SLOT04_END - SLOT04_START;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = RevLcl_End - SLOT06_START;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_03 = SLOT03_END - RevLcl_Start;
        //            RevLcl_04 = SLOT04_END - SLOT04_START;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = RevLcl_End - SLOT07_START;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_03 = SLOT03_END - RevLcl_Start;
        //            RevLcl_04 = SLOT04_END - SLOT04_START;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = SLOT07_END - SLOT07_START;
        //            RevLcl_08 = RevLcl_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            RevLcl_03 = SLOT03_END - RevLcl_Start;
        //            RevLcl_04 = SLOT04_END - SLOT04_START;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = SLOT07_END - SLOT07_START;
        //            RevLcl_08 = SLOT08_END - SLOT08_START;
        //            RevLcl_09 = RevLcl_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_03 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            RevLcl_03 = SLOT03_END - RevLcl_Start;
        //            RevLcl_04 = SLOT04_END - SLOT04_START;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = SLOT07_END - SLOT07_START;
        //            RevLcl_08 = SLOT08_END - SLOT08_START;
        //            RevLcl_09 = SLOT09_END - SLOT09_START;
        //            RevLcl_10 = RevLcl_End - SLOT10_START;
        //        }



        //        // Inizia da SLOT_04 - Finisce in SLOT04
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_04 = RevLcl_End - RevLcl_Start;
        //        }
        //        // Inizia da SLOT_04 - Finisce in SLOT05
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_04 = SLOT04_END - RevLcl_Start;
        //            RevLcl_05 = RevLcl_End - SLOT05_START;
        //        }
        //        // Inizia da SLOT_04 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_04 = SLOT04_END - RevLcl_Start;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = RevLcl_End - SLOT06_START;
        //        }
        //        // Inizia da SLOT_04 - Finisce in SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_04 = SLOT04_END - RevLcl_Start;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = RevLcl_End - SLOT07_START;
        //        }
        //        // Inizia da SLOT_04 - Finisce in SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_04 = SLOT04_END - RevLcl_Start;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = SLOT07_END - SLOT07_START;
        //            RevLcl_08 = RevLcl_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_04 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            RevLcl_04 = SLOT04_END - RevLcl_Start;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = SLOT07_END - SLOT07_START;
        //            RevLcl_08 = SLOT08_END - SLOT08_START;
        //            RevLcl_09 = RevLcl_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_04 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            RevLcl_04 = SLOT04_END - RevLcl_Start;
        //            RevLcl_05 = SLOT05_END - SLOT05_START;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = SLOT07_END - SLOT07_START;
        //            RevLcl_08 = SLOT08_END - SLOT08_START;
        //            RevLcl_09 = SLOT09_END - SLOT09_START;
        //            RevLcl_10 = RevLcl_End - SLOT10_START;
        //        }


        //        // Inizia da SLOT_05 - Finisce in SLOT05
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_05 = RevLcl_End - RevLcl_Start;
        //        }
        //        // Inizia da SLOT_05 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_05 = SLOT05_END - RevLcl_Start;
        //            RevLcl_06 = RevLcl_End - SLOT06_START;
        //        }
        //        // Inizia da SLOT_05 - Finisce in SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_05 = SLOT05_END - RevLcl_Start;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = RevLcl_End - SLOT07_START;
        //        }
        //        // Inizia da SLOT_05 - Finisce in SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_05 = SLOT05_END - RevLcl_Start;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = SLOT07_END - SLOT07_START;
        //            RevLcl_08 = RevLcl_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_05 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            RevLcl_05 = SLOT05_END - RevLcl_Start;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = SLOT07_END - SLOT07_START;
        //            RevLcl_08 = SLOT08_END - SLOT08_START;
        //            RevLcl_09 = RevLcl_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_05 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            RevLcl_05 = SLOT05_END - RevLcl_Start;
        //            RevLcl_06 = SLOT06_END - SLOT06_START;
        //            RevLcl_07 = SLOT07_END - SLOT07_START;
        //            RevLcl_08 = SLOT08_END - SLOT08_START;
        //            RevLcl_09 = SLOT09_END - SLOT09_START;
        //            RevLcl_10 = RevLcl_End - SLOT10_START;
        //        }



        //        // Inizia da SLOT_06 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_06 = RevLcl_End - RevLcl_Start;
        //        }
        //        // Inizia da SLOT_06 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_06 = SLOT06_END - RevLcl_Start;
        //            RevLcl_07 = RevLcl_End - SLOT07_START;
        //        }
        //        // Inizia da SLOT_06 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_06 = SLOT06_END - RevLcl_Start;
        //            RevLcl_07 = SLOT07_END - SLOT07_START;
        //            RevLcl_08 = RevLcl_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_06 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            RevLcl_06 = SLOT06_END - RevLcl_Start;
        //            RevLcl_07 = SLOT07_END - SLOT07_START;
        //            RevLcl_08 = SLOT08_END - SLOT08_START;
        //            RevLcl_09 = RevLcl_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_06 - Finisce in SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            RevLcl_06 = SLOT06_END - RevLcl_Start;
        //            RevLcl_07 = SLOT07_END - SLOT07_START;
        //            RevLcl_08 = SLOT08_END - SLOT08_START;
        //            RevLcl_09 = SLOT09_END - SLOT09_START;
        //            RevLcl_10 = RevLcl_End - SLOT10_START;
        //        }



        //        // Inizia da SLOT_07 - Finisce in SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_07 = RevLcl_End - RevLcl_Start;
        //        }
        //        // Inizia da SLOT_07 - Finisce in SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_07 = SLOT07_END - RevLcl_Start;
        //            RevLcl_08 = RevLcl_End - SLOT08_START;
        //        }
        //        // Inizia da SLOT_07 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            RevLcl_07 = SLOT07_END - RevLcl_Start;
        //            RevLcl_08 = SLOT08_END - SLOT08_START;
        //            RevLcl_09 = RevLcl_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_07 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            RevLcl_07 = SLOT07_END - RevLcl_Start;
        //            RevLcl_08 = SLOT08_END - SLOT08_START;
        //            RevLcl_09 = SLOT09_END - SLOT09_START;
        //            RevLcl_10 = RevLcl_End - SLOT10_START;
        //        }



        //        // Inizia da SLOT_08 - Finisce in SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_08 = RevLcl_End - RevLcl_Start;
        //        }
        //        // Inizia da SLOT_08 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == true && Flag_10 == false)
        //        {
        //            RevLcl_08 = SLOT08_END - RevLcl_Start;
        //            RevLcl_09 = RevLcl_End - SLOT09_START;
        //        }
        //        // Inizia da SLOT_08 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == true)
        //        {
        //            RevLcl_08 = SLOT08_END - RevLcl_Start;
        //            RevLcl_09 = SLOT09_END - SLOT09_START;
        //            RevLcl_10 = RevLcl_End - SLOT10_START;
        //        }



        //        // Inizia da SLOT_09 - Finisce in SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            RevLcl_08 = RevLcl_End - RevLcl_Start;
        //        }
        //        // Inizia da SLOT_09 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == true)
        //        {
        //            RevLcl_09 = SLOT09_END - RevLcl_Start;
        //            RevLcl_10 = RevLcl_End - SLOT10_START;
        //        }


        //        // Inizia da SLOT_10 - Finisce in SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            RevLcl_10 = RevLcl_End - RevLcl_Start;
        //        }


        //        // ERRORE
        //        else
        //        {
        //            RevLcl_01 = RevLcl_End - RevLcl_Start;
        //        }




        //    }
        //    else
        //    {
        //        // Finisce in SLOT_01 - Inizia da SLOT01
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_01 = -(RevLcl_Start - RevLcl_End);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT02
        //        if (Flag_01 == true && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_01 = -(SLOT01_END - RevLcl_End);
        //            RevLcl_02 = -(RevLcl_Start - SLOT02_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT03
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_01 = -(SLOT01_END - RevLcl_End);
        //            RevLcl_02 = -(SLOT02_END - SLOT02_START);
        //            RevLcl_03 = -(RevLcl_Start - SLOT03_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT04
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_01 = -(SLOT01_END - RevLcl_End);
        //            RevLcl_02 = -(SLOT02_END - SLOT02_START);
        //            RevLcl_03 = -(SLOT03_END - SLOT03_START);
        //            RevLcl_04 = -(RevLcl_Start - SLOT04_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT05
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_01 = -(SLOT01_END - RevLcl_End);
        //            RevLcl_02 = -(SLOT02_END - SLOT02_START);
        //            RevLcl_03 = -(SLOT03_END - SLOT03_START);
        //            RevLcl_04 = -(SLOT04_END - SLOT04_START);
        //            RevLcl_05 = -(RevLcl_Start - SLOT05_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT06
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_01 = -(SLOT01_END - RevLcl_End);
        //            RevLcl_02 = -(SLOT02_END - SLOT02_START);
        //            RevLcl_03 = -(SLOT03_END - SLOT03_START);
        //            RevLcl_04 = -(SLOT04_END - SLOT04_START);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(RevLcl_Start - SLOT06_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT07
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_01 = -(SLOT01_END - RevLcl_End);
        //            RevLcl_02 = -(SLOT02_END - SLOT02_START);
        //            RevLcl_03 = -(SLOT03_END - SLOT03_START);
        //            RevLcl_04 = -(SLOT04_END - SLOT04_START);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(RevLcl_Start - SLOT07_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT08
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_01 = -(SLOT01_END - RevLcl_End);
        //            RevLcl_02 = -(SLOT02_END - SLOT02_START);
        //            RevLcl_03 = -(SLOT03_END - SLOT03_START);
        //            RevLcl_04 = -(SLOT04_END - SLOT04_START);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(SLOT07_END - SLOT07_START);
        //            RevLcl_08 = -(RevLcl_Start - SLOT08_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT09
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            RevLcl_01 = -(SLOT01_END - RevLcl_End);
        //            RevLcl_02 = -(SLOT02_END - SLOT02_START);
        //            RevLcl_03 = -(SLOT03_END - SLOT03_START);
        //            RevLcl_04 = -(SLOT04_END - SLOT04_START);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(SLOT07_END - SLOT07_START);
        //            RevLcl_08 = -(SLOT08_END - SLOT08_START);
        //            RevLcl_09 = -(RevLcl_Start - SLOT09_START);
        //        }
        //        // Finisce in SLOT_01 - Inizia da SLOT10
        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            RevLcl_01 = -(SLOT01_END - RevLcl_End);
        //            RevLcl_02 = -(SLOT02_END - SLOT02_START);
        //            RevLcl_03 = -(SLOT03_END - SLOT03_START);
        //            RevLcl_04 = -(SLOT04_END - SLOT04_START);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(SLOT07_END - SLOT07_START);
        //            RevLcl_08 = -(SLOT08_END - SLOT08_START);
        //            RevLcl_09 = -(SLOT09_END - SLOT09_START);
        //            RevLcl_10 = -(RevLcl_Start - SLOT10_START);
        //        }





        //        // Fnisce in  SLOT_02 - Inizia da SLOT02
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_02 = -(RevLcl_Start - RevLcl_End);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT03
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_02 = -(SLOT02_END - RevLcl_End);
        //            RevLcl_03 = -(RevLcl_Start - SLOT03_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT04
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_02 = -(SLOT02_END - RevLcl_End);
        //            RevLcl_03 = -(SLOT03_END - SLOT03_START);
        //            RevLcl_04 = -(RevLcl_Start - SLOT04_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT05
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_02 = -(SLOT02_END - RevLcl_End);
        //            RevLcl_03 = -(SLOT03_END - SLOT03_START);
        //            RevLcl_04 = -(SLOT04_END - SLOT04_START);
        //            RevLcl_05 = -(RevLcl_Start - SLOT05_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_02 = -(SLOT02_END - RevLcl_End);
        //            RevLcl_03 = -(SLOT03_END - SLOT03_START);
        //            RevLcl_04 = -(SLOT04_END - SLOT04_START);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(RevLcl_Start - SLOT06_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT07
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_02 = -(SLOT02_END - RevLcl_End);
        //            RevLcl_03 = -(SLOT03_END - SLOT03_START);
        //            RevLcl_04 = -(SLOT04_END - SLOT04_START);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(RevLcl_Start - SLOT07_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT08
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_02 = -(SLOT02_END - RevLcl_End);
        //            RevLcl_03 = -(SLOT03_END - SLOT03_START);
        //            RevLcl_04 = -(SLOT04_END - SLOT04_START);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(SLOT07_END - SLOT07_START);
        //            RevLcl_08 = -(RevLcl_Start - SLOT08_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            RevLcl_02 = -(SLOT02_END - RevLcl_End);
        //            RevLcl_03 = -(SLOT03_END - SLOT03_START);
        //            RevLcl_04 = -(SLOT04_END - SLOT04_START);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(SLOT07_END - SLOT07_START);
        //            RevLcl_08 = -(SLOT08_END - SLOT08_START);
        //            RevLcl_09 = -(RevLcl_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_02 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            RevLcl_02 = -(SLOT02_END - RevLcl_End);
        //            RevLcl_03 = -(SLOT03_END - SLOT03_START);
        //            RevLcl_04 = -(SLOT04_END - SLOT04_START);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(SLOT07_END - SLOT07_START);
        //            RevLcl_08 = -(SLOT08_END - SLOT08_START);
        //            RevLcl_09 = -(SLOT09_END - SLOT09_START);
        //            RevLcl_10 = -(RevLcl_Start - SLOT10_START);
        //        }




        //        // Fnisce in  SLOT_03 - Inizia da SLOT03
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_03 = -(RevLcl_Start - RevLcl_End);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT04
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_03 = -(SLOT03_END - RevLcl_End);
        //            RevLcl_04 = -(RevLcl_Start - SLOT04_START);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT05
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_03 = -(SLOT03_END - RevLcl_End);
        //            RevLcl_04 = -(SLOT04_END - SLOT04_START);
        //            RevLcl_05 = -(RevLcl_Start - SLOT05_START);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_03 = -(SLOT03_END - RevLcl_End);
        //            RevLcl_04 = -(SLOT04_END - SLOT04_START);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(RevLcl_Start - SLOT06_START);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_03 = -(SLOT03_END - RevLcl_End);
        //            RevLcl_04 = -(SLOT04_END - SLOT04_START);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(RevLcl_Start - SLOT07_START);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_03 = -(SLOT03_END - RevLcl_End);
        //            RevLcl_04 = -(SLOT04_END - SLOT04_START);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(SLOT07_END - SLOT07_START);
        //            RevLcl_08 = -(RevLcl_Start - SLOT08_START);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            RevLcl_03 = -(SLOT03_END - RevLcl_End);
        //            RevLcl_04 = -(SLOT04_END - SLOT04_START);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(SLOT07_END - SLOT07_START);
        //            RevLcl_08 = -(SLOT08_END - SLOT08_START);
        //            RevLcl_09 = -(RevLcl_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_03 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            RevLcl_03 = -(SLOT03_END - RevLcl_End);
        //            RevLcl_04 = -(SLOT04_END - SLOT04_START);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(SLOT07_END - SLOT07_START);
        //            RevLcl_08 = -(SLOT08_END - SLOT08_START);
        //            RevLcl_09 = -(SLOT09_END - SLOT09_START);
        //            RevLcl_10 = -(RevLcl_Start - SLOT10_START);
        //        }



        //        // Fnisce in  SLOT_04 - Inizia da SLOT04
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_04 = -(RevLcl_Start - RevLcl_End);
        //        }
        //        // Fnisce in  SLOT_04 - Inizia da SLOT05
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_04 = -(SLOT04_END - RevLcl_End);
        //            RevLcl_05 = -(RevLcl_Start - SLOT05_START);
        //        }
        //        // Fnisce in  SLOT_04 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_04 = -(SLOT04_END - RevLcl_End);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(RevLcl_Start - SLOT06_START);
        //        }
        //        // Fnisce in  SLOT_04 - Inizia da SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_04 = -(SLOT04_END - RevLcl_End);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(RevLcl_Start - SLOT07_START);
        //        }
        //        // Fnisce in  SLOT_04 - Inizia da SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_04 = -(SLOT04_END - RevLcl_End);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(SLOT07_END - SLOT07_START);
        //            RevLcl_08 = -(RevLcl_Start - SLOT08_START);
        //        }
        //        // Fnisce in  SLOT_04 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            RevLcl_04 = -(SLOT04_END - RevLcl_End);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(SLOT07_END - SLOT07_START);
        //            RevLcl_08 = -(SLOT08_END - SLOT08_START);
        //            RevLcl_09 = -(RevLcl_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_04 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            RevLcl_04 = -(SLOT04_END - RevLcl_End);
        //            RevLcl_05 = -(SLOT05_END - SLOT05_START);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(SLOT07_END - SLOT07_START);
        //            RevLcl_08 = -(SLOT08_END - SLOT08_START);
        //            RevLcl_09 = -(SLOT09_END - SLOT09_START);
        //            RevLcl_10 = -(RevLcl_Start - SLOT10_START);
        //        }


        //        // Fnisce in  SLOT_05 - Inizia da SLOT05
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_05 = -(RevLcl_Start - RevLcl_End);
        //        }
        //        // Fnisce in  SLOT_05 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_05 = -(SLOT05_END - RevLcl_End);
        //            RevLcl_06 = -(RevLcl_Start - SLOT06_START);
        //        }
        //        // Fnisce in  SLOT_05 - Inizia da SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_05 = -(SLOT05_END - RevLcl_End);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(RevLcl_Start - SLOT07_START);
        //        }
        //        // Fnisce in  SLOT_05 - Inizia da SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_05 = -(SLOT05_END - RevLcl_End);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(SLOT07_END - SLOT07_START);
        //            RevLcl_08 = -(RevLcl_Start - SLOT08_START);
        //        }
        //        // Fnisce in  SLOT_05 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            RevLcl_05 = -(SLOT05_END - RevLcl_End);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(SLOT07_END - SLOT07_START);
        //            RevLcl_08 = -(SLOT08_END - SLOT08_START);
        //            RevLcl_09 = -(RevLcl_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_05 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            RevLcl_05 = -(SLOT05_END - RevLcl_End);
        //            RevLcl_06 = -(SLOT06_END - SLOT06_START);
        //            RevLcl_07 = -(SLOT07_END - SLOT07_START);
        //            RevLcl_08 = -(SLOT08_END - SLOT08_START);
        //            RevLcl_09 = -(SLOT09_END - SLOT09_START);
        //            RevLcl_10 = -(RevLcl_Start - SLOT10_START);
        //        }



        //        // Fnisce in  SLOT_06 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_06 = -(RevLcl_Start - RevLcl_End);
        //        }
        //        // Fnisce in  SLOT_06 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_06 = -(SLOT06_END - RevLcl_End);
        //            RevLcl_07 = -(RevLcl_Start - SLOT07_START);
        //        }
        //        // Fnisce in  SLOT_06 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_06 = -(SLOT06_END - RevLcl_End);
        //            RevLcl_07 = -(SLOT07_END - SLOT07_START);
        //            RevLcl_08 = -(RevLcl_Start - SLOT08_START);
        //        }
        //        // Fnisce in  SLOT_06 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            RevLcl_06 = -(SLOT06_END - RevLcl_End);
        //            RevLcl_07 = -(SLOT07_END - SLOT07_START);
        //            RevLcl_08 = -(SLOT08_END - SLOT08_START);
        //            RevLcl_09 = -(RevLcl_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_06 - Inizia da SLOT06
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            RevLcl_06 = -(SLOT06_END - RevLcl_End);
        //            RevLcl_07 = -(SLOT07_END - SLOT07_START);
        //            RevLcl_08 = -(SLOT08_END - SLOT08_START);
        //            RevLcl_09 = -(SLOT09_END - SLOT09_START);
        //            RevLcl_10 = -(RevLcl_Start - SLOT10_START);
        //        }



        //        // Fnisce in  SLOT_07 - Inizia da SLOT07
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_07 = -(RevLcl_Start - RevLcl_End);
        //        }
        //        // Fnisce in  SLOT_07 - Inizia da SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_07 = -(SLOT07_END - RevLcl_End);
        //            RevLcl_08 = -(RevLcl_Start - SLOT08_START);
        //        }
        //        // Fnisce in  SLOT_07 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            RevLcl_07 = -(SLOT07_END - RevLcl_End);
        //            RevLcl_08 = -(SLOT08_END - SLOT08_START);
        //            RevLcl_09 = -(RevLcl_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_07 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            RevLcl_07 = -(SLOT07_END - RevLcl_End);
        //            RevLcl_08 = -(SLOT08_END - SLOT08_START);
        //            RevLcl_09 = -(SLOT09_END - SLOT09_START);
        //            RevLcl_10 = -(RevLcl_Start - SLOT10_START);
        //        }



        //        // Fnisce in  SLOT_08 - Inizia da SLOT08
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false)
        //        {
        //            RevLcl_08 = -(RevLcl_Start - RevLcl_End);
        //        }
        //        // Fnisce in  SLOT_08 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == true && Flag_10 == false)
        //        {
        //            RevLcl_08 = -(SLOT08_END - RevLcl_End);
        //            RevLcl_09 = -(RevLcl_Start - SLOT09_START);
        //        }
        //        // Fnisce in  SLOT_08 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == true)
        //        {
        //            RevLcl_08 = -(SLOT08_END - RevLcl_End);
        //            RevLcl_09 = -(SLOT09_END - SLOT09_START);
        //            RevLcl_10 = -(RevLcl_Start - SLOT10_START);
        //        }



        //        // Fnisce in  SLOT_09 - Inizia da SLOT09
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false)
        //        {
        //            RevLcl_08 = -(RevLcl_Start - RevLcl_End);
        //        }
        //        // Fnisce in  SLOT_09 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == true)
        //        {
        //            RevLcl_09 = -(SLOT09_END - RevLcl_End);
        //            RevLcl_10 = -(RevLcl_Start - SLOT10_START);
        //        }


        //        // Fnisce in  SLOT_10 - Inizia da SLOT10
        //        if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true)
        //        {
        //            RevLcl_10 = -(RevLcl_Start - RevLcl_End);
        //        }


        //        // ERRORE
        //        else
        //        {
        //            RevLcl_01 = -(RevLcl_Start - RevLcl_End);
        //        }


        //    }



        //    // Quantity
        //    // -----------------------------------
        //    if (RevLcl != 0 && Qty != 0)
        //    {
        //        Qty_01 = Qty * RevLcl_01 / RevLcl;
        //        Qty_02 = Qty * RevLcl_02 / RevLcl;
        //        Qty_03 = Qty * RevLcl_03 / RevLcl;
        //        Qty_04 = Qty * RevLcl_04 / RevLcl;
        //        Qty_05 = Qty * RevLcl_05 / RevLcl;
        //        Qty_06 = Qty * RevLcl_06 / RevLcl;
        //        Qty_07 = Qty * RevLcl_07 / RevLcl;
        //        Qty_08 = Qty * RevLcl_08 / RevLcl;
        //        Qty_09 = Qty * RevLcl_09 / RevLcl;
        //        Qty_10 = Qty * RevLcl_10 / RevLcl;
        //    }
        //    else if (RevLcl == 0 & Qty != 0)
        //    {
        //        Qty_01 = 0;
        //        Qty_02 = 0;
        //        Qty_03 = 0;
        //        Qty_04 = 0;
        //        Qty_05 = 0;
        //        Qty_06 = 0;
        //        Qty_07 = 0;
        //        Qty_08 = 0;
        //        Qty_09 = 0;
        //        Qty_10 = 0;
        //    }
        //    else if (RevLcl != 0 && Qty == 0)
        //    {
        //        Qty_01 = 0;
        //        Qty_02 = 0;
        //        Qty_03 = 0;
        //        Qty_04 = 0;
        //        Qty_05 = 0;
        //        Qty_06 = 0;
        //        Qty_07 = 0;
        //        Qty_08 = 0;
        //        Qty_09 = 0;
        //        Qty_10 = 0;

        //        if (Flag_01 == true && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false) { Qty_01 = Qty; }
        //        else if (Flag_01 == false && Flag_02 == true && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false) { Qty_02 = Qty; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == true && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false) { Qty_03 = Qty; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == true && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false) { Qty_04 = Qty; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == true && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false) { Qty_05 = Qty; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == true && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == false) { Qty_06 = Qty; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == true && Flag_08 == false && Flag_09 == false && Flag_10 == false) { Qty_07 = Qty; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == true && Flag_09 == false && Flag_10 == false) { Qty_08 = Qty; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == true && Flag_10 == false) { Qty_09 = Qty; }
        //        else if (Flag_01 == false && Flag_02 == false && Flag_03 == false && Flag_04 == false && Flag_05 == false && Flag_06 == false && Flag_07 == false && Flag_08 == false && Flag_09 == false && Flag_10 == true) { Qty_10 = Qty; }
        //        else { Qty_01 = Qty; }
        //    }
        //    else
        //    {
        //        Qty_01 = 0;
        //        Qty_02 = 0;
        //        Qty_03 = 0;
        //        Qty_04 = 0;
        //        Qty_05 = 0;
        //        Qty_06 = 0;
        //        Qty_07 = 0;
        //        Qty_08 = 0;
        //        Qty_09 = 0;
        //        Qty_10 = 0;
        //    }


        //}


        //public void Royalty_Paid(
        //    in double RoyLcl,
        //    in double RoyLcl_Start,
        //    in double RoyLcl_End,
        //    in double MODEL_MIN_ACCUMULATED_ROYALTY,
        //    in double MODEL_MIN_EACH_YEAR_ROYALTY,
        //    in double MODEL_MIN_EACH_QUARTER_ROYALTY,
        //    in double MODEL_MAX_ACCUMULATED_ROYALTY,
        //    in double MODEL_MAX_EACH_YEAR_ROYALTY,
        //    in double MODEL_MAX_EACH_QUARTER_ROYALTY,
        //    in double EXCHANGE_RATE,
        //    ref double RoyLcl_Paid,
        //    ref double RoyLcl_Paid_Start,
        //    ref double RoyLcl_Paid_End,
        //    ref double RoyUSD_Paid,
        //    ref double RoyUSD_Paid_Start,
        //    ref double RoyUSD_Paid_End
        //    )
        //{
        //    if (RoyLcl >= 0)
        //    {
        //        if (RoyLcl_Start < MODEL_MIN_ACCUMULATED_ROYALTY && RoyLcl_End < MODEL_MIN_ACCUMULATED_ROYALTY) 
        //        { 
        //            RoyLcl_Paid = 0; 
        //        }
        //        else if (RoyLcl_Start < MODEL_MIN_ACCUMULATED_ROYALTY && RoyLcl_End >= MODEL_MIN_ACCUMULATED_ROYALTY && RoyLcl_End < MODEL_MAX_ACCUMULATED_ROYALTY) 
        //        { 
        //            RoyLcl_Paid = RoyLcl_End - MODEL_MIN_ACCUMULATED_ROYALTY; 
        //        }
        //        else if (RoyLcl_Start < MODEL_MIN_ACCUMULATED_ROYALTY && RoyLcl_End >= MODEL_MAX_ACCUMULATED_ROYALTY) 
        //        { 
        //            RoyLcl_Paid = MODEL_MAX_ACCUMULATED_ROYALTY - MODEL_MIN_ACCUMULATED_ROYALTY; 
        //        }
        //        else if (RoyLcl_Start >= MODEL_MIN_ACCUMULATED_ROYALTY && RoyLcl_Start < MODEL_MAX_ACCUMULATED_ROYALTY && RoyLcl_End >= MODEL_MIN_ACCUMULATED_ROYALTY && RoyLcl_End < MODEL_MAX_ACCUMULATED_ROYALTY) 
        //        { 
        //            RoyLcl_Paid = RoyLcl; 
        //        }
        //        else if (RoyLcl_Start >= MODEL_MIN_ACCUMULATED_ROYALTY && RoyLcl_Start < MODEL_MAX_ACCUMULATED_ROYALTY && RoyLcl_End >= MODEL_MAX_ACCUMULATED_ROYALTY) 
        //        { 
        //            RoyLcl_Paid = MODEL_MAX_ACCUMULATED_ROYALTY - RoyLcl_Start; 
        //        }
        //        else 
        //        { 
        //            RoyLcl_Paid = 0; 
        //        }
        //    }
        //    else
        //    {
        //        if (RoyLcl_End < MODEL_MIN_ACCUMULATED_ROYALTY && RoyLcl_Start < MODEL_MIN_ACCUMULATED_ROYALTY) 
        //        { 
        //            RoyLcl_Paid = 0; 
        //        }
        //        else if (RoyLcl_End < MODEL_MIN_ACCUMULATED_ROYALTY && RoyLcl_Start >= MODEL_MIN_ACCUMULATED_ROYALTY && RoyLcl_Start < MODEL_MAX_ACCUMULATED_ROYALTY) 
        //        { 
        //            RoyLcl_Paid = -(RoyLcl_Start - MODEL_MIN_ACCUMULATED_ROYALTY); 
        //        }
        //        else if (RoyLcl_End < MODEL_MIN_ACCUMULATED_ROYALTY && RoyLcl_Start >= MODEL_MAX_ACCUMULATED_ROYALTY) 
        //        { 
        //            RoyLcl_Paid = -(MODEL_MAX_ACCUMULATED_ROYALTY - MODEL_MIN_ACCUMULATED_ROYALTY); 
        //        }
        //        else if (RoyLcl_End >= MODEL_MIN_ACCUMULATED_ROYALTY && RoyLcl_End < MODEL_MAX_ACCUMULATED_ROYALTY && RoyLcl_Start >= MODEL_MIN_ACCUMULATED_ROYALTY && RoyLcl_Start < MODEL_MAX_ACCUMULATED_ROYALTY) 
        //        { 
        //            RoyLcl_Paid = RoyLcl; 
        //        }
        //        else if (RoyLcl_End >= MODEL_MIN_ACCUMULATED_ROYALTY && RoyLcl_End < MODEL_MAX_ACCUMULATED_ROYALTY && RoyLcl_Start >= MODEL_MAX_ACCUMULATED_ROYALTY) 
        //        { 
        //            RoyLcl_Paid = -(MODEL_MAX_ACCUMULATED_ROYALTY - RoyLcl_Start); 
        //        }
        //        else 
        //        { 
        //            RoyLcl_Paid = 0; 
        //        }
        //    }

        //    RoyLcl_Paid_End = RoyLcl_Paid_Start + RoyLcl_Paid;
        //    RoyUSD_Paid = RoyLcl_Paid * EXCHANGE_RATE;
        //    RoyUSD_Paid_End = RoyUSD_Paid_Start + RoyUSD_Paid;


        //}









        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a3a8ce533a1f4654a4a4359d9ff77ead")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a3a8ce533a1f4654a4a4359d9ff77ead")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Class1.cs"
                    Encoding="UTF8"><![CDATA[using System;
using System.Data;
using System.Xml;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Configuration;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Data.OleDb;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Runtime.Enumerators;
using System.Data.SqlTypes;

namespace ST_a3a8ce533a1f4654a4a4359d9ff77ead
{
    internal class Class1
    {
        public static void Query_Quarters_TEST(
            in string Plan,
            in DataTable List_Quarter_Actual_Dt,
            ref DataTable Quarter_Dt)
        {

            MessageBox.Show("PIPPO");
            // Variabili interne
            // -----------------------------------
            string SqlString = "";


            if (Plan == "ACTUAL")
            {
                Quarter_Dt.Clear();
                Quarter_Dt = List_Quarter_Actual_Dt.Copy();

                Quarter_Dt.DefaultView.Sort = "[QUARTER (yyyyQq)]";
                Quarter_Dt = Quarter_Dt.DefaultView.ToTable();
            }
            else
            {
                SqlConnection SqlConn = new SqlConnection(@"Data Source = AGRCLFRSSQLPR.AGRMFG.STMMFG.COM\SRMPRD; Integrated Security=true; Initial Catalog = ROYALTY; Connection Timeout = 0");

                SqlString = @"
                   SELECT DISTINCT
                       SUBSTRING([DateQuarter],1,4) + 'Q' + SUBSTRING([DateQuarter],5,1) AS [QUARTER (yyyyQq)]
                   FROM [EPM].[dbo].[EPM_SMF]
                   WHERE
                       [VersionVersion] = '" + Plan + "' " + @"
                   ORDER BY
                       SUBSTRING([DateQuarter],1,4) + 'Q' + SUBSTRING([DateQuarter],5,1) ";
                SqlDataAdapter SqlAd_List_Quarter = new SqlDataAdapter(SqlString, SqlConn);
                SqlAd_List_Quarter.Fill(Quarter_Dt);

                SqlConn.Close();


                Quarter_Dt.DefaultView.Sort = "[QUARTER (yyyyQq)]";
                Quarter_Dt = Quarter_Dt.DefaultView.ToTable();
            }


        }

    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Class2.cs"
                    Encoding="UTF8"><![CDATA[using System;
using System.Data;
using System.Xml;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Configuration;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Data.OleDb;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Runtime.Enumerators;
using System.Data.SqlTypes;
using System.Text;
using System.Threading.Tasks;

namespace ST_a3a8ce533a1f4654a4a4359d9ff77ead
{
    internal class Class2
    {

        public static void PIPPO()
        {
            MessageBox.Show("PIPPO");
        }


    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_1090d63b87754ae2970f162a9a015fde.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A34FD5A7-2AA0-411E-8E0A-92BA694FBA95}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a3a8ce533a1f4654a4a4359d9ff77ead</RootNamespace>
    <AssemblyName>ST_1090d63b87754ae2970f162a9a015fde</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <LangVersion>7.2</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <LangVersion>7.2</LangVersion>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Class1.cs" />
    <Compile Include="Class2.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_1090d63b87754ae2970f162a9a015fde</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_1090d63b87754ae2970f162a9a015fde</msb:DisplayName>
    <msb:ProjectId>{FDED0C4B-7A65-43CD-8ABD-66C905F7E41E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_1090d63b87754ae2970f162a9a015fde.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Class1.cs" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Class2.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:Breakpoint Include="e1826b2563584d0593c8918baaed2a4b">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:ColumnNumber>13</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>164</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="fd065a9fdc3648eb84904b6817773025">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:LineNumber>105</msb:LineNumber>
      <msb:ColumnNumber>13</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Settings.get_Default():ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Sett" +
    "ings")]

namespace ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_1090d63b87754ae2970f162a9a015fde.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABOOLWgAAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAAVjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAQ5AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAXBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA4
OQAAAAAAAEgAAAACAAUATCMAAAAVAAABAAAAAAAAAEw4AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqEzAEANABAAABAAARAigRAAAKbxIAAApyAQAA
cG8TAAAKbxQAAAp0EQAAAQoCKBEAAApvEgAACnInAABwbxMAAApvFAAACnQRAAABJgIoEQAACm8S
AAAKcksAAHBvEwAACm8UAAAKdBEAAAEmAigRAAAKbxIAAApyZwAAcG8TAAAKbxQAAAp0EQAAASYC
KBEAAApvEgAACnKXAABwbxMAAApvFAAACnQRAAABJgIoEQAACm8SAAAKcr0AAHBvEwAACm8UAAAK
dBEAAAELAigRAAAKbxIAAApy9wAAcG8TAAAKbxQAAAp0HgAAASYCKBEAAApvEgAACnIXAQBwbxMA
AApvFAAACnQeAAABJgIoEQAACm8SAAAKci0BAHBvEwAACm8UAAAKdBEAAAECKBEAAApvEgAACnJP
AQBwbxMAAApvFAAACnQRAAABAigRAAAKbxIAAApygQEAcG8TAAAKbxQAAAp0EQAAASYHbxUAAAoM
Bm8VAAAKDQZvFQAAChMEJW8VAAAKEwVvFQAAChMGJW8VAAAKEwclbxUAAAoIbxYAAAoJbxYAAAoR
BG8WAAAKEQZvFgAAChEFbxYAAAoRB28WAAAKbxYAAApvFgAACgIoEQAAChZvFwAACioeAigYAAAK
KhMwAwCZAAAAAgAAEXKrAQBwKBkAAAomAlBytwEAcCgaAAAKLDAEUG8WAAAKBANQbxsAAApRBFBv
HAAACnLFAQBwbx0AAAoEBFBvHAAACm8eAAAKUSpy6wEAcHMfAAAKCnLwAgBwAlByBwUAcCggAAAK
BnMhAAAKBFBvIgAACiYGbyMAAAoEUG8cAAAKcsUBAHBvHQAACgQEUG8cAAAKbx4AAApRKh4CKCQA
AAoqMnKrAQBwKBkAAAomKq5+AQAABC0ecv4FAHDQBwAAAiglAAAKbyYAAApzJwAACoABAAAEfgEA
AAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKCgAAAoqLnMOAAAGgAMAAAQqQlNKQgEAAQAAAAAA
DAAAAHY0LjAuMzAzMTkAAAAABQBsAAAANAUAACN+AACgBQAAMAcAACNTdHJpbmdzAAAAANAMAABw
BgAAI1VTAEATAAAQAAAAI0dVSUQAAABQEwAAsAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6
ATMAFgAAAQAAACcAAAAJAAAABgAAAA8AAAAEAAAAKAAAAAIAAAAWAAAAAgAAAAIAAAADAAAABAAA
AAEAAAAGAAAAAQAAAAEAAAAAADMEAQAAAAAABgDRAl4FBgB0A14FBgAdAksFDwDSBQAABgBKArsE
BgC0ArsEBgCVArsEBgBbA7sEBgDxArsEBgAKA7sEBgBhArsEBgB8AqIDBgDlAV4FBgCIA2kECgAl
A+IDCgCEAeIDDgDqAH0ABgBwBGkEBgCaBmkEDgDaBMkGBgAAAksFBgARBX4FBgD7BKYEEgC+AR0E
EgAxAh0EEgCgAZEECgALBOIDFgAUBikBFgD8ACkBBgC8A2kEGgAGBz4GGgCtBj4GDgDoBn0ADgAv
BckGDgAhBegEDgDNBOgEBgBPAWkEBgAFAWkEBgAVB7sEAAAAADMAAAAAAAEAAQAAARAA0wEnBjkA
AQABAAABEABHA14FOQABAAIAAQAQAIYEDwBBAAEAAwAAABAAAQCSAE0AAQAFAAAAEAAIAJIATQAB
AAcAAAAQAIUF4QVNAAEACQAAARAAHgbhBWkAAwANAAMBAABjBgAASQAEABAAEQB1BKYAEQB0AaoA
EQC2AK4ABgZ1ALIAVoBTBrUAVoBUAbUAUCAAAAAAhhg+BQYAAQBQIAAAAACGGD4FBgABAFggAAAA
AIYAjAQGAAEANCIAAAAAhhg+BQYAAQA8IgAAAACWAGEAuQABAOEiAAAAAIYYPgUGAAQA6SIAAAAA
lgA8AMUABADhIgAAAACGGD4FBgAEAOEiAAAAAIMYPgUGAAQA9iIAAAAAkwgNBckABAAiIwAAAACT
CFwBzgAEACkjAAAAAJMIaAHTAAQAMSMAAAAAlgihBtkABQA4IwAAAACGGD4FBgAFAEAjAAAAAJEY
RAXFAAUAAQABAIEEAQACAHEGAAADAIgGAAABAJwDCQA+BQEAEQA+BQYAGQA+BQoAKQA+BRAAMQA+
BRAAOQA+BRAAQQA+BRAASQA+BRAAUQA+BRAAWQA+BRAAYQA+BRAAaQA+BQYAeQA+BQYAqQA+BQYA
yQA+BRUAcQA+BQYAgQBbBi4A2QAQBjMA4QBgBDgA6QCSAz4AiQBJAUIAiQAHBQYA2QC6BgEAgQA+
BQYA+QABB0wA8QAjB1MAiQAeB0IAiQDxBlkACQHfBhAACQH0AEIAoQA+BRAA8QCTBl8AEQE+BWYA
GQFbBG0AIQG4AQYAmQA+BQYAKQEXAXMAKQERB3wAsQA+BYIA0QA+BQYACAAUAJwACAAYAKEAJAAS
AKEAKQB7ABUBLgALAO0ALgATAPYALgAbABUBLgAjAB4BLgArAEcBLgAzAEcBLgA7AEcBLgBDAB4B
LgBLAE0BLgBTAEcBLgBbAGQBQwBjAKEAQwAKAKEARAASAKEASQB7ABUBYQBjAKEAYwBjAKEAYwAK
AKEAgwBrAKEA4wBzAKEAGwBHAAcAAQAIAAMAAAARBd4AAAB8AeMAAAClBugAAgAKAAMAAgALAAUA
AQAMAAUAAgANAAcABIAAAAEAAAA4JFlJAAAAAAAAxgAAAAQAAAAAAAAAAAAAAIoAiQAAAAAADgAA
AAAAAAAAAAAAkwDDAwAAAAAEAAAAAAAAAAAAAACKAH0AAAAAAAQAAAAAAAAAAAAAAIoAaQQAAAAA
DgAAAAAAAAAAAAAAkwBCAAAAAAAEAAAAAAAAAAAAAACKAD4GAAAAAAAAAAABAAAAjwUAAAkABAAA
AAAAAENsYXNzMQBDbGFzczIAU1RfYmYzYjBlNWIyMzBkNDA3MDkzYTVhYzQ3NmIxNDA2MDkAPE1v
ZHVsZT4AUElQUE8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAFF1ZXJ5X1F1YXJ0ZXJz
X1RFU1QAdmFsdWVfXwBTeXN0ZW0uRGF0YQBtc2NvcmxpYgBTVF9hM2E4Y2U1MzNhMWY0NjU0YTRh
NDM1OWQ5ZmY3N2VhZABkZWZhdWx0SW5zdGFuY2UAU1RfMTA5MGQ2M2I4Nzc1NGFlMjk3MGYxNjJh
OWEwMTVmZGUARGF0YVRhYmxlAFRvVGFibGUAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0
VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBDbG9uZQBUeXBl
AEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNj
cmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBFZGl0b3JC
cm93c2FibGVTdGF0ZQBFbWJlZGRlZEF0dHJpYnV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0
ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlv
bkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhh
dGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0
QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBJc1JlYWRPbmx5QXR0
cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJp
YnV0ZQBnZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcATWlj
cm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tz
LlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzEw
OTBkNjNiODc3NTRhZTI5NzBmMTYyYTlhMDE1ZmRlLmRsbABGaWxsAGdldF9JdGVtAFN5c3RlbQBF
bnVtAHJlc291cmNlTWFuAFBsYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBEYkNvbm5lY3Rpb24AU3FsQ29ubmVj
dGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AQ3VsdHVyZUluZm8AQ2xlYXIAZ2V0X1Jlc291cmNlTWFu
YWdlcgBEYkRhdGFBZGFwdGVyAFNxbERhdGFBZGFwdGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlh
Z25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2Vz
AFNUX2EzYThjZTUzM2ExZjQ2NTRhNGE0MzU5ZDlmZjc3ZWFkLlByb3BlcnRpZXMuUmVzb3VyY2Vz
LnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF9hM2E4Y2U1MzNhMWY0NjU0YTRhNDM1OWQ5ZmY3
N2VhZC5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MATWljcm9zb2Z0LkNvZGVBbmFs
eXNpcwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBM
aXN0X1F1YXJ0ZXJfQWN0dWFsX0R0AFF1YXJ0ZXJfRHQAQ29uY2F0AE9iamVjdABnZXRfRGVmYXVs
dABEaWFsb2dSZXN1bHQAc2V0X1Rhc2tSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AHNldF9T
b3J0AERhdGFWaWV3AGdldF9EZWZhdWx0VmlldwBTaG93AE1lc3NhZ2VCb3gAZ2V0X0Fzc2VtYmx5
AENvcHkAb3BfRXF1YWxpdHkAAAAlVQBzAGUAcgA6ADoAQQBnAHIAZQBlAG0AZQBuAHQAXwBEAHQA
ACNVAHMAZQByADoAOgBFAHgAYwBoAGEAbgBnAGUAXwBEAHQAABtVAHMAZQByADoAOgBJAG4AaQB0
AF8ARAB0AAAvVQBzAGUAcgA6ADoATABpAHMAdABfAEEAZwByAGUAZQBtAGUAbgB0AF8ARAB0AAAl
VQBzAGUAcgA6ADoATABpAHMAdABfAFAAbABhAG4AXwBEAHQAADlVAHMAZQByADoAOgBMAGkAcwB0
AF8AUQB1AGEAcgB0AGUAcgBfAEEAYwB0AHUAYQBsAF8ARAB0AAAfVQBzAGUAcgA6ADoAQQBnAHIA
ZQBlAG0AZQBuAHQAABVVAHMAZQByADoAOgBQAGwAYQBuAAAhVQBzAGUAcgA6ADoAUgBvAHkAYQBs
AHQAeQBfAEQAdAAAMVUAcwBlAHIAOgA6AFMAYQBwAEEAYwB0AF8ARgBvAHIAZQBjAGEAcwB0AF8A
RAB0AAApVQBzAGUAcgA6ADoAUgBvAHkAYQBsAHQAeQBfAEMAdQBtAF8ARAB0AAALUABJAFAAUABP
AAANQQBDAFQAVQBBAEwAACVbAFEAVQBBAFIAVABFAFIAIAAoAHkAeQB5AHkAUQBxACkAXQAAgQNE
AGEAdABhACAAUwBvAHUAcgBjAGUAIAA9ACAAQQBHAFIAQwBMAEYAUgBTAFMAUQBMAFAAUgAuAEEA
RwBSAE0ARgBHAC4AUwBUAE0ATQBGAEcALgBDAE8ATQBcAFMAUgBNAFAAUgBEADsAIABJAG4AdABl
AGcAcgBhAHQAZQBkACAAUwBlAGMAdQByAGkAdAB5AD0AdAByAHUAZQA7ACAASQBuAGkAdABpAGEA
bAAgAEMAYQB0AGEAbABvAGcAIAA9ACAAUgBPAFkAQQBMAFQAWQA7ACAAQwBvAG4AbgBlAGMAdABp
AG8AbgAgAFQAaQBtAGUAbwB1AHQAIAA9ACAAMAAAghUNAAoAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIABTAEUATABFAEMAVAAgAEQASQBTAFQASQBOAEMAVAANAAoAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMAVQBCAFMAVABSAEkATgBH
ACgAWwBEAGEAdABlAFEAdQBhAHIAdABlAHIAXQAsADEALAA0ACkAIAArACAAJwBRACcAIAArACAA
UwBVAEIAUwBUAFIASQBOAEcAKABbAEQAYQB0AGUAUQB1AGEAcgB0AGUAcgBdACwANQAsADEAKQAg
AEEAUwAgAFsAUQBVAEEAUgBUAEUAUgAgACgAeQB5AHkAeQBRAHEAKQBdAA0ACgAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEYAUgBPAE0AIABbAEUAUABNAF0ALgBbAGQAYgBv
AF0ALgBbAEUAUABNAF8AUwBNAEYAXQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIABXAEgARQBSAEUADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIABbAFYAZQByAHMAaQBvAG4AVgBlAHIAcwBpAG8AbgBdACAAPQAgACcAAYD1JwAg
AA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAE8AUgBEAEUAUgAgAEIA
WQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFMAVQBC
AFMAVABSAEkATgBHACgAWwBEAGEAdABlAFEAdQBhAHIAdABlAHIAXQAsADEALAA0ACkAIAArACAA
JwBRACcAIAArACAAUwBVAEIAUwBUAFIASQBOAEcAKABbAEQAYQB0AGUAUQB1AGEAcgB0AGUAcgBd
ACwANQAsADEAKQAgAAFxUwBUAF8AYQAzAGEAOABjAGUANQAzADMAYQAxAGYANAA2ADUANABhADQA
YQA0ADMANQA5AGQAOQBmAGYANwA3AGUAYQBkAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBz
AG8AdQByAGMAZQBzAADcp0oRWWwpRZdiBbOSENvqAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFh
EgcIEkUSRRJFEkUSRRJFEkUSRQQgABJtBCAAEnEFIAESdRwDIAAcBCAAEkUEBwESUQYAARGAgQ4F
AAICDg4FIAASgIUGAAMODg4OBiACAQ4SUQUgAQgSRQgAARKAlRGAmQUgABKAnQcgAgEOEoCdCLd6
XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElkDBhJdAwYSIAIGCAMGESQLAAMBEA4QEkUQEkUD
AAABBAAAElkEAAASXQUAAQESXQQAABIgBAgAElkECAASXQQIABIgCAEACAAAAAAAHgEAAQBUAhZX
cmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9hM2E4Y2U1MzNhMWY0NjU0YTRh
NDM1OWQ5ZmY3N2VhZAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIyAABJAQAaLk5FVEZyYW1l
d29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3Jr
IDQuNQAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBt
c2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2Vu
PWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAA
AAAAAAAAAABQQURQQURQtAAAACw5AAAAAAAAAAAAAEY5AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA4OQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAWUk4JAAAAQBZSTgkPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwBhADMAYQA4AGMAZQA1ADMAMwBhADEAZgA0ADYANQA0AGEANABhADQAMwA1ADkAZAA5AGYA
ZgA3ADcAZQBhAGQAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOQAy
ADcAMgAuADEAOAA3ADcANwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQA
XwAxADAAOQAwAGQANgAzAGIAOAA3ADcANQA0AGEAZQAyADkANwAwAGYAMQA2ADIAYQA5AGEAMAAx
ADUAZgBkAGUALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMA
bwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMgAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfADEAMAA5ADAAZAA2ADMAYgA4ADcANwA1ADQAYQBlADIAOQA3ADAAZgAxADYAMgBh
ADkAYQAwADEANQBmAGQAZQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwBhADMAYQA4AGMAZQA1ADMAMwBhADEAZgA0ADYANQA0AGEANABhADQAMwA1ADkAZAA5
AGYAZgA3ADcAZQBhAGQAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADkAMgA3ADIALgAxADgANwA3ADcAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADkAMgA3ADIALgAxADgANwA3ADcAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAWDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                  <Breakpoint
                    Enabled="True"
                    File="ScriptMain.cs"
                    Line="164"
                    Column="13" />
                  <Breakpoint
                    Enabled="True"
                    File="ScriptMain.cs"
                    Line="105"
                    Column="13" />
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{3FC0ACB4-B7EA-4BF3-B243-4ED530F03D3D}"
              DTS:ObjectName="{3FC0ACB4-B7EA-4BF3-B243-4ED530F03D3D}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::Agreement" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{4857CFB9-1473-4438-8294-5BCD7E3D331A}"
          DTS:ObjectName="{4857CFB9-1473-4438-8294-5BCD7E3D331A}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::Plan" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Refresh Royalty_Cube"
      DTS:CreationName="Microsoft.DTSProcessingTask"
      DTS:Description="Analysis Services Processing Task"
      DTS:Disabled="True"
      DTS:DTSID="{DF2748FA-A6E7-4985-A27C-76696F7CEE42}"
      DTS:ExecutableType="Microsoft.DTSProcessingTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Refresh Royalty_Cube"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ASProcessingData
          ConnectionName=""
          ProcessingCommands="" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Reotg All"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{b80650dc-b321-4355-aed8-dd19941402bb}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Reotg All"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{99b06ae1-6b55-4c3f-b639-50e988b8156d}"
          SQLTask:SqlStmtSourceType="FileConnection"
          SQLTask:SqlStatementSource="Reorg All.sql" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Royalty - Succesfully run"
      DTS:CreationName="Microsoft.SendMailTask"
      DTS:Description="Send Mail Task"
      DTS:Disabled="True"
      DTS:DTSID="{da776597-87e4-42ab-88e0-ec2811f3588b}"
      DTS:ExecutableType="Microsoft.SendMailTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Royalty - Succesfully run"
      DTS:TaskContact="Send Mail Task; Microsoft Corporation; SQL Server 2017 RC1; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SendMailTask:SendMailTaskData
          SendMailTask:SMTPServer="{A300F8DF-8CD4-44A7-BD10-0F9E76E438EA}"
          SendMailTask:From="ADG_CTLG_DM@st.com"
          SendMailTask:To="paolo.burigana@st.com;andrea.martinelli@st.com"
          SendMailTask:Subject="Royalty Forecast - Succesfully run"
          SendMailTask:MessageSource="Royalty Forecast - Succesfully run" xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Tables from SQL to DataTable"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{8294851a-2377-4795-8334-aba3081566c6}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Tables from SQL to DataTable"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_1227d907d7c14d4a930f6117785cabad"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::Agreement_Dt,User::Exchange_Dt,User::Init_Dt,User::List_Agreement_Dt,User::List_Plan_Dt,User::List_Quarter_Actual_Dt">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Settings.get_Default():ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Sett" +
    "ings")]

namespace ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_1227d907d7c14d4a930f6117785cabad.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a34fd5a7-2aa0-411e-8e0a-92ba694fba95}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a3a8ce533a1f4654a4a4359d9ff77ead</RootNamespace>
    <AssemblyName>ST_1227d907d7c14d4a930f6117785cabad</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Xml;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Configuration;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Data.OleDb;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.SqlServer.Dts.Runtime.Enumerators;
#endregion

namespace ST_bf3b0e5b230d407093a5ac476b140609
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {

            // Import user variables
            // -----------------------------------
            DataTable Agreement_Dt = (DataTable)Dts.Variables["User::Agreement_Dt"].Value;
            DataTable Exchange_Dt = (DataTable)Dts.Variables["User::Exchange_Dt"].Value;
            DataTable Init_Dt = (DataTable)Dts.Variables["User::Init_Dt"].Value;
            DataTable List_Agreement_Dt = (DataTable)Dts.Variables["User::List_Agreement_Dt"].Value;
            DataTable List_Plan_Dt = (DataTable)Dts.Variables["User::List_Plan_Dt"].Value;
            DataTable List_Quarter_Actual_Dt = (DataTable)Dts.Variables["User::List_Quarter_Actual_Dt"].Value;



            // Empty datatable
            // -----------------------------------
            Agreement_Dt.Clear();
            Exchange_Dt.Clear();
            Init_Dt.Clear();
            List_Agreement_Dt.Clear();
            List_Plan_Dt.Clear();
            List_Quarter_Actual_Dt.Clear();


            // Internal variables
            // -----------------------------------
            string SqlString = "";


            // SQL Query
            // -----------------------------------
            SqlConnection SqlConn = new SqlConnection(@"Data Source = AGRCLFRSSQLQA.agrmfg.stmmfg.com\SRMTST; Integrated Security=true; Initial Catalog = ROYALTY; Connection Timeout = 0");

            SqlString = "SELECT * FROM [ROYALTY].[dbo].[ROYALTY_AGREEMENT] WHERE [MODEL_ACTIVE] = 'Y' ";
            SqlDataAdapter SqlAd_Agreement = new SqlDataAdapter(SqlString, SqlConn);
            SqlAd_Agreement.Fill(Agreement_Dt);

            SqlString = "SELECT * FROM [ROYALTY].[dbo].[ROYALTY_EXCHANGE_RATE] ";
            SqlDataAdapter SqlAd_Exchange = new SqlDataAdapter(SqlString, SqlConn);
            SqlAd_Exchange.Fill(Exchange_Dt);

            SqlString = "SELECT * FROM [ROYALTY].[dbo].[ROYALTY_INIT] ";
            SqlDataAdapter SqlAd_Init = new SqlDataAdapter(SqlString, SqlConn);
            SqlAd_Init.Fill(Init_Dt);

            SqlString = "SELECT * FROM [ROYALTY].[dbo].[ROYALTY_LIST_AGREEMENT] ";
            SqlDataAdapter SqlAd_List_Agreement = new SqlDataAdapter(SqlString, SqlConn);
            SqlAd_List_Agreement.Fill(List_Agreement_Dt);

            SqlString = "SELECT * FROM [ROYALTY].[dbo].[ROYALTY_LIST_PLAN] ";
            SqlDataAdapter SqlAd_List_Plan = new SqlDataAdapter(SqlString, SqlConn);
            SqlAd_List_Plan.Fill(List_Plan_Dt);

            SqlString = "SELECT * FROM [ROYALTY].[dbo].[ROYALTY_LIST_QUARTER_ACTUAL] ";
            SqlDataAdapter SqlAd_List_Quarter_Actual = new SqlDataAdapter(SqlString, SqlConn);
            SqlAd_List_Quarter_Actual.Fill(List_Quarter_Actual_Dt);

            SqlConn.Close();


            // Inserisci il record ACTUAL alla lista dei piani da elaborare
            // -----------------------------------
            DataRow dr = List_Plan_Dt.NewRow();
            dr[0] = "ACTUAL";
            List_Plan_Dt.Rows.Add(dr);




            // Ordina i datatable
            // -----------------------------------
            Agreement_Dt.DefaultView.Sort = "AGREEMENT_ID";
            Agreement_Dt = Agreement_Dt.DefaultView.ToTable();

            Exchange_Dt.DefaultView.Sort = "QUARTER (yyyyQq)";
            Exchange_Dt = Exchange_Dt.DefaultView.ToTable();

            Init_Dt.DefaultView.Sort = "AGREEMENT";
            Init_Dt = Init_Dt.DefaultView.ToTable();

            List_Agreement_Dt.DefaultView.Sort = "AGREEMENT";
            List_Agreement_Dt = List_Agreement_Dt.DefaultView.ToTable();

            List_Plan_Dt.DefaultView.Sort = "PLAN";
            List_Plan_Dt = List_Plan_Dt.DefaultView.ToTable();

            List_Quarter_Actual_Dt.DefaultView.Sort = "QUARTER (yyyyQq)";
            List_Quarter_Actual_Dt = List_Quarter_Actual_Dt.DefaultView.ToTable();


            // Upload
            // -----------------------------------
            Dts.Variables["User::Agreement_Dt"].Value = Agreement_Dt;
            Dts.Variables["User::Exchange_Dt"].Value = Exchange_Dt;
            Dts.Variables["User::Init_Dt"].Value = Init_Dt;
            Dts.Variables["User::List_Agreement_Dt"].Value = List_Agreement_Dt;
            Dts.Variables["User::List_Plan_Dt"].Value = List_Plan_Dt;
            Dts.Variables["User::List_Quarter_Actual_Dt"].Value = List_Quarter_Actual_Dt;



            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_1227d907d7c14d4a930f6117785cabad</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_1227d907d7c14d4a930f6117785cabad</msb:DisplayName>
    <msb:ProjectId>{4A256F2B-F536-4E8B-8FF5-A2756080046B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_1227d907d7c14d4a930f6117785cabad.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a3a8ce533a1f4654a4a4359d9ff77ead")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a3a8ce533a1f4654a4a4359d9ff77ead")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a3a8ce533a1f4654a4a4359d9ff77ead.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_1227d907d7c14d4a930f6117785cabad.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADCGLWgAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAAJjcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANQ2AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAALBcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAI
NwAAAAAAAEgAAAACAAUAtCMAAGgSAAABAAAAAAAAABw2AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwDyAgAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKdA8AAAEKAigQAAAKbxEAAApyJwAAcG8SAAAKbxMAAAp0DwAAAQsCKBAAAApvEQAACnJLAABw
bxIAAApvEwAACnQPAAABDAIoEAAACm8RAAAKcmcAAHBvEgAACm8TAAAKdA8AAAENAigQAAAKbxEA
AApylwAAcG8SAAAKbxMAAAp0DwAAARMEAigQAAAKbxEAAApyvQAAcG8SAAAKbxMAAAp0DwAAARMF
Bm8UAAAKB28UAAAKCG8UAAAKCW8UAAAKEQRvFAAAChEFbxQAAApy9wAAcHMVAAAKEwZy/AEAcBEG
cxYAAAoGbxcAAAomcpkCAHARBnMWAAAKB28XAAAKJnIHAwBwEQZzFgAACghvFwAACiZyYwMAcBEG
cxYAAAoJbxcAAAomctMDAHARBnMWAAAKEQRvFwAACiZyOQQAcBEGcxYAAAoRBW8XAAAKJhEGbxgA
AAoRBG8ZAAAKEwcRBxZyswQAcG8aAAAKEQRvGwAAChEHbxwAAAoGbx0AAApywQQAcG8eAAAKBm8d
AAAKbx8AAAoKB28dAAAKctsEAHBvHgAACgdvHQAACm8fAAAKCwhvHQAACnL9BABwbx4AAAoIbx0A
AApvHwAACgwJbx0AAApy/QQAcG8eAAAKCW8dAAAKbx8AAAoNEQRvHQAACnIRBQBwbx4AAAoRBG8d
AAAKbx8AAAoTBBEFbx0AAApy2wQAcG8eAAAKEQVvHQAACm8fAAAKEwUCKBAAAApvEQAACnIBAABw
bxIAAAoGbyAAAAoCKBAAAApvEQAACnInAABwbxIAAAoHbyAAAAoCKBAAAApvEQAACnJLAABwbxIA
AAoIbyAAAAoCKBAAAApvEQAACnJnAABwbxIAAAoJbyAAAAoCKBAAAApvEQAACnKXAABwbxIAAAoR
BG8gAAAKAigQAAAKbxEAAApyvQAAcG8SAAAKEQVvIAAACgIoEAAAChZvIQAACioeAigiAAAKKh4C
KCMAAAoqrn4BAAAELR5yGwUAcNADAAACKCQAAApvJQAACnMmAAAKgAEAAAR+AQAABCoafgIAAAQq
HgKAAgAABCoafgMAAAQqHgIoJwAACioucwgAAAaAAwAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4z
MDMxOQAAAAAFAGwAAABIBAAAI34AALQEAABsBgAAI1N0cmluZ3MAAAAAIAsAAJAFAAAjVVMAsBAA
ABAAAAAjR1VJRAAAAMAQAACoAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAA
JQAAAAUAAAAGAAAACQAAAAEAAAAnAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAAB
AAAAAQAAAAAAwgMBAAAAAAAGAHECAwUGAAADAwUGAL0B8AQPAHcFAAAGAOoBTgQGAFQCTgQGADUC
TgQGAOcCTgQGAJECTgQGAKoCTgQGAAECTgQGABwCOAMKAMUCcQMKADYBcQMOAKIAVQAOAH8EFQYO
AE0GVQAGAAgEAQQGAKAB8AQGAPMFAQQGALYEIwUGAKAEOQQSAHABrAMSANEBrAMSAFIBJAQGAIUB
AwUKAJoDcQMWALkF4QAWALQA4QAOANQEFQYOAMYEjQQOAHIEjQQOAGAEVQAOADQGVQAGAAEBAQQG
AL0AAQQGAGAGTgQAAAAAJQAAAAAAAQABAAEAEAAZBAEAOQABAAEAAAAQACoFhgVRAAEAAwAAARAA
wwWGBWUAAwAHAAMBAADcBQAASQAEAAoAEQANBKkAEQAmAa0AEQCSALEABgZNALUAVoDMBbgAVoAG
AbgAUCAAAAAAhgAfBAYAAQBOIwAAAACGGOMEBgABAFYjAAAAAIMY4wQGAAEAXiMAAAAAkwiyBLwA
AQCKIwAAAACTCA4BwQABAJEjAAAAAJMIGgHGAAEAmSMAAAAAlgj6BcwAAgCgIwAAAACGGOMEBgAC
AKgjAAAAAJEY6QTRAAIAAAABADIDCQDjBAEAEQDjBAYAGQDjBAoAKQDjBBAAMQDjBBAAOQDjBBAA
QQDjBBAASQDjBBAAUQDjBBAAWQDjBBAAYQDjBBAAaQDjBAYAmQDjBAYAwQDjBBUA0QDjBAYAcQDU
BS4A2QC1BTMA4QDvAzgA6QAeAz4AeQCsBAYAgQDjBBAA8QDjBEIA+QDqA0kAAQFqAQYAeQBVBk8A
iQD4A1QAeQDqBVoACQGOAGAAeQA9BmYAEQErBhAAEQGsAGwA6QAoA3EA2QAGBgEAcQDjBAYAoQDj
BAYAGQHPAHYAGQFcBn8AqQDjBIUAyQDjBAYACAAUAJ8ACAAYAKQAKQBzAAwBLgALAOQALgATAO0A
LgAbAAwBLgAjABUBLgArAD4BLgAzAD4BLgA7AD4BLgBDABUBLgBLAEQBLgBTAD4BLgBbAFsBQwBj
AKQASQBzAAwBYQB7AKQAYwBrAKQAGwADAAEABAADAAAAtgTVAAAALgHaAAAA/gXfAAIABAADAAIA
BQAFAAEABgAFAAIABwAHAASAAAABAAAAOCRoRQAAAAAAAGoAAAAEAAAAAAAAAAAAAACNAGEAAAAA
AA4AAAAAAAAAAAAAAJYAUgMAAAAABAAAAAAAAAAAAAAAjQBVAAAAAAAEAAAAAAAAAAAAAACNAAEE
AAAAAA4AAAAAAAAAAAAAAJYALgAAAAAAAAAAAAEAAAA0BQAABQACAAAAAFNUX2JmM2IwZTViMjMw
ZDQwNzA5M2E1YWM0NzZiMTQwNjA5ADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdl
ZERUUwB2YWx1ZV9fAFN5c3RlbS5EYXRhAG1zY29ybGliAFNUXzEyMjdkOTA3ZDdjMTRkNGE5MzBm
NjExNzc4NWNhYmFkAEFkZABkZWZhdWx0SW5zdGFuY2UARGF0YVRhYmxlAFRvVGFibGUAVmFyaWFi
bGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3Vy
Y2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdz
QmFzZQBDbG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0
ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlv
bkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhh
dGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0
QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBh
bnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9W
YWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
U2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlw
dE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF8xMjI3ZDkwN2Q3YzE0ZDRhOTMw
ZjYxMTc3ODVjYWJhZC5kbGwARmlsbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNv
dXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0
aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAERiQ29ubmVjdGlvbgBTcWxD
b25uZWN0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBDbGVhcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAERiRGF0YUFkYXB0ZXIAU3FsRGF0YUFkYXB0ZXIALmN0b3IALmNjdG9yAFN5c3Rl
bS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNv
dXJjZXMAU1RfYTNhOGNlNTMzYTFmNDY1NGE0YTQzNTlkOWZmNzdlYWQuUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2EzYThjZTUzM2ExZjQ2NTRhNGE0MzU5
ZDlmZjc3ZWFkLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9E
dHMAU2NyaXB0UmVzdWx0cwBnZXRfUm93cwBPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1
bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AHNldF9Tb3J0AERhdGFWaWV3AGdldF9EZWZhdWx0Vmll
dwBEYXRhUm93AE5ld1JvdwBnZXRfQXNzZW1ibHkAAAAAACVVAHMAZQByADoAOgBBAGcAcgBlAGUA
bQBlAG4AdABfAEQAdAAAI1UAcwBlAHIAOgA6AEUAeABjAGgAYQBuAGcAZQBfAEQAdAAAG1UAcwBl
AHIAOgA6AEkAbgBpAHQAXwBEAHQAAC9VAHMAZQByADoAOgBMAGkAcwB0AF8AQQBnAHIAZQBlAG0A
ZQBuAHQAXwBEAHQAACVVAHMAZQByADoAOgBMAGkAcwB0AF8AUABsAGEAbgBfAEQAdAAAOVUAcwBl
AHIAOgA6AEwAaQBzAHQAXwBRAHUAYQByAHQAZQByAF8AQQBjAHQAdQBhAGwAXwBEAHQAAIEDRABh
AHQAYQAgAFMAbwB1AHIAYwBlACAAPQAgAEEARwBSAEMATABGAFIAUwBTAFEATABRAEEALgBhAGcA
cgBtAGYAZwAuAHMAdABtAG0AZgBnAC4AYwBvAG0AXABTAFIATQBUAFMAVAA7ACAASQBuAHQAZQBn
AHIAYQB0AGUAZAAgAFMAZQBjAHUAcgBpAHQAeQA9AHQAcgB1AGUAOwAgAEkAbgBpAHQAaQBhAGwA
IABDAGEAdABhAGwAbwBnACAAPQAgAFIATwBZAEEATABUAFkAOwAgAEMAbwBuAG4AZQBjAHQAaQBv
AG4AIABUAGkAbQBlAG8AdQB0ACAAPQAgADAAAICbUwBFAEwARQBDAFQAIAAqACAARgBSAE8ATQAg
AFsAUgBPAFkAQQBMAFQAWQBdAC4AWwBkAGIAbwBdAC4AWwBSAE8AWQBBAEwAVABZAF8AQQBHAFIA
RQBFAE0ARQBOAFQAXQAgAFcASABFAFIARQAgAFsATQBPAEQARQBMAF8AQQBDAFQASQBWAEUAXQAg
AD0AIAAnAFkAJwAgAAFtUwBFAEwARQBDAFQAIAAqACAARgBSAE8ATQAgAFsAUgBPAFkAQQBMAFQA
WQBdAC4AWwBkAGIAbwBdAC4AWwBSAE8AWQBBAEwAVABZAF8ARQBYAEMASABBAE4ARwBFAF8AUgBB
AFQARQBdACAAAFtTAEUATABFAEMAVAAgACoAIABGAFIATwBNACAAWwBSAE8AWQBBAEwAVABZAF0A
LgBbAGQAYgBvAF0ALgBbAFIATwBZAEEATABUAFkAXwBJAE4ASQBUAF0AIAAAb1MARQBMAEUAQwBU
ACAAKgAgAEYAUgBPAE0AIABbAFIATwBZAEEATABUAFkAXQAuAFsAZABiAG8AXQAuAFsAUgBPAFkA
QQBMAFQAWQBfAEwASQBTAFQAXwBBAEcAUgBFAEUATQBFAE4AVABdACAAAGVTAEUATABFAEMAVAAg
ACoAIABGAFIATwBNACAAWwBSAE8AWQBBAEwAVABZAF0ALgBbAGQAYgBvAF0ALgBbAFIATwBZAEEA
TABUAFkAXwBMAEkAUwBUAF8AUABMAEEATgBdACAAAHlTAEUATABFAEMAVAAgACoAIABGAFIATwBN
ACAAWwBSAE8AWQBBAEwAVABZAF0ALgBbAGQAYgBvAF0ALgBbAFIATwBZAEEATABUAFkAXwBMAEkA
UwBUAF8AUQBVAEEAUgBUAEUAUgBfAEEAQwBUAFUAQQBMAF0AIAAADUEAQwBUAFUAQQBMAAAZQQBH
AFIARQBFAE0ARQBOAFQAXwBJAEQAACFRAFUAQQBSAFQARQBSACAAKAB5AHkAeQB5AFEAcQApAAAT
QQBHAFIARQBFAE0ARQBOAFQAAAlQAEwAQQBOAABxUwBUAF8AYQAzAGEAOABjAGUANQAzADMAYQAx
AGYANAA2ADUANABhADQAYQA0ADMANQA5AGQAOQBmAGYANwA3AGUAYQBkAC4AUAByAG8AcABlAHIA
dABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAABulEBceMWDTLtklwteEnxrAAQgAQEIAyAA
AQUgAQEREQQgAQEOBSABARFdEgcIEj0SPRI9Ej0SPRI9EkESRQQgABJtBCAAEnEFIAESdRwDIAAc
BiACAQ4SQQUgAQgSPQQgABJFBSACAQgcBSAAEoCFBSABARJFBSAAEoCJBCAAEj0EIAEBHAgAARKA
jRGAkQUgABKAlQcgAgEOEoCVCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElUDBhJZAwYS
EAIGCAMGERQEAAASVQQAABJZBQABARJZBAAAEhADAAABBAgAElUECAASWQQIABIQCAEACAAAAAAA
HgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9hM2E4Y2U1MzNh
MWY0NjU0YTRhNDM1OWQ5ZmY3N2VhZAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIyAABJAQAa
Lk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQg
RnJhbWV3b3JrIDQuNQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAD8NgAAAAAAAAAAAAAWNwAAACAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAACDcAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUA
IAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAGhFOCQAAAEAaEU4JD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AYQAzAGEAOABjAGUANQAzADMAYQAxAGYANAA2ADUANABhADQAYQA0ADMANQA5AGQAOQBm
AGYANwA3AGUAYQBkAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADkA
MgA3ADIALgAxADcANwA2ADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AMQAyADIANwBkADkAMAA3AGQANwBjADEANABkADQAYQA5ADMAMABmADYAMQAxADcANwA4ADUA
YwBhAGIAYQBkAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADIAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwAxADIAMgA3AGQAOQAwADcAZAA3AGMAMQA0AGQANABhADkAMwAwAGYANgAxADEA
NwA3ADgANQBjAGEAYgBhAGQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AYQAzAGEAOABjAGUANQAzADMAYQAxAGYANAA2ADUANABhADQAYQA0ADMANQA5AGQA
OQBmAGYANwA3AGUAYQBkAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA5ADIANwAyAC4AMQA3ADcANgA4AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA5ADIANwAyAC4AMQA3ADcANgA4AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAACg3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{95965FC6-E478-48E7-85BA-30E16D7B69CD}"
      DTS:From="Package\Create permanent tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Create temporary tables" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{703E1857-3521-41B5-A362-3733E5CF6C46}"
      DTS:From="Package\Create temporary tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Create datatables" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{F99517B8-4AF3-4B37-A9E1-C95394103CDB}"
      DTS:From="Package\Create datatables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Tables from SQL to DataTable" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{7274C970-C322-4C42-B049-2F762C68BBB7}"
      DTS:From="Package\Tables from SQL to DataTable"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Delete Royalty for periods to be processed" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{5BCDAFE2-0452-4337-A095-FF5915CDC6A8}"
      DTS:From="Package\Delete Royalty for periods to be processed"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Foreach Plan" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{864D12CB-0814-4A8E-A97F-D3922E8C0B65}"
      DTS:From="Package\Foreach Plan"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Reotg All" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{3ABFD908-D18F-4361-A6D6-93F80EAD17E5}"
      DTS:From="Package\Reotg All"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Drop temporary tables" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{C06354C0-C5E3-4AA4-81A9-07F14DFFA428}"
      DTS:From="Package\Drop temporary tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Refresh Royalty_Cube" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{E933B543-3B94-4D0D-8B1A-2C81DB4F1F23}"
      DTS:From="Package\Refresh Royalty_Cube"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Royalty - Succesfully run" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="195,42"
          Id="Package\Create permanent tables"
          TopLeft="47.5,5.5" />
        <NodeLayout
          Size="195,42"
          Id="Package\Royalty - Succesfully run"
          TopLeft="47.5000000000001,1131.5" />
        <NodeLayout
          Size="193,42"
          Id="Package\Create temporary tables"
          TopLeft="48.5,107.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="145,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="162,42"
          Id="Package\Create datatables"
          TopLeft="64,209.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="145,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="221,42"
          Id="Package\Tables from SQL to DataTable"
          TopLeft="34.5,311.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="145,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="279,42"
          Id="Package\Delete Royalty for periods to be processed"
          TopLeft="5.50000000000006,413.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="145,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="161,42"
          Id="Package\Foreach Plan\Foreach Agreement\Elaborate Royalty"
          TopLeft="5.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="172,102"
          Size="172,146"
          Id="Package\Foreach Plan\Foreach Agreement"
          TopLeft="5.50000000000003,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="183,206"
          Size="183,250"
          Id="Package\Foreach Plan"
          TopLeft="53.5000000000001,515.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="145,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="121,42"
          Id="Package\Reotg All"
          TopLeft="84.5000000000001,825.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="145,765.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="185,42"
          Id="Package\Drop temporary tables"
          TopLeft="52.5000000000001,927.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="145,867.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="182,42"
          Id="Package\Refresh Royalty_Cube"
          TopLeft="54.0000000000001,1029.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="145,969.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="145,1071.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>